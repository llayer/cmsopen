{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "purple-resource",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import glob\n",
    "import importlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "approximate-greene",
   "metadata": {},
   "outputs": [],
   "source": [
    "import xgboost as xgb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "supreme-woman",
   "metadata": {},
   "outputs": [],
   "source": [
    "import shap"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "modern-elevation",
   "metadata": {},
   "outputs": [],
   "source": [
    "t = samples[\"QCD\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "changing-belize",
   "metadata": {},
   "outputs": [],
   "source": [
    "    features = ['ht', 'aplanarity', 'sphericity', 'chargeEta', 'met', 'deltaPhiTauMet', 'mt', 'mTauJet']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "occupied-physiology",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Jet_pt</th>\n",
       "      <th>Jet_px</th>\n",
       "      <th>Jet_py</th>\n",
       "      <th>Jet_pz</th>\n",
       "      <th>Jet_e</th>\n",
       "      <th>Jet_eta</th>\n",
       "      <th>Jet_phi</th>\n",
       "      <th>Jet_mass</th>\n",
       "      <th>Jet_csvDisc</th>\n",
       "      <th>Tau_pt</th>\n",
       "      <th>...</th>\n",
       "      <th>met</th>\n",
       "      <th>deltaPhiTauMet</th>\n",
       "      <th>mt</th>\n",
       "      <th>mTauJet</th>\n",
       "      <th>Jet_flavour</th>\n",
       "      <th>Jet_btagSF</th>\n",
       "      <th>Jet_btagSF_up</th>\n",
       "      <th>Jet_btagSF_down</th>\n",
       "      <th>Jet_beff</th>\n",
       "      <th>btag_weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[138.04616, 94.67506, 94.59278, 48.80328]</td>\n",
       "      <td>[131.60617, -86.533485, -87.61679, 42.393177]</td>\n",
       "      <td>[41.67204, 38.40994, -35.65239, 24.17806]</td>\n",
       "      <td>[-190.03336, -42.185463, -4.07461, -14.111844]</td>\n",
       "      <td>[235.4966, 105.60841, 96.40804, 51.58028]</td>\n",
       "      <td>[-1.1243012, -0.4320171, -0.043061968, -0.2852...</td>\n",
       "      <td>[0.3066539, 2.723845, -2.7551413, 0.51831686]</td>\n",
       "      <td>[17.006762, 20.252317, 18.169027, 8.923069]</td>\n",
       "      <td>[0.027888818, 0.03272759, 0.11864211, 0.038453...</td>\n",
       "      <td>[56.046867]</td>\n",
       "      <td>...</td>\n",
       "      <td>40.836891</td>\n",
       "      <td>2.505111</td>\n",
       "      <td>90.878182</td>\n",
       "      <td>556.008976</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0168595, 1.0231007, 1.0230346, 0.98063695]</td>\n",
       "      <td>[1.142705, 1.1546776, 1.1545889, 1.097489]</td>\n",
       "      <td>[0.8910142, 0.8915237, 0.8914801, 0.8637849]</td>\n",
       "      <td>[0.013968413767067263, 0.013173367102763775, 0...</td>\n",
       "      <td>0.052344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>[83.51601, 81.088104, 55.010494, 37.194473]</td>\n",
       "      <td>[46.21714, -17.724367, 2.3489554, -24.922897]</td>\n",
       "      <td>[69.562195, -79.12728, 54.96032, 27.609385]</td>\n",
       "      <td>[-115.61945, 32.780437, -25.742817, 24.025312]</td>\n",
       "      <td>[143.05504, 89.04772, 62.12173, 44.837963]</td>\n",
       "      <td>[-1.1288804, 0.393985, -0.45237416, 0.60781515]</td>\n",
       "      <td>[0.98436445, -1.791157, 1.5280832, 2.3050992]</td>\n",
       "      <td>[11.043718, 16.723007, 13.04847, 7.056795]</td>\n",
       "      <td>[0.09147409, 0.027699659, 0.2067171, 0.055629585]</td>\n",
       "      <td>[79.89664]</td>\n",
       "      <td>...</td>\n",
       "      <td>62.331497</td>\n",
       "      <td>0.839982</td>\n",
       "      <td>57.549917</td>\n",
       "      <td>545.260229</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.9858833, 1.0116996, 0.9870567, 0.9680401]</td>\n",
       "      <td>[1.1035551, 1.1393735, 1.1061639, 1.080444]</td>\n",
       "      <td>[0.86821145, 0.8840256, 0.8679494, 0.8556362]</td>\n",
       "      <td>[0.01369657710465184, 0.013087348035605855, 0....</td>\n",
       "      <td>0.052247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>[151.74925, 61.247166, 54.219936, 48.46743]</td>\n",
       "      <td>[-88.32033, 57.01285, 14.468231, 27.437374]</td>\n",
       "      <td>[-123.39918, -22.377449, -52.253914, 39.9535]</td>\n",
       "      <td>[-85.78932, -44.16138, -63.274807, -32.69142]</td>\n",
       "      <td>[175.35788, 76.56715, 83.95073, 59.156662]</td>\n",
       "      <td>[-0.5388745, -0.66981435, -0.9946761, -0.6316535]</td>\n",
       "      <td>[-2.1920006, -0.37402272, -1.3006802, 0.9690302]</td>\n",
       "      <td>[19.045708, 12.691906, 10.208972, 9.03825]</td>\n",
       "      <td>[0.021052063, 0.043717083, 0.052314077, 0.1681...</td>\n",
       "      <td>[138.0236]</td>\n",
       "      <td>...</td>\n",
       "      <td>26.476046</td>\n",
       "      <td>1.461593</td>\n",
       "      <td>80.706412</td>\n",
       "      <td>529.748134</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.061042, 0.99328905, 0.9631169, 0.9802834]</td>\n",
       "      <td>[1.2051424, 1.1145773, 1.0743665, 1.097011]</td>\n",
       "      <td>[0.9169416, 0.8720009, 0.8518673, 0.8635557]</td>\n",
       "      <td>[0.014515169541939321, 0.013410103866781771, 0...</td>\n",
       "      <td>0.054499</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>[133.42097, 116.53707, 97.29162, 81.064026, 54...</td>\n",
       "      <td>[-128.03886, -98.46585, 51.985607, 73.53832, 5...</td>\n",
       "      <td>[37.51276, 62.332695, -82.2384, -34.109993, 14...</td>\n",
       "      <td>[114.63249, -66.60281, 112.296036, 89.610245, ...</td>\n",
       "      <td>[178.20181, 136.02567, 149.1299, 121.856476, 1...</td>\n",
       "      <td>[0.7782154, -0.54424727, 0.9863331, 0.9539916,...</td>\n",
       "      <td>[2.856589, 2.5772336, -1.0070841, -0.43430325,...</td>\n",
       "      <td>[28.53282, 22.04896, 12.793267, 15.736255, 7.4...</td>\n",
       "      <td>[0.0122563895, 0.26893792, 0.063082196, 0.0471...</td>\n",
       "      <td>[48.086525]</td>\n",
       "      <td>...</td>\n",
       "      <td>36.771347</td>\n",
       "      <td>2.707376</td>\n",
       "      <td>82.125804</td>\n",
       "      <td>855.459773</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0505327, 1.0394765, 0.9950504, 0.98415107, ...</td>\n",
       "      <td>[1.1912624, 1.176567, 1.1152315, 1.1013429, 1....</td>\n",
       "      <td>[0.90980303, 0.9023862, 0.87486917, 0.8669592,...</td>\n",
       "      <td>[0.013918866567048537, 0.013982983517991534, 0...</td>\n",
       "      <td>0.066380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>[64.06168, 54.635235, 46.835938, 29.734083]</td>\n",
       "      <td>[64.014366, -48.904415, -46.812305, -29.131674]</td>\n",
       "      <td>[-2.4619014, 24.359125, 1.4876113, -5.9549384]</td>\n",
       "      <td>[171.27898, 72.67121, 25.811522, -8.328592]</td>\n",
       "      <td>[183.1509, 91.37555, 53.98739, 31.673664]</td>\n",
       "      <td>[1.7098631, 1.0966805, 0.5264485, -0.27656344]</td>\n",
       "      <td>[-0.038439635, 2.6794689, 3.1098251, -2.939956]</td>\n",
       "      <td>[10.191406, 9.131146, 7.4025974, 7.052645]</td>\n",
       "      <td>[0.01014569, 0.06308092, 0.08847816, 0.29444635]</td>\n",
       "      <td>[63.473324]</td>\n",
       "      <td>...</td>\n",
       "      <td>26.240599</td>\n",
       "      <td>2.125188</td>\n",
       "      <td>71.312275</td>\n",
       "      <td>312.192141</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.90973675, 0.96347195, 0.97855663, 0.95953095]</td>\n",
       "      <td>[1.006585, 1.0748233, 1.0946761, 1.0689148]</td>\n",
       "      <td>[0.8128885, 0.8521206, 0.8624371, 0.8501471]</td>\n",
       "      <td>[0.0190282832427996, 0.01307328941340032, 0.01...</td>\n",
       "      <td>0.059401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>[114.352646, 74.213425, 59.804546, 50.571167]</td>\n",
       "      <td>[-65.29724, 47.15533, -39.96081, 44.15195]</td>\n",
       "      <td>[93.87651, -57.306255, -44.494015, -24.658628]</td>\n",
       "      <td>[13.571767, 171.61836, -8.216584, -23.944525]</td>\n",
       "      <td>[115.55312, 187.11679, 61.333313, 56.656246]</td>\n",
       "      <td>[0.11840658, 1.5752503, -0.13696203, -0.4573683]</td>\n",
       "      <td>[2.1785398, -0.8822678, -2.3025699, -0.5093416]</td>\n",
       "      <td>[9.581379, 7.2251577, 10.84802, 8.89646]</td>\n",
       "      <td>[0.04751977, 0.1321929, 0.01214194, 0.1331131]</td>\n",
       "      <td>[52.36338]</td>\n",
       "      <td>...</td>\n",
       "      <td>26.871693</td>\n",
       "      <td>1.401023</td>\n",
       "      <td>48.363730</td>\n",
       "      <td>478.648622</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0379466, 0.97914666, 0.99186665, 0.98248756]</td>\n",
       "      <td>[1.1745274, 1.0949427, 1.1126579, 1.0999906]</td>\n",
       "      <td>[0.9013657, 0.8633506, 0.87107545, 0.8649845]</td>\n",
       "      <td>[0.012777450268024841, 0.01617094676637805, 0....</td>\n",
       "      <td>0.052456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>[135.52043, 107.95586, 102.08418, 65.905945, 6...</td>\n",
       "      <td>[76.85804, -107.89555, -39.889767, -59.481544,...</td>\n",
       "      <td>[-111.61823, 3.6077018, 93.96801, 28.382019, -...</td>\n",
       "      <td>[73.10294, 253.13187, -28.523365, 80.74549, 89...</td>\n",
       "      <td>[155.73433, 275.85565, 109.676636, 104.69358, ...</td>\n",
       "      <td>[0.51619273, 1.5879856, -0.27589673, 1.0319827...</td>\n",
       "      <td>[-0.96777624, 3.1081681, 1.9722465, 2.696386, ...</td>\n",
       "      <td>[23.309912, 19.134348, 28.181583, 9.86505, 11....</td>\n",
       "      <td>[0.05000708, 0.10928215, 0.07491122, 0.1135867...</td>\n",
       "      <td>[63.76649]</td>\n",
       "      <td>...</td>\n",
       "      <td>26.312853</td>\n",
       "      <td>2.078124</td>\n",
       "      <td>70.612533</td>\n",
       "      <td>965.885780</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.051814, 1.0015051, 1.0289179, 0.9727473, 0....</td>\n",
       "      <td>[1.1929598, 1.1234161, 1.1624675, 1.0867411, 1...</td>\n",
       "      <td>[0.91066813, 0.8795941, 0.8953684, 0.8587536, ...</td>\n",
       "      <td>[0.01379186357098829, 0.016440199112067806, 0....</td>\n",
       "      <td>0.066504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>[98.66662, 93.87883, 63.005302, 54.710545]</td>\n",
       "      <td>[-49.61048, 41.990833, -33.5833, 51.179928]</td>\n",
       "      <td>[-85.28717, 83.96431, 53.308815, -19.335423]</td>\n",
       "      <td>[-190.32004, 305.6962, 125.152336, 51.959995]</td>\n",
       "      <td>[214.72542, 320.16498, 140.2133, 76.1247]</td>\n",
       "      <td>[-1.4113882, 1.8965187, 1.4375268, 0.84537363]</td>\n",
       "      <td>[-2.097642, 1.107066, 2.1329663, -0.36121714]</td>\n",
       "      <td>[12.255108, 15.56337, 5.1955137, 10.093855]</td>\n",
       "      <td>[0.1562875, 0.66403234, 0.16987795, 0.04728444]</td>\n",
       "      <td>[62.90077]</td>\n",
       "      <td>...</td>\n",
       "      <td>31.508875</td>\n",
       "      <td>0.827210</td>\n",
       "      <td>35.786572</td>\n",
       "      <td>804.301845</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.99591357, 0.92240024, 0.9704262, 0.9635362]</td>\n",
       "      <td>[1.1163281, 1.0224372, 1.0837618, 1.074906]</td>\n",
       "      <td>[0.87549907, 0.8223632, 0.8570906, 0.8521665]</td>\n",
       "      <td>[0.012465983122130899, 0.020749211588906247, 0...</td>\n",
       "      <td>0.056219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>[91.55638, 85.14389, 76.69449, 43.115036]</td>\n",
       "      <td>[-80.11284, 81.10754, 32.125847, -42.42531]</td>\n",
       "      <td>[44.32273, 25.904629, -69.641754, -7.681109]</td>\n",
       "      <td>[-156.71437, -21.770115, 11.597469, -20.277891]</td>\n",
       "      <td>[181.93027, 88.273476, 79.14735, 48.373898]</td>\n",
       "      <td>[-1.3067226, -0.25297913, 0.15064602, -0.45450...</td>\n",
       "      <td>[2.6362548, 0.30914608, -1.1385839, -2.9624827]</td>\n",
       "      <td>[12.516205, 8.293774, 15.740308, 8.3627205]</td>\n",
       "      <td>[0.08918979, 0.098830275, 0.029270329, 0.18727...</td>\n",
       "      <td>[48.039143]</td>\n",
       "      <td>...</td>\n",
       "      <td>40.664928</td>\n",
       "      <td>0.536617</td>\n",
       "      <td>23.435887</td>\n",
       "      <td>603.062012</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.9913492, 1.0152036, 1.0078055, 0.9745616]</td>\n",
       "      <td>[1.1105239, 1.144082, 1.1341367, 1.0892719]</td>\n",
       "      <td>[0.87217444, 0.8863253, 0.8814743, 0.85985124]</td>\n",
       "      <td>[0.011869550186302001, 0.012957363724278073, 0...</td>\n",
       "      <td>0.050219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>[92.86159, 72.03524, 49.268333, 45.874798]</td>\n",
       "      <td>[-81.01813, 68.9223, -45.04351, -4.9028487]</td>\n",
       "      <td>[45.379932, -20.947363, -19.961231, -45.61205]</td>\n",
       "      <td>[6.8265443, -79.315544, 36.482483, -24.657242]</td>\n",
       "      <td>[94.568, 107.729675, 62.021763, 53.256203]</td>\n",
       "      <td>[0.073447056, -0.95106375, 0.68551815, -0.5144...</td>\n",
       "      <td>[2.6310124, -0.29505584, -2.724446, -1.6778754]</td>\n",
       "      <td>[16.529661, 11.209465, 9.399953, 11.124149]</td>\n",
       "      <td>[0.0068891286, 0.011915908, 0.0099439705, 0.16...</td>\n",
       "      <td>[72.2287]</td>\n",
       "      <td>...</td>\n",
       "      <td>38.407440</td>\n",
       "      <td>2.649798</td>\n",
       "      <td>102.172657</td>\n",
       "      <td>446.791872</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0216342, 0.97750413, 0.9811255, 0.97753227]</td>\n",
       "      <td>[1.1527119, 1.0928394, 1.0981494, 1.0932908]</td>\n",
       "      <td>[0.8905567, 0.8621689, 0.8641015, 0.8617738]</td>\n",
       "      <td>[0.012711762777720037, 0.014003238533993203, 0...</td>\n",
       "      <td>0.053937</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>[137.96857, 85.26039, 58.87274, 47.439617]</td>\n",
       "      <td>[103.16463, -78.03881, -51.608772, -43.85474]</td>\n",
       "      <td>[-91.60997, 34.340626, 28.329035, 18.090847]</td>\n",
       "      <td>[7.608752, -225.56033, -25.681833, -55.129963]</td>\n",
       "      <td>[138.87318, 241.69301, 64.89157, 73.181656]</td>\n",
       "      <td>[0.055120528, -1.6999698, -0.42345685, -0.9914...</td>\n",
       "      <td>[-0.7261444, 2.7270477, 2.6395798, 2.7503421]</td>\n",
       "      <td>[13.875892, 16.392418, 9.2390375, 8.107058]</td>\n",
       "      <td>[0.11134139, 0.11632703, 0.018040642, 0.13155061]</td>\n",
       "      <td>[51.92619]</td>\n",
       "      <td>...</td>\n",
       "      <td>27.149517</td>\n",
       "      <td>0.438364</td>\n",
       "      <td>16.337669</td>\n",
       "      <td>477.517783</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0532824, 0.9191082, 0.9909418, 0.9571842]</td>\n",
       "      <td>[1.1949036, 1.0183693, 1.1114097, 1.0667269]</td>\n",
       "      <td>[0.9116612, 0.81984705, 0.870474, 0.84764147]</td>\n",
       "      <td>[0.012871937815849707, 0.014255316371421484, 0...</td>\n",
       "      <td>0.051872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>[100.08818, 97.01478, 96.11395, 50.343807]</td>\n",
       "      <td>[46.521812, -12.519229, -67.927284, 49.895935]</td>\n",
       "      <td>[-88.61921, -96.20362, 67.99835, -6.7003436]</td>\n",
       "      <td>[-278.6798, -117.47398, -150.77289, -48.39831]</td>\n",
       "      <td>[296.3432, 152.7961, 179.11838, 70.43129]</td>\n",
       "      <td>[-1.7479497, -1.0229245, -1.2322708, -0.85378236]</td>\n",
       "      <td>[-1.0873783, -1.7002017, 2.3556716, -0.13348779]</td>\n",
       "      <td>[11.799421, 11.603613, 10.632088, 9.147164]</td>\n",
       "      <td>[0.11576932, 0.07264657, 0.04010181, 0.017060775]</td>\n",
       "      <td>[112.60954]</td>\n",
       "      <td>...</td>\n",
       "      <td>20.105135</td>\n",
       "      <td>2.415411</td>\n",
       "      <td>88.973333</td>\n",
       "      <td>526.360005</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.92459476, 0.99487543, 0.99430364, 0.95975673]</td>\n",
       "      <td>[1.0251215, 1.1150093, 1.1142826, 1.070041]</td>\n",
       "      <td>[0.8240681, 0.87474155, 0.8743247, 0.84947246]</td>\n",
       "      <td>[0.015427882683808758, 0.013742456191376427, 0...</td>\n",
       "      <td>0.053366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>[84.550186, 57.80859, 47.946735, 35.94]</td>\n",
       "      <td>[-3.718118, 28.171354, -36.699295, -22.38516]</td>\n",
       "      <td>[-84.46839, 50.47978, 30.855326, 28.117397]</td>\n",
       "      <td>[-240.68903, 10.959513, -30.233086, -64.97562]</td>\n",
       "      <td>[255.40932, 59.75763, 57.100212, 74.56346]</td>\n",
       "      <td>[-1.7688208, 0.1884651, -0.594849, -1.3542668]</td>\n",
       "      <td>[-1.6147858, 1.0617769, 2.442487, 2.2431743]</td>\n",
       "      <td>[12.408811, 10.44174, 6.8924184, 6.7967234]</td>\n",
       "      <td>[0.030653033, 0.43383268, 0.0395212, 0.25034556]</td>\n",
       "      <td>[51.07487]</td>\n",
       "      <td>...</td>\n",
       "      <td>23.418480</td>\n",
       "      <td>2.213313</td>\n",
       "      <td>61.860092</td>\n",
       "      <td>356.885326</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.9188239, 0.98987967, 0.97973394, 0.9465277]</td>\n",
       "      <td>[1.018016, 1.1099758, 1.096268, 1.0529779]</td>\n",
       "      <td>[0.8196318, 0.86978346, 0.8631998, 0.84007746]</td>\n",
       "      <td>[0.014861419152371038, 0.012343787244185651, 0...</td>\n",
       "      <td>0.052533</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>[94.55912, 92.35655, 48.504562, 38.63664]</td>\n",
       "      <td>[74.570244, -86.21327, 25.705482, 36.65526]</td>\n",
       "      <td>[58.14384, -33.12104, 41.13296, -12.214001]</td>\n",
       "      <td>[-107.32323, -24.321844, -21.515547, -34.32654]</td>\n",
       "      <td>[144.84926, 96.13644, 53.43407, 52.161453]</td>\n",
       "      <td>[-0.97367716, -0.26039457, -0.4301861, -0.8002...</td>\n",
       "      <td>[0.6622516, -2.774802, 1.0122428, -0.32164207]</td>\n",
       "      <td>[22.838684, 10.996848, 6.291963, 7.050972]</td>\n",
       "      <td>[0.014299693, 0.058481734, 0.20415834, 0.30114...</td>\n",
       "      <td>[58.597122]</td>\n",
       "      <td>...</td>\n",
       "      <td>34.795616</td>\n",
       "      <td>1.664699</td>\n",
       "      <td>66.784776</td>\n",
       "      <td>579.027314</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.9933073, 1.0212228, 0.9803225, 0.94909465]</td>\n",
       "      <td>[1.1130157, 1.1521602, 1.0970639, 1.0562927]</td>\n",
       "      <td>[0.8735989, 0.89028555, 0.8635811, 0.8418966]</td>\n",
       "      <td>[0.014055711730130335, 0.0127949524793223, 0.0...</td>\n",
       "      <td>0.053272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>[98.36897, 55.022556, 47.308754, 37.420692, 32...</td>\n",
       "      <td>[73.01057, -53.108112, 12.4729, 23.374151, 1.6...</td>\n",
       "      <td>[-65.92353, 14.38785, -45.63491, 29.222546, -3...</td>\n",
       "      <td>[-277.70694, -179.01707, -190.5178, -169.30717...</td>\n",
       "      <td>[295.0351, 187.66774, 196.39731, 173.54243, 56...</td>\n",
       "      <td>[-1.760975, -1.8957072, -2.101268, -2.214633, ...</td>\n",
       "      <td>[-0.7344323, 2.877027, -1.3039933, 0.89613646,...</td>\n",
       "      <td>[15.751413, 12.024527, 6.062262, 7.193535, 5.8...</td>\n",
       "      <td>[0.045663286, 0.11581449, 0.19631296, 0.166146...</td>\n",
       "      <td>[64.261314]</td>\n",
       "      <td>...</td>\n",
       "      <td>24.614656</td>\n",
       "      <td>2.718277</td>\n",
       "      <td>77.773293</td>\n",
       "      <td>367.024776</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.92400175, 0.9051634, 0.9009754, 0.89521116,...</td>\n",
       "      <td>[1.0243986, 1.0007516, 0.9953729, 0.9879213, 1...</td>\n",
       "      <td>[0.823605, 0.8095752, 0.80657786, 0.8025011, 0...</td>\n",
       "      <td>[0.014372481808888088, 0.015961966559223602, 0...</td>\n",
       "      <td>0.077762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>[98.46721, 92.746414, 80.3417, 73.17154, 43.33...</td>\n",
       "      <td>[40.875908, -75.96299, 78.20444, -71.964325, 1...</td>\n",
       "      <td>[-89.58209, -53.21205, 18.408005, -13.236672, ...</td>\n",
       "      <td>[70.71921, 5.5579295, 27.828194, -144.18951, -...</td>\n",
       "      <td>[122.33316, 93.3295, 85.40038, 161.97357, 160....</td>\n",
       "      <td>[0.6675133, 0.059890274, 0.33979622, -1.430395...</td>\n",
       "      <td>[-1.1427194, -2.5305314, 0.23117499, -2.959692...</td>\n",
       "      <td>[16.383091, 8.80947, 8.001733, 9.526063, 9.114...</td>\n",
       "      <td>[0.005930134, 0.110476136, -1.0, 0.09409397, 0...</td>\n",
       "      <td>[63.445927]</td>\n",
       "      <td>...</td>\n",
       "      <td>25.802149</td>\n",
       "      <td>2.977373</td>\n",
       "      <td>80.648135</td>\n",
       "      <td>754.700283</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0261128, 1.0215405, 1.0110452, 0.9783641, 0...</td>\n",
       "      <td>[1.158713, 1.1525862, 1.1384939, 1.0939407, 0....</td>\n",
       "      <td>[0.8935127, 0.89049494, 0.88359654, 0.8627874,...</td>\n",
       "      <td>[0.013153083896612823, 0.012711762777720037, 0...</td>\n",
       "      <td>0.066268</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>[160.05638, 91.37448, 66.05984, 44.347458]</td>\n",
       "      <td>[-14.963794, 39.75022, -12.136979, -36.29571]</td>\n",
       "      <td>[-159.35536, 82.27524, 64.93532, 25.48173]</td>\n",
       "      <td>[100.57534, -62.419086, 16.54713, 172.18288]</td>\n",
       "      <td>[189.59464, 111.37784, 69.001755, 177.94824]</td>\n",
       "      <td>[0.59300303, -0.63877726, 0.2479389, 2.0658352]</td>\n",
       "      <td>[-1.6644238, 1.1207298, 1.755573, 2.5294862]</td>\n",
       "      <td>[14.583574, 12.632663, 11.114531, 7.2067804]</td>\n",
       "      <td>[0.20888242, 0.14884375, 0.041868404, 0.3332444]</td>\n",
       "      <td>[51.635838]</td>\n",
       "      <td>...</td>\n",
       "      <td>33.251522</td>\n",
       "      <td>1.946857</td>\n",
       "      <td>68.520946</td>\n",
       "      <td>628.350322</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0653135, 1.0204191, 0.99795115, 0.8992963]</td>\n",
       "      <td>[1.2107508, 1.1510823, 1.1208649, 0.9932077]</td>\n",
       "      <td>[0.91987616, 0.889756, 0.87503743, 0.8053849]</td>\n",
       "      <td>[0.014398115934271798, 0.013843880434500817, 0...</td>\n",
       "      <td>0.061580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>[109.74597, 82.67802, 48.592052, 47.00833]</td>\n",
       "      <td>[-77.85112, 13.717307, -1.8301195, -22.160004]</td>\n",
       "      <td>[-77.35231, -81.532135, -48.557575, 41.457417]</td>\n",
       "      <td>[28.093445, -218.08313, 1.7996396, -103.20073]</td>\n",
       "      <td>[116.3962, 233.46501, 49.99442, 114.01316]</td>\n",
       "      <td>[0.25326973, -1.6972061, 0.037027217, -1.5277433]</td>\n",
       "      <td>[-2.3594084, -1.4041132, -1.6084682, 2.0616806]</td>\n",
       "      <td>[26.733065, 10.488318, 11.619625, 11.782454]</td>\n",
       "      <td>[0.06530007, 0.051856153, 0.03261911, 0.094023...</td>\n",
       "      <td>[159.70195]</td>\n",
       "      <td>...</td>\n",
       "      <td>25.769648</td>\n",
       "      <td>0.549588</td>\n",
       "      <td>34.821088</td>\n",
       "      <td>582.447940</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0346435, 0.91806483, 0.9804146, 0.9567981]</td>\n",
       "      <td>[1.1701201, 1.017071, 1.0971885, 1.0662293]</td>\n",
       "      <td>[0.89916706, 0.8190586, 0.86364084, 0.8473668]</td>\n",
       "      <td>[0.013614682038886869, 0.014255316371421484, 0...</td>\n",
       "      <td>0.052153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>[142.44502, 99.02341, 70.25586, 51.527637, 29....</td>\n",
       "      <td>[107.200615, 21.428003, 46.324238, 6.5662456, ...</td>\n",
       "      <td>[93.80092, -96.67717, -52.81998, 51.10755, -2....</td>\n",
       "      <td>[145.2574, -147.62239, -55.799732, 67.227646, ...</td>\n",
       "      <td>[205.12033, 178.16539, 91.013016, 85.073944, 3...</td>\n",
       "      <td>[0.89526576, -1.1896396, -0.72816104, 1.081308...</td>\n",
       "      <td>[0.718832, -1.3526776, -0.85082275, 1.4430174,...</td>\n",
       "      <td>[26.15433, 12.037371, 15.292923, 7.9323306, 5....</td>\n",
       "      <td>[0.029422322, 0.13274354, 0.0116163865, 0.0622...</td>\n",
       "      <td>[102.00738]</td>\n",
       "      <td>...</td>\n",
       "      <td>35.792881</td>\n",
       "      <td>2.943595</td>\n",
       "      <td>120.257778</td>\n",
       "      <td>935.910894</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0187671, 0.99613607, 1.0019124, 0.9607918, ...</td>\n",
       "      <td>[1.1450762, 1.1166106, 1.1262031, 1.0713738, 1...</td>\n",
       "      <td>[0.89245814, 0.87566155, 0.8776218, 0.85020983...</td>\n",
       "      <td>[0.013090088395711868, 0.013340908842586017, 0...</td>\n",
       "      <td>0.070206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>[119.6123, 93.60879, 81.2154, 26.15081]</td>\n",
       "      <td>[119.586174, -93.60506, -74.84675, -22.50837]</td>\n",
       "      <td>[-2.4996867, -0.8361497, 31.526278, -13.313083]</td>\n",
       "      <td>[-59.115913, -228.25626, -102.27824, -75.12719]</td>\n",
       "      <td>[137.87236, 247.51872, 131.13408, 79.72866]</td>\n",
       "      <td>[-0.47604448, -1.6241096, -1.0534177, -1.7774502]</td>\n",
       "      <td>[-0.020899763, -3.1326602, 2.7429357, -2.607467]</td>\n",
       "      <td>[34.74181, 20.04979, 11.805322, 5.3572493]</td>\n",
       "      <td>[0.17104848, 0.012849866, 0.024397552, 0.12474...</td>\n",
       "      <td>[66.67433]</td>\n",
       "      <td>...</td>\n",
       "      <td>31.475006</td>\n",
       "      <td>0.839581</td>\n",
       "      <td>37.343799</td>\n",
       "      <td>538.414988</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0415914, 0.9223015, 0.9842589, 0.88808215]</td>\n",
       "      <td>[1.1793839, 1.0223159, 1.1014806, 0.9786398]</td>\n",
       "      <td>[0.9037988, 0.822287, 0.8670371, 0.7975245]</td>\n",
       "      <td>[0.013999269847510461, 0.01345881050409992, 0....</td>\n",
       "      <td>0.057808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>[106.725655, 83.71298, 72.613945, 50.96216]</td>\n",
       "      <td>[47.111168, -7.4283304, -24.404598, 45.317093]</td>\n",
       "      <td>[-95.76483, 83.38275, -68.39006, 23.313148]</td>\n",
       "      <td>[117.68467, 16.87219, -32.52094, 181.72272]</td>\n",
       "      <td>[159.31908, 85.97497, 80.32219, 188.8579]</td>\n",
       "      <td>[0.9521512, 0.20020789, -0.4340981, 1.9836515]</td>\n",
       "      <td>[-1.1136123, 1.6596489, -1.9135554, 0.47513667]</td>\n",
       "      <td>[11.938285, 9.95795, 11.011741, 6.8569326]</td>\n",
       "      <td>[0.11962157, 0.06353164, 0.02877949, 0.13461636]</td>\n",
       "      <td>[53.472145]</td>\n",
       "      <td>...</td>\n",
       "      <td>23.341497</td>\n",
       "      <td>1.010917</td>\n",
       "      <td>34.216984</td>\n",
       "      <td>631.251201</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0007885, 1.0139772, 1.0040966, 0.9029921]</td>\n",
       "      <td>[1.1225091, 1.1424345, 1.1291447, 0.99796706]</td>\n",
       "      <td>[0.8790677, 0.88552, 0.8790486, 0.8080172]</td>\n",
       "      <td>[0.014405640884856016, 0.013015485025262388, 0...</td>\n",
       "      <td>0.057888</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>[70.88564, 63.167164, 57.730312, 40.394836]</td>\n",
       "      <td>[-28.825638, -11.934006, -52.801384, 34.932465]</td>\n",
       "      <td>[64.759995, -62.02959, -23.341011, -20.284622]</td>\n",
       "      <td>[-20.481422, -58.69369, -144.6863, 98.65588]</td>\n",
       "      <td>[75.406944, 86.871315, 156.14229, 106.77741]</td>\n",
       "      <td>[-0.2850598, -0.8303998, -1.6495479, 1.6255821]</td>\n",
       "      <td>[1.9895804, -1.760866, -2.725367, -0.5260933]</td>\n",
       "      <td>[15.554552, 10.563414, 10.653646, 6.057096]</td>\n",
       "      <td>[0.009055395, 0.13294965, 0.18424317, 0.2607511]</td>\n",
       "      <td>[46.074005]</td>\n",
       "      <td>...</td>\n",
       "      <td>23.129507</td>\n",
       "      <td>2.762318</td>\n",
       "      <td>64.120680</td>\n",
       "      <td>495.403106</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0024987, 0.9705569, 0.9065708, 0.89699244]</td>\n",
       "      <td>[1.1269927, 1.0839297, 1.0025516, 0.9902295]</td>\n",
       "      <td>[0.87800467, 0.8571842, 0.81059, 0.8037554]</td>\n",
       "      <td>[0.012550288406665189, 0.013881971851027233, 0...</td>\n",
       "      <td>0.052951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>[96.108055, 67.4182, 49.004913, 43.792606]</td>\n",
       "      <td>[83.338486, -55.182285, -48.21355, -33.324154]</td>\n",
       "      <td>[-47.869137, 38.731495, 8.77127, 28.412907]</td>\n",
       "      <td>[82.57477, -20.268742, 104.85535, 10.836808]</td>\n",
       "      <td>[127.91136, 71.908936, 116.03072, 45.696495]</td>\n",
       "      <td>[0.77822137, -0.29628792, 1.5044168, 0.24499913]</td>\n",
       "      <td>[-0.5213788, 2.5296042, 2.9616354, 2.4355783]</td>\n",
       "      <td>[17.491875, 14.658085, 8.1855345, 7.2760277]</td>\n",
       "      <td>[0.008491053, 0.06438994, 0.15572509, 0.028588...</td>\n",
       "      <td>[47.36327]</td>\n",
       "      <td>...</td>\n",
       "      <td>60.758083</td>\n",
       "      <td>2.313169</td>\n",
       "      <td>98.215888</td>\n",
       "      <td>379.573778</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0242475, 0.99924403, 0.9585766, 0.975295]</td>\n",
       "      <td>[1.1562145, 1.1226076, 1.0685209, 1.0902642]</td>\n",
       "      <td>[0.89228064, 0.8758805, 0.8486323, 0.8603257]</td>\n",
       "      <td>[0.01424706055984651, 0.012393316111310945, 0....</td>\n",
       "      <td>0.054523</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>[109.59833, 95.25291, 82.29073, 74.34589, 32.7...</td>\n",
       "      <td>[109.218056, -16.511532, -77.17252, -73.294205...</td>\n",
       "      <td>[9.12194, 93.810905, -28.568634, -12.460772, -...</td>\n",
       "      <td>[-47.64079, 242.47995, -135.12201, 183.29764, ...</td>\n",
       "      <td>[120.41198, 261.4102, 158.58272, 198.67528, 34...</td>\n",
       "      <td>[-0.42204413, 1.6640506, -1.2710392, 1.6343305...</td>\n",
       "      <td>[0.08332704, 1.7450205, -2.787044, -2.9731925,...</td>\n",
       "      <td>[14.751517, 21.578865, 10.897463, 18.615433, 6...</td>\n",
       "      <td>[0.011316247, 0.018058809, 0.43081176, 0.10659...</td>\n",
       "      <td>[52.607273]</td>\n",
       "      <td>...</td>\n",
       "      <td>43.943760</td>\n",
       "      <td>0.009135</td>\n",
       "      <td>0.832863</td>\n",
       "      <td>892.671137</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.034536, 0.9228985, 0.98502153, 0.91451484, ...</td>\n",
       "      <td>[1.1699765, 1.0230488, 1.1024548, 1.0126259, 1...</td>\n",
       "      <td>[0.89909554, 0.8227482, 0.8675883, 0.81640375,...</td>\n",
       "      <td>[0.013615994484660462, 0.017689344108250328, 0...</td>\n",
       "      <td>0.071980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>[101.88489, 77.68119, 71.96598, 69.8076]</td>\n",
       "      <td>[40.085938, 38.960857, -21.84973, 4.552362]</td>\n",
       "      <td>[93.667755, 67.20431, -68.56888, -69.65901]</td>\n",
       "      <td>[128.13971, 182.98633, 326.0481, 11.542413]</td>\n",
       "      <td>[164.31018, 198.99043, 334.1878, 71.64251]</td>\n",
       "      <td>[1.0523885, 1.5922277, 2.2159615, 0.16460177]</td>\n",
       "      <td>[1.1664222, 1.045409, -1.8792776, -1.505537]</td>\n",
       "      <td>[14.054102, 8.878503, 13.965518, 11.239221]</td>\n",
       "      <td>[0.24820313, 0.039861143, 0.3262778, 0.12553267]</td>\n",
       "      <td>[50.458755]</td>\n",
       "      <td>...</td>\n",
       "      <td>53.315990</td>\n",
       "      <td>1.753675</td>\n",
       "      <td>79.743502</td>\n",
       "      <td>931.104206</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.997898, 0.9817103, 0.91344863, 1.0014938]</td>\n",
       "      <td>[1.1188465, 1.0982231, 1.0112833, 1.1256391]</td>\n",
       "      <td>[0.87694937, 0.8651976, 0.815614, 0.8773485]</td>\n",
       "      <td>[0.014309790580818327, 0.01617094676637805, 0....</td>\n",
       "      <td>0.055624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>[132.36314, 82.45706, 63.933987, 41.040478]</td>\n",
       "      <td>[131.4178, -21.921827, 57.091976, -18.806196]</td>\n",
       "      <td>[15.79125, 79.489624, -28.776043, -36.478043]</td>\n",
       "      <td>[76.377556, 62.97516, -121.20886, -17.35544]</td>\n",
       "      <td>[153.44897, 104.74813, 137.5847, 45.276234]</td>\n",
       "      <td>[0.5490291, 0.7040972, -1.3960611, -0.41119963]</td>\n",
       "      <td>[0.1195873, 1.8398896, -0.46686605, -2.0468051]</td>\n",
       "      <td>[13.894363, 14.39211, 12.264083, 8.025287]</td>\n",
       "      <td>[0.024874695, 0.021824531, 0.3338737, 0.054893...</td>\n",
       "      <td>[76.53927]</td>\n",
       "      <td>...</td>\n",
       "      <td>32.977306</td>\n",
       "      <td>1.891985</td>\n",
       "      <td>81.498436</td>\n",
       "      <td>663.476611</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0498794, 1.012892, 0.97117424, 0.9722996]</td>\n",
       "      <td>[1.1903963, 1.1409762, 1.0847222, 1.0862107]</td>\n",
       "      <td>[0.90936244, 0.8848077, 0.8576263, 0.85838836]</td>\n",
       "      <td>[0.01379186357098829, 0.013617582879038971, 0....</td>\n",
       "      <td>0.052679</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>[105.75745, 52.98347, 46.691208, 40.552586]</td>\n",
       "      <td>[-87.823006, 30.635366, -36.616783, 38.371826]</td>\n",
       "      <td>[-58.92162, 43.22872, -28.970331, 13.119263]</td>\n",
       "      <td>[-33.03492, 36.793633, -43.843742, 116.11376]</td>\n",
       "      <td>[114.193275, 65.189735, 64.21247, 123.12759]</td>\n",
       "      <td>[-0.30749616, 0.64810246, -0.83758664, 1.7743045]</td>\n",
       "      <td>[-2.5506558, 0.95426804, -2.4722552, 0.32943913]</td>\n",
       "      <td>[27.643478, 9.4171, 4.5715566, 5.7866387]</td>\n",
       "      <td>[0.071829386, 0.08247212, 0.10828456, 0.10598008]</td>\n",
       "      <td>[48.206493]</td>\n",
       "      <td>...</td>\n",
       "      <td>22.270784</td>\n",
       "      <td>0.747712</td>\n",
       "      <td>23.959033</td>\n",
       "      <td>410.898013</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0316994, 0.98498416, 0.9565135, 0.8970858]</td>\n",
       "      <td>[1.1661869, 1.1033642, 1.0658627, 0.9903503]</td>\n",
       "      <td>[0.89721185, 0.86660403, 0.84716445, 0.80382127]</td>\n",
       "      <td>[0.013582861779365431, 0.013359931128414668, 0...</td>\n",
       "      <td>0.056572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>[206.25558, 179.57268, 65.9066, 41.80358]</td>\n",
       "      <td>[-141.6943, 84.79769, -58.448116, 40.16236]</td>\n",
       "      <td>[-149.88025, 158.28992, -30.45485, 11.59846]</td>\n",
       "      <td>[92.478355, 44.047886, 352.7729, 18.794079]</td>\n",
       "      <td>[227.65152, 185.58578, 359.07834, 46.318848]</td>\n",
       "      <td>[0.43456075, 0.2428973, 2.3793468, 0.43566716]</td>\n",
       "      <td>[-2.328127, 1.0789895, -2.661241, 0.2811403]</td>\n",
       "      <td>[27.0481, 15.985061, 12.035677, 6.684236]</td>\n",
       "      <td>[0.047513872, 0.084718615, 0.11121261, 0.06053...</td>\n",
       "      <td>[64.110435]</td>\n",
       "      <td>...</td>\n",
       "      <td>31.432457</td>\n",
       "      <td>1.444838</td>\n",
       "      <td>59.377178</td>\n",
       "      <td>705.651965</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0838549, 1.0741942, 0.9106268, 0.9731345]</td>\n",
       "      <td>[1.2347074, 1.2223248, 1.0077147, 1.0873408]</td>\n",
       "      <td>[0.93300253, 0.92606366, 0.81353885, 0.8589282]</td>\n",
       "      <td>[0.013580696010670548, 0.013529838125151003, 0...</td>\n",
       "      <td>0.050791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>[212.78462, 125.08565, 75.14124, 39.530018]</td>\n",
       "      <td>[135.49237, -30.96225, 48.927395, -27.64143]</td>\n",
       "      <td>[164.07045, -121.19306, -57.02909, 28.259047]</td>\n",
       "      <td>[-230.4668, -373.65402, -32.4506, -39.291874]</td>\n",
       "      <td>[314.3104, 394.86868, 82.69994, 56.434505]</td>\n",
       "      <td>[-0.93893003, -1.8143864, -0.4194529, -0.87710...</td>\n",
       "      <td>[0.8805096, -1.8209248, -0.86171216, 2.3451464]</td>\n",
       "      <td>[19.969511, 25.642027, 11.833498, 8.853241]</td>\n",
       "      <td>[0.015693516, 0.09834724, 0.01714549, 0.34293914]</td>\n",
       "      <td>[74.763405]</td>\n",
       "      <td>...</td>\n",
       "      <td>83.033035</td>\n",
       "      <td>0.195059</td>\n",
       "      <td>15.446113</td>\n",
       "      <td>609.829303</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0389224, 0.93200475, 1.0064043, 0.9499358]</td>\n",
       "      <td>[1.169234, 1.0339532, 1.1322511, 1.0573785]</td>\n",
       "      <td>[0.9086108, 0.83005625, 0.8805574, 0.8424931]</td>\n",
       "      <td>[0.016318537859007835, 0.015410958904109588, 0...</td>\n",
       "      <td>0.057229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>[209.44385, 85.12906, 59.00432, 41.34547]</td>\n",
       "      <td>[158.82384, -68.57716, 47.21317, 11.835998]</td>\n",
       "      <td>[-136.53467, 50.439365, -35.389637, -39.615112]</td>\n",
       "      <td>[169.57489, -134.43156, -37.196342, 2.6271439]</td>\n",
       "      <td>[271.69232, 159.84422, 70.3517, 42.746048]</td>\n",
       "      <td>[0.740181, -1.2378808, -0.5947176, 0.063498594]</td>\n",
       "      <td>[-0.71007615, 2.5074282, -0.6432267, -1.2804639]</td>\n",
       "      <td>[34.559254, 15.210916, 9.180614, 10.529704]</td>\n",
       "      <td>[0.045217842, 0.17279951, 0.0143484995, 0.0805...</td>\n",
       "      <td>[164.77148]</td>\n",
       "      <td>...</td>\n",
       "      <td>27.386984</td>\n",
       "      <td>0.551617</td>\n",
       "      <td>36.588869</td>\n",
       "      <td>986.814840</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0848274, 0.9870061, 0.9910727, 0.97263366]</td>\n",
       "      <td>[1.2359347, 1.1049882, 1.1115863, 1.086663]</td>\n",
       "      <td>[0.93372005, 0.86902404, 0.8705591, 0.8586044]</td>\n",
       "      <td>[0.014093959731543624, 0.013834589138470287, 0...</td>\n",
       "      <td>0.053420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10188</th>\n",
       "      <td>[111.96687, 82.96299, 46.18269, 29.100199]</td>\n",
       "      <td>[51.932186, 66.0052, -38.80246, -25.38348]</td>\n",
       "      <td>[-99.1949, 50.261024, 25.044163, 14.230266]</td>\n",
       "      <td>[420.16275, 76.955, 52.051716, -44.45906]</td>\n",
       "      <td>[434.92743, 115.49714, 69.92271, 53.57406]</td>\n",
       "      <td>[2.0328848, 0.82922864, 0.9684427, -1.2100815]</td>\n",
       "      <td>[-1.088497, 0.650802, 2.5684388, 2.630639]</td>\n",
       "      <td>[9.409802, 23.122713, 6.8529015, 6.8373995]</td>\n",
       "      <td>[0.1262674, 0.033669557, 0.38778192, 0.22147034]</td>\n",
       "      <td>[50.74124]</td>\n",
       "      <td>...</td>\n",
       "      <td>53.707146</td>\n",
       "      <td>0.365105</td>\n",
       "      <td>18.962460</td>\n",
       "      <td>516.693645</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.92839354, 0.98549527, 0.95605606, 0.9398271]</td>\n",
       "      <td>[1.0297021, 1.1030598, 1.0652729, 1.0443174]</td>\n",
       "      <td>[0.82708496, 0.8679308, 0.84683913, 0.8353367]</td>\n",
       "      <td>[0.023426455738808482, 0.01317269458042235, 0....</td>\n",
       "      <td>0.064305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10189</th>\n",
       "      <td>[557.34467, 309.93918, 200.38477, 36.751278]</td>\n",
       "      <td>[550.8109, -239.36673, -125.75982, 2.7742605]</td>\n",
       "      <td>[-85.09066, 196.89047, -156.00809, -36.64642]</td>\n",
       "      <td>[-604.17896, 215.18173, -43.594257, 64.927605]</td>\n",
       "      <td>[822.3075, 377.5641, 206.60707, 75.1025]</td>\n",
       "      <td>[-0.93956226, 0.64796674, -0.2158722, 1.3341419]</td>\n",
       "      <td>[-0.15327092, 2.4532537, -2.2492523, -1.495237]</td>\n",
       "      <td>[22.896797, 13.753922, 25.13891, 8.610192]</td>\n",
       "      <td>[0.11040245, 0.059784457, 0.18120134, 0.14235458]</td>\n",
       "      <td>[66.84221]</td>\n",
       "      <td>...</td>\n",
       "      <td>138.668457</td>\n",
       "      <td>0.078850</td>\n",
       "      <td>7.784114</td>\n",
       "      <td>1497.499801</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0011055, 1.0984086, 1.0819651, 0.94730437]</td>\n",
       "      <td>[1.1073235, 1.2509837, 1.2323097, 1.0539811]</td>\n",
       "      <td>[0.89488757, 0.9458333, 0.93162036, 0.8406277]</td>\n",
       "      <td>[0.023255813953488372, 0.014124293785310734, 0...</td>\n",
       "      <td>0.064906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10193</th>\n",
       "      <td>[83.52273, 67.93133, 60.229748, 24.949112]</td>\n",
       "      <td>[83.1955, -44.74221, 19.2497, -16.910238]</td>\n",
       "      <td>[-7.3860683, 51.115555, 57.07076, -18.343992]</td>\n",
       "      <td>[-9.301926, -61.14358, -11.795878, -16.08784]</td>\n",
       "      <td>[84.71412, 92.00665, 63.22625, 29.887402]</td>\n",
       "      <td>[-0.11114105, -0.80892587, -0.19461717, -0.606...</td>\n",
       "      <td>[-0.088547505, 2.2898047, 1.2454842, -2.315548]</td>\n",
       "      <td>[10.672849, 10.584021, 15.191886, 3.4612246]</td>\n",
       "      <td>[0.09897233, 0.027287968, 0.085827135, 0.07020...</td>\n",
       "      <td>[60.814545]</td>\n",
       "      <td>...</td>\n",
       "      <td>24.244928</td>\n",
       "      <td>1.588357</td>\n",
       "      <td>54.778401</td>\n",
       "      <td>382.814864</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0138134, 0.97434133, 0.9922871, 0.9539]</td>\n",
       "      <td>[1.1422143, 1.0887856, 1.1132252, 1.061279]</td>\n",
       "      <td>[0.8854124, 0.85989696, 0.871349, 0.84652096]</td>\n",
       "      <td>[0.012608080108399108, 0.013881971851027233, 0...</td>\n",
       "      <td>0.056884</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10194</th>\n",
       "      <td>[98.034584, 86.56507, 79.50725, 65.40271]</td>\n",
       "      <td>[-60.98385, -58.902252, 37.419796, -0.21741875]</td>\n",
       "      <td>[76.75774, -63.435295, -70.150986, 65.40235]</td>\n",
       "      <td>[-128.9751, -34.10688, 375.7076, -258.5351]</td>\n",
       "      <td>[162.73114, 95.12451, 384.1498, 266.97137]</td>\n",
       "      <td>[-1.0879318, -0.3844613, 2.2571225, -2.0832431]</td>\n",
       "      <td>[2.2421732, -2.3191578, -1.0807731, 1.5741206]</td>\n",
       "      <td>[15.364486, 19.796007, 9.667496, 12.481632]</td>\n",
       "      <td>[0.018754685, 0.09328193, -1.0, 0.17866573]</td>\n",
       "      <td>[62.76324]</td>\n",
       "      <td>...</td>\n",
       "      <td>38.805801</td>\n",
       "      <td>1.831514</td>\n",
       "      <td>78.274592</td>\n",
       "      <td>1068.520771</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.99551797, 1.0164111, 0.91674715, 0.9103852]</td>\n",
       "      <td>[1.1158255, 1.1457033, 1.0154259, 1.0074083]</td>\n",
       "      <td>[0.8752103, 0.8871187, 0.8180684, 0.81336206]</td>\n",
       "      <td>[0.013742456191376427, 0.012947836234079003, 0...</td>\n",
       "      <td>0.057454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10196</th>\n",
       "      <td>[68.89223, 52.508892, 47.988594, 38.99519]</td>\n",
       "      <td>[-16.483011, 1.4485862, 39.185352, -26.51062]</td>\n",
       "      <td>[66.89132, -52.488907, -27.702225, -28.59741]</td>\n",
       "      <td>[-106.373184, 17.691406, 8.303438, 25.750854]</td>\n",
       "      <td>[127.15793, 56.43699, 49.549778, 47.36605]</td>\n",
       "      <td>[-1.2189531, 0.33085293, 0.17217745, 0.6198898]</td>\n",
       "      <td>[1.8123978, -1.5432054, -0.61537755, -2.3183453]</td>\n",
       "      <td>[10.380024, 10.72214, 9.128428, 7.7337766]</td>\n",
       "      <td>[0.15282416, 0.04873144, 0.018589742, 0.14108275]</td>\n",
       "      <td>[45.53352]</td>\n",
       "      <td>...</td>\n",
       "      <td>43.488991</td>\n",
       "      <td>2.686066</td>\n",
       "      <td>86.705423</td>\n",
       "      <td>363.747620</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.9750899, 0.9844956, 0.9797782, 0.9700451]</td>\n",
       "      <td>[1.0897455, 1.1027042, 1.0963279, 1.0831589]</td>\n",
       "      <td>[0.8604343, 0.866287, 0.8632284, 0.85693127]</td>\n",
       "      <td>[0.013660050775508525, 0.013094279401657213, 0...</td>\n",
       "      <td>0.052282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10199</th>\n",
       "      <td>[75.476166, 57.59272, 52.828663, 29.514648]</td>\n",
       "      <td>[73.71383, -31.177393, -52.80216, -3.0317202]</td>\n",
       "      <td>[16.214891, -48.42408, 1.6732451, -29.358526]</td>\n",
       "      <td>[-120.82153, 49.83107, -238.81723, -31.769392]</td>\n",
       "      <td>[143.33337, 76.94677, 244.87828, 43.667713]</td>\n",
       "      <td>[-1.2494023, 0.78279984, -2.2138066, -0.93437415]</td>\n",
       "      <td>[0.21652249, -2.1428294, 3.1099143, -1.673697]</td>\n",
       "      <td>[15.8102, 10.988527, 11.867655, 5.1439757]</td>\n",
       "      <td>[0.007971323, 0.11508579, 0.3836848, 0.12691382]</td>\n",
       "      <td>[46.805508]</td>\n",
       "      <td>...</td>\n",
       "      <td>39.335159</td>\n",
       "      <td>3.090565</td>\n",
       "      <td>85.788949</td>\n",
       "      <td>695.212563</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.98008746, 0.9896634, 0.9039993, 0.94024086]</td>\n",
       "      <td>[1.096147, 1.1096839, 0.9992599, 1.0448526]</td>\n",
       "      <td>[0.86402804, 0.8696429, 0.8087388, 0.83562917]</td>\n",
       "      <td>[0.013526151010395348, 0.013373357842723916, 0...</td>\n",
       "      <td>0.062961</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10200</th>\n",
       "      <td>[97.388756, 62.720184, 58.326958, 35.01478]</td>\n",
       "      <td>[-81.65464, 50.305645, 39.268185, 7.165481]</td>\n",
       "      <td>[53.07626, -37.45882, -43.128227, -34.27376]</td>\n",
       "      <td>[-23.64104, -44.692524, -126.84658, 63.525517]</td>\n",
       "      <td>[103.03863, 78.47465, 139.8973, 72.85802]</td>\n",
       "      <td>[-0.24042618, -0.66293395, -1.5191622, 1.3573396]</td>\n",
       "      <td>[2.565211, -0.64005196, -0.83221114, -1.3646988]</td>\n",
       "      <td>[23.947657, 15.067415, 8.897489, 6.838503]</td>\n",
       "      <td>[0.18815751, 0.053648137, 0.08517821, 0.2258083]</td>\n",
       "      <td>[58.81981]</td>\n",
       "      <td>...</td>\n",
       "      <td>23.399124</td>\n",
       "      <td>2.316543</td>\n",
       "      <td>67.978790</td>\n",
       "      <td>439.852490</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0252637, 0.9947295, 0.9665864, 0.9456373]</td>\n",
       "      <td>[1.1575757, 1.1165205, 1.0788287, 1.0518277]</td>\n",
       "      <td>[0.89295167, 0.8729386, 0.8543442, 0.83944684]</td>\n",
       "      <td>[0.0127949524793223, 0.013410103866781771, 0.0...</td>\n",
       "      <td>0.051361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10201</th>\n",
       "      <td>[59.480656, 49.433968, 48.368305, 32.57849]</td>\n",
       "      <td>[-57.50138, -43.83078, 46.301266, 17.527678]</td>\n",
       "      <td>[15.216434, 22.860006, -13.988781, -27.461584]</td>\n",
       "      <td>[324.64355, 128.06572, -187.87703, 3.6408982]</td>\n",
       "      <td>[330.20868, 137.53072, 194.12032, 33.011784]</td>\n",
       "      <td>[2.3985124, 1.6803786, -2.0662625, 0.11152639]</td>\n",
       "      <td>[2.8828952, 2.660853, -0.2934054, -1.0027173]</td>\n",
       "      <td>[10.314178, 8.375694, 6.7398376, 3.8940623]</td>\n",
       "      <td>[-1.0, 0.046218947, 0.16114785, 0.19914827]</td>\n",
       "      <td>[45.11717]</td>\n",
       "      <td>...</td>\n",
       "      <td>27.865837</td>\n",
       "      <td>1.771497</td>\n",
       "      <td>54.930242</td>\n",
       "      <td>714.366136</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.90746343, 0.9021559, 0.9015665, 0.96281385]</td>\n",
       "      <td>[1.0036911, 0.9968922, 0.996134, 1.0733641]</td>\n",
       "      <td>[0.81123585, 0.8074195, 0.80699897, 0.8522635]</td>\n",
       "      <td>[0.010286554004408524, 0.017288719528109828, 0...</td>\n",
       "      <td>0.053746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10204</th>\n",
       "      <td>[79.248566, 73.63001, 65.28366, 44.67504]</td>\n",
       "      <td>[41.650124, 25.43021, -8.802421, 34.027393]</td>\n",
       "      <td>[67.42108, 69.099075, -64.68751, -28.948154]</td>\n",
       "      <td>[-19.288006, -71.40729, -235.59778, -1.9716091]</td>\n",
       "      <td>[84.276276, 103.39838, 244.68378, 45.47439]</td>\n",
       "      <td>[-0.24104516, -0.8598658, -1.9951969, -0.04411...</td>\n",
       "      <td>[1.0174195, 1.2181544, -1.7060417, -0.7049182]</td>\n",
       "      <td>[21.216219, 13.070792, 10.093541, 8.2567215]</td>\n",
       "      <td>[0.12039786, 0.046660878, 0.03749758, 0.025400...</td>\n",
       "      <td>[48.89929]</td>\n",
       "      <td>...</td>\n",
       "      <td>33.441792</td>\n",
       "      <td>1.777554</td>\n",
       "      <td>62.796946</td>\n",
       "      <td>400.811247</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0100816, 0.97870916, 0.9103279, 0.9762462]</td>\n",
       "      <td>[1.1371983, 1.0943826, 1.0073357, 1.0915511]</td>\n",
       "      <td>[0.882965, 0.8630357, 0.8133202, 0.8609413]</td>\n",
       "      <td>[0.012550288406665189, 0.014130535596401352, 0...</td>\n",
       "      <td>0.053841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10206</th>\n",
       "      <td>[134.80693, 118.455765, 77.14059, 70.11406, 54...</td>\n",
       "      <td>[-120.49098, 102.20966, 70.338486, 52.747307, ...</td>\n",
       "      <td>[-60.455223, 59.87447, 31.672821, -46.192017, ...</td>\n",
       "      <td>[49.06311, -277.01605, -32.867023, -51.31202, ...</td>\n",
       "      <td>[144.16193, 301.86472, 84.52979, 87.587, 138.7...</td>\n",
       "      <td>[0.35636038, -1.5855464, -0.41412738, -0.67855...</td>\n",
       "      <td>[-2.6765535, 0.52991325, 0.4230963, -0.7192392...</td>\n",
       "      <td>[14.23236, 18.779125, 10.694611, 11.071497, 8....</td>\n",
       "      <td>[0.025531506, 0.2757547, 0.13560715, 0.0306083...</td>\n",
       "      <td>[52.72158]</td>\n",
       "      <td>...</td>\n",
       "      <td>41.769421</td>\n",
       "      <td>1.862147</td>\n",
       "      <td>75.298929</td>\n",
       "      <td>800.953003</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0513808, 1.007332, 1.0082055, 1.0017802, 0....</td>\n",
       "      <td>[1.1923862, 1.1307709, 1.1346749, 1.1260248, 1...</td>\n",
       "      <td>[0.91037554, 0.88389283, 0.8817362, 0.8775354,...</td>\n",
       "      <td>[0.013143035632763882, 0.013341082609040234, 0...</td>\n",
       "      <td>0.066706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10208</th>\n",
       "      <td>[200.29799, 167.91031, 153.24255, 90.84163]</td>\n",
       "      <td>[-29.598543, 57.126656, -8.613181, -49.804825]</td>\n",
       "      <td>[-198.09898, 157.89368, 153.0003, -75.97158]</td>\n",
       "      <td>[-353.15186, 82.671684, 517.2, -52.993233]</td>\n",
       "      <td>[406.7891, 190.82951, 540.159, 106.77151]</td>\n",
       "      <td>[-1.3323948, 0.47436458, 1.930813, -0.5545026]</td>\n",
       "      <td>[-1.719112, 1.2236441, 1.6270322, -2.1510785]</td>\n",
       "      <td>[25.335186, 37.248188, 28.153183, 18.430153]</td>\n",
       "      <td>[0.21136275, 0.030580128, 0.07676113, 0.088020...</td>\n",
       "      <td>[57.69653]</td>\n",
       "      <td>...</td>\n",
       "      <td>24.608847</td>\n",
       "      <td>0.585973</td>\n",
       "      <td>21.765782</td>\n",
       "      <td>1309.513619</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0366577, 1.069079, 0.9378395, 1.0199809]</td>\n",
       "      <td>[1.1666908, 1.2156744, 1.0404452, 1.1504945]</td>\n",
       "      <td>[0.9066247, 0.92248356, 0.8352338, 0.8894674]</td>\n",
       "      <td>[0.014692865993981235, 0.014512963536824708, 0...</td>\n",
       "      <td>0.066061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10209</th>\n",
       "      <td>[108.59547, 93.9389, 89.144875, 73.556244]</td>\n",
       "      <td>[2.6427188, 23.295773, -78.06444, 64.86333]</td>\n",
       "      <td>[108.56331, -91.00453, -43.04361, 34.688187]</td>\n",
       "      <td>[-322.20966, -6.9135137, 60.28927, 4.3598795]</td>\n",
       "      <td>[340.47308, 98.66262, 109.42314, 74.124306]</td>\n",
       "      <td>[-1.8079792, -0.07352958, 0.6331482, 0.05923808]</td>\n",
       "      <td>[1.5464585, -1.3201929, -2.6376863, 0.49108985]</td>\n",
       "      <td>[17.60356, 29.359825, 19.794426, 8.054976]</td>\n",
       "      <td>[0.16177659, 0.012736825, 0.015309511, 0.10730...</td>\n",
       "      <td>[50.283535]</td>\n",
       "      <td>...</td>\n",
       "      <td>45.427456</td>\n",
       "      <td>3.027647</td>\n",
       "      <td>95.433805</td>\n",
       "      <td>789.573334</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.9273676, 1.0225074, 1.0185759, 1.004961]</td>\n",
       "      <td>[1.0284745, 1.1538825, 1.1486094, 1.1303085]</td>\n",
       "      <td>[0.82626086, 0.8911324, 0.8885425, 0.8796136]</td>\n",
       "      <td>[0.0170137046171136, 0.012678914002857887, 0.0...</td>\n",
       "      <td>0.054551</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10210</th>\n",
       "      <td>[69.435936, 64.687225, 48.48188, 31.496208]</td>\n",
       "      <td>[17.68727, -58.818386, -3.2423365, -16.809294]</td>\n",
       "      <td>[67.14544, -26.922749, 48.373337, -26.635668]</td>\n",
       "      <td>[-34.65762, 1.8699977, 224.10652, -33.444527]</td>\n",
       "      <td>[78.06541, 65.93304, 229.47447, 46.415123]</td>\n",
       "      <td>[-0.4804343, 0.028904276, 2.2355785, -0.92444503]</td>\n",
       "      <td>[1.31323, -2.7123318, 1.6377236, -2.1337574]</td>\n",
       "      <td>[8.468031, 12.618682, 9.181692, 6.6194]</td>\n",
       "      <td>[0.13055377, 0.29374698, 0.21026112, 0.22667882]</td>\n",
       "      <td>[47.706593]</td>\n",
       "      <td>...</td>\n",
       "      <td>31.586645</td>\n",
       "      <td>0.004901</td>\n",
       "      <td>0.319297</td>\n",
       "      <td>526.594945</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0011458, 0.9966345, 0.90162957, 0.9422055]</td>\n",
       "      <td>[1.1251704, 1.1190896, 0.9962151, 1.0473927]</td>\n",
       "      <td>[0.8771214, 0.8741793, 0.80704397, 0.8370182]</td>\n",
       "      <td>[0.012881912689673192, 0.011972840328348269, 0...</td>\n",
       "      <td>0.052534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10211</th>\n",
       "      <td>[176.64723, 111.10256, 87.04112, 62.43428]</td>\n",
       "      <td>[133.62402, -97.798744, -27.130733, 6.1729493]</td>\n",
       "      <td>[-115.53731, -52.717976, 82.70477, 62.12837]</td>\n",
       "      <td>[530.74146, 86.4145, -139.65134, 57.37893]</td>\n",
       "      <td>[559.59705, 141.84233, 165.17448, 85.30218]</td>\n",
       "      <td>[1.8198771, 0.71523136, -1.2513286, 0.8229445]</td>\n",
       "      <td>[-0.7129349, -2.6471987, 1.8877782, 1.4717634]</td>\n",
       "      <td>[16.066313, 17.550049, 14.281386, 9.277936]</td>\n",
       "      <td>[0.07033735, 0.003994028, 0.028003355, 0.14432...</td>\n",
       "      <td>[68.61848]</td>\n",
       "      <td>...</td>\n",
       "      <td>24.662531</td>\n",
       "      <td>2.491660</td>\n",
       "      <td>77.973104</td>\n",
       "      <td>969.150821</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.9408946, 1.035627, 0.98831993, 0.9699639]</td>\n",
       "      <td>[1.0433992, 1.171433, 1.1066641, 1.0831681]</td>\n",
       "      <td>[0.83838993, 0.8998211, 0.8699758, 0.8567596]</td>\n",
       "      <td>[0.02286902286902287, 0.013804787225120352, 0....</td>\n",
       "      <td>0.060750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10213</th>\n",
       "      <td>[161.06493, 66.91172, 48.13432, 39.42192]</td>\n",
       "      <td>[48.899193, -65.85962, 18.057592, -35.853325]</td>\n",
       "      <td>[153.46263, 11.819001, -44.618786, -16.389845]</td>\n",
       "      <td>[112.77862, 3.297189, 0.19560789, -15.015368]</td>\n",
       "      <td>[198.3593, 68.21724, 49.489708, 42.584156]</td>\n",
       "      <td>[0.65283525, 0.049256787, 0.0040637814, -0.372...</td>\n",
       "      <td>[1.2623284, 2.9640253, -1.1862377, -2.7128203]</td>\n",
       "      <td>[26.18175, 12.866315, 11.501307, 5.819031]</td>\n",
       "      <td>[0.023714595, 0.072446235, 0.18279643, 0.04769...</td>\n",
       "      <td>[81.170265]</td>\n",
       "      <td>...</td>\n",
       "      <td>39.221336</td>\n",
       "      <td>0.939790</td>\n",
       "      <td>51.113882</td>\n",
       "      <td>429.968685</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0658118, 0.99876314, 0.97993207, 0.97051746]</td>\n",
       "      <td>[1.2114035, 1.1219594, 1.0965359, 1.0837984]</td>\n",
       "      <td>[0.92022, 0.8755669, 0.8633281, 0.8572365]</td>\n",
       "      <td>[0.015665508301616195, 0.011972840328348269, 0...</td>\n",
       "      <td>0.053371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10217</th>\n",
       "      <td>[70.40277, 68.24021, 46.492508, 38.53872]</td>\n",
       "      <td>[62.142036, -66.15425, 11.3408785, 21.24971]</td>\n",
       "      <td>[33.089546, -16.743408, -45.08811, 32.150932]</td>\n",
       "      <td>[73.01804, 127.114, -6.53223, 1.8371032]</td>\n",
       "      <td>[103.24376, 144.41399, 47.844208, 39.315228]</td>\n",
       "      <td>[0.9073982, 1.3805118, -0.1400425, 0.047650993]</td>\n",
       "      <td>[0.48929468, -2.8937018, -1.324381, 0.9867716]</td>\n",
       "      <td>[19.26365, 6.3800254, 9.211119, 7.555094]</td>\n",
       "      <td>[0.14594533, 0.06228008, 0.21632934, 0.22753808]</td>\n",
       "      <td>[46.15755]</td>\n",
       "      <td>...</td>\n",
       "      <td>34.314968</td>\n",
       "      <td>0.305223</td>\n",
       "      <td>12.109727</td>\n",
       "      <td>421.125037</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.9762567, 0.9745825, 0.97819126, 0.9695386]</td>\n",
       "      <td>[1.0912411, 1.089095, 1.094182, 1.0824732]</td>\n",
       "      <td>[0.8612723, 0.86007005, 0.8622005, 0.85660404]</td>\n",
       "      <td>[0.013489665329338277, 0.012603920496344472, 0...</td>\n",
       "      <td>0.049692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10219</th>\n",
       "      <td>[191.1467, 67.37017, 55.301334, 42.804222]</td>\n",
       "      <td>[-32.919975, 11.902387, 49.222507, -37.762463]</td>\n",
       "      <td>[188.29057, -66.31043, -25.206787, -20.154352]</td>\n",
       "      <td>[-94.525185, 216.75647, 121.03794, -6.248284]</td>\n",
       "      <td>[215.51312, 227.2476, 133.68137, 43.943676]</td>\n",
       "      <td>[-0.4763018, 1.8850393, 1.5249739, -0.14546004]</td>\n",
       "      <td>[1.7438829, -1.3931926, -0.47327974, -2.651339]</td>\n",
       "      <td>[31.206251, 10.925554, 12.7393, 7.7333016]</td>\n",
       "      <td>[0.016019225, 0.15171196, 0.35752797, 0.18074991]</td>\n",
       "      <td>[47.998734]</td>\n",
       "      <td>...</td>\n",
       "      <td>59.267735</td>\n",
       "      <td>1.211613</td>\n",
       "      <td>60.748725</td>\n",
       "      <td>622.946681</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0787253, 0.9113226, 0.96403944, 0.97422427]</td>\n",
       "      <td>[1.2281682, 1.0085965, 1.0755533, 1.0888155]</td>\n",
       "      <td>[0.92928237, 0.8140486, 0.8525255, 0.859633]</td>\n",
       "      <td>[0.012932246274950801, 0.01988385154028153, 0....</td>\n",
       "      <td>0.057670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10222</th>\n",
       "      <td>[173.31035, 83.776825, 57.827168, 56.62271, 30...</td>\n",
       "      <td>[43.252007, 63.498688, -53.14746, 35.39362, -1...</td>\n",
       "      <td>[-167.82652, 54.648632, 22.788784, -44.197548,...</td>\n",
       "      <td>[-403.75302, 98.60294, -65.80965, -39.178917, ...</td>\n",
       "      <td>[440.09467, 130.10667, 88.1327, 69.49085, 57.2...</td>\n",
       "      <td>[-1.5820384, 1.0011468, -0.97569513, -0.646042...</td>\n",
       "      <td>[-1.3185664, 0.71063083, 2.7365212, -0.8955647...</td>\n",
       "      <td>[25.106627, 13.662026, 9.616706, 9.3733425, 6....</td>\n",
       "      <td>[0.04489475, 0.07144006, 0.17329833, 0.0449933...</td>\n",
       "      <td>[83.70094]</td>\n",
       "      <td>...</td>\n",
       "      <td>43.551033</td>\n",
       "      <td>0.453650</td>\n",
       "      <td>27.160266</td>\n",
       "      <td>1059.163078</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0299058, 0.98606575, 0.9661692, 0.9886886, ...</td>\n",
       "      <td>[1.1587267, 1.103788, 1.0782923, 1.1083677, 1....</td>\n",
       "      <td>[0.9010849, 0.8683435, 0.8540461, 0.86900944, ...</td>\n",
       "      <td>[0.015206536541080345, 0.013211845102505695, 0...</td>\n",
       "      <td>0.065845</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10225</th>\n",
       "      <td>[120.00114, 106.23623, 83.79958, 39.315933]</td>\n",
       "      <td>[-110.537315, 53.453392, 66.960495, 37.940243]</td>\n",
       "      <td>[-46.709484, 91.80889, 50.385136, -10.309241]</td>\n",
       "      <td>[-110.28063, 545.8254, 15.753469, 90.76604]</td>\n",
       "      <td>[163.01445, 556.20966, 86.62476, 99.099556]</td>\n",
       "      <td>[-0.82292044, 2.33912, 0.18689981, 1.5737151]</td>\n",
       "      <td>[-2.741784, 1.0435495, 0.645074, -0.26531717]</td>\n",
       "      <td>[3.4091, 12.557963, 15.274417, 6.042013]</td>\n",
       "      <td>[-1.0, 0.041928846, 0.0989043, 0.22138867]</td>\n",
       "      <td>[66.76375]</td>\n",
       "      <td>...</td>\n",
       "      <td>54.130268</td>\n",
       "      <td>2.819074</td>\n",
       "      <td>118.678420</td>\n",
       "      <td>804.446239</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0081463, 0.9266253, 1.0140518, 0.9497346]</td>\n",
       "      <td>[1.1317959, 1.0275815, 1.1425346, 1.0571189]</td>\n",
       "      <td>[0.8844966, 0.8256691, 0.8855689, 0.8423504]</td>\n",
       "      <td>[0.014848383593684738, 0.010778239837053382, 0...</td>\n",
       "      <td>0.052572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10227</th>\n",
       "      <td>[162.60464, 97.380264, 69.19422, 48.858818]</td>\n",
       "      <td>[-128.76942, 93.779305, 69.013245, -22.288055]</td>\n",
       "      <td>[-99.29101, -26.23656, 5.001249, -43.47904]</td>\n",
       "      <td>[109.31008, -310.87958, -71.0862, -48.97981]</td>\n",
       "      <td>[196.41995, 326.7959, 100.057365, 70.0982]</td>\n",
       "      <td>[0.6297802, -1.8776029, -0.9005764, -0.8831235]</td>\n",
       "      <td>[-2.4847388, -0.27279466, 0.072341494, -2.0444...</td>\n",
       "      <td>[13.850341, 25.817423, 13.053301, 11.293903]</td>\n",
       "      <td>[0.057347666, 0.03138498, 0.09431739, 0.05737557]</td>\n",
       "      <td>[215.04561]</td>\n",
       "      <td>...</td>\n",
       "      <td>55.397213</td>\n",
       "      <td>2.889861</td>\n",
       "      <td>216.565971</td>\n",
       "      <td>1093.697242</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.066564, 0.9236557, 0.97532415, 0.9584472]</td>\n",
       "      <td>[1.2123883, 1.0239758, 1.0900458, 1.0683542]</td>\n",
       "      <td>[0.92073977, 0.8233356, 0.86060244, 0.8485402]</td>\n",
       "      <td>[0.015665508301616195, 0.01673630345993146, 0....</td>\n",
       "      <td>0.057896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10228</th>\n",
       "      <td>[167.87982, 123.93246, 77.46344, 48.38806]</td>\n",
       "      <td>[-112.767075, 113.53397, -58.0194, 10.333528]</td>\n",
       "      <td>[124.367294, -49.691944, -51.325764, -47.271797]</td>\n",
       "      <td>[129.77724, -20.728622, -19.536287, 85.58175]</td>\n",
       "      <td>[212.99762, 126.52576, 80.61259, 98.59704]</td>\n",
       "      <td>[0.7114746, -0.16648723, -0.2496003, 1.3351158]</td>\n",
       "      <td>[2.307315, -0.41256443, -2.4173338, -1.3555835]</td>\n",
       "      <td>[18.499205, 14.826956, 10.776747, 7.4656367]</td>\n",
       "      <td>[0.064316615, 0.054772954, 0.016131822, 0.3029...</td>\n",
       "      <td>[70.07778]</td>\n",
       "      <td>...</td>\n",
       "      <td>23.645197</td>\n",
       "      <td>1.258421</td>\n",
       "      <td>47.922267</td>\n",
       "      <td>596.707315</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0690649, 1.0444857, 1.0084944, 0.9580295]</td>\n",
       "      <td>[1.215656, 1.1832348, 1.1350635, 1.0678161]</td>\n",
       "      <td>[0.9224738, 0.90573657, 0.88192534, 0.8482429]</td>\n",
       "      <td>[0.012667878716790804, 0.013810453721785331, 0...</td>\n",
       "      <td>0.052432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10229</th>\n",
       "      <td>[131.6085, 100.451256, 59.297516, 56.737614]</td>\n",
       "      <td>[-117.29932, 99.77856, -9.882495, 15.625484]</td>\n",
       "      <td>[59.679733, -11.605829, 58.468212, -54.54357]</td>\n",
       "      <td>[64.722595, 65.740776, 15.172415, -31.249958]</td>\n",
       "      <td>[148.08495, 120.99875, 62.02725, 66.12058]</td>\n",
       "      <td>[0.47384867, 0.61495537, 0.25315657, -0.526164]</td>\n",
       "      <td>[2.6709445, -0.11579552, 1.7382371, -1.2917916]</td>\n",
       "      <td>[20.477732, 15.112643, 10.048984, 13.274587]</td>\n",
       "      <td>[0.05773793, 0.26383004, 0.09608684, 0.10716645]</td>\n",
       "      <td>[64.977776]</td>\n",
       "      <td>...</td>\n",
       "      <td>28.553741</td>\n",
       "      <td>2.616739</td>\n",
       "      <td>83.205538</td>\n",
       "      <td>441.030140</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0494101, 1.0276597, 0.991364, 0.9888043]</td>\n",
       "      <td>[1.1897742, 1.1607838, 1.1119795, 1.108524]</td>\n",
       "      <td>[0.9090462, 0.8945356, 0.8707485, 0.86908466]</td>\n",
       "      <td>[0.013878180416345412, 0.014198857704354235, 0...</td>\n",
       "      <td>0.053233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10230</th>\n",
       "      <td>[108.7685, 103.91984, 101.39869, 34.73413]</td>\n",
       "      <td>[-104.16292, -14.3914175, 42.67456, -19.709814]</td>\n",
       "      <td>[-31.315702, 102.91851, -91.981384, 28.600405]</td>\n",
       "      <td>[-0.7798994, -130.24396, -208.07652, -26.625195]</td>\n",
       "      <td>[109.13206, 167.33003, 232.38203, 44.03242]</td>\n",
       "      <td>[-0.0071702073, -1.0496602, -1.4666793, -0.706...</td>\n",
       "      <td>[-2.8495474, 1.7097286, -1.1364042, 2.1741996]</td>\n",
       "      <td>[8.866275, 15.379108, 20.588413, 4.8469706]</td>\n",
       "      <td>[0.1885711, 0.16453494, 0.06635992, 0.20652986]</td>\n",
       "      <td>[50.541122]</td>\n",
       "      <td>...</td>\n",
       "      <td>48.514278</td>\n",
       "      <td>2.220427</td>\n",
       "      <td>88.718217</td>\n",
       "      <td>504.964413</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0339293, 0.9991268, 0.9976014, 0.96527004]</td>\n",
       "      <td>[1.1691663, 1.1204045, 1.1184704, 1.076692]</td>\n",
       "      <td>[0.8986923, 0.87784904, 0.8767324, 0.853848]</td>\n",
       "      <td>[0.012597920671337921, 0.013823385916409173, 0...</td>\n",
       "      <td>0.053215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10231</th>\n",
       "      <td>[67.987526, 60.333588, 49.814526, 40.67125]</td>\n",
       "      <td>[-45.55395, -38.62655, -5.9370017, 40.596027]</td>\n",
       "      <td>[-50.46921, -46.347942, 49.45947, -2.4724548]</td>\n",
       "      <td>[136.22237, -155.74965, -26.315191, -36.56181]</td>\n",
       "      <td>[153.12108, 167.4264, 58.034687, 55.277466]</td>\n",
       "      <td>[1.4452611, -1.6770723, -0.5063475, -0.8080934]</td>\n",
       "      <td>[-2.3050508, -2.2655761, 1.6902624, -0.060828727]</td>\n",
       "      <td>[16.347063, 11.554517, 13.9301405, 8.042494]</td>\n",
       "      <td>[0.0795223, 0.04750686, 0.088330634, -1.0]</td>\n",
       "      <td>[73.6135]</td>\n",
       "      <td>...</td>\n",
       "      <td>27.031485</td>\n",
       "      <td>1.664401</td>\n",
       "      <td>65.969433</td>\n",
       "      <td>591.085163</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.97438526, 0.9078936, 0.9816977, 0.9510037]</td>\n",
       "      <td>[1.088842, 1.0042396, 1.098923, 1.0587567]</td>\n",
       "      <td>[0.8599285, 0.8115477, 0.8644724, 0.84325063]</td>\n",
       "      <td>[0.013644553164686754, 0.013814280321728272, 0...</td>\n",
       "      <td>0.052733</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10232</th>\n",
       "      <td>[221.48122, 62.162468, 52.53133, 46.53428]</td>\n",
       "      <td>[-215.07167, 36.614147, 43.171555, 40.56167]</td>\n",
       "      <td>[-52.89712, -50.235214, 29.929203, 22.807678]</td>\n",
       "      <td>[-329.8092, -22.751566, -137.16771, -21.702822]</td>\n",
       "      <td>[398.18362, 67.231606, 147.44698, 51.696507]</td>\n",
       "      <td>[-1.1887056, -0.3582868, -1.6877419, -0.4509441]</td>\n",
       "      <td>[-2.9004283, -0.9409664, 0.60618955, 0.51223475]</td>\n",
       "      <td>[26.873224, 11.759348, 12.887676, 6.006425]</td>\n",
       "      <td>[0.24344265, 0.49841312, 0.3290421, 0.083682016]</td>\n",
       "      <td>[55.788624]</td>\n",
       "      <td>...</td>\n",
       "      <td>34.386921</td>\n",
       "      <td>1.346102</td>\n",
       "      <td>54.611573</td>\n",
       "      <td>521.865526</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0402, 0.99418557, 0.90383995, 0.9782357]</td>\n",
       "      <td>[1.1706073, 1.1157867, 0.9990554, 1.0942421]</td>\n",
       "      <td>[0.9097926, 0.8725844, 0.8086245, 0.8622293]</td>\n",
       "      <td>[0.013563771603587836, 0.012609647113160587, 0...</td>\n",
       "      <td>0.051473</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10233</th>\n",
       "      <td>[69.90544, 65.056076, 56.929882, 43.98118]</td>\n",
       "      <td>[-69.85206, 48.616665, -41.358475, -43.285336]</td>\n",
       "      <td>[-2.7314131, 43.228607, -39.121452, -7.7925506]</td>\n",
       "      <td>[-4.3457723, -50.854984, 98.613014, 173.73503]</td>\n",
       "      <td>[70.64945, 82.93739, 114.6261, 179.48753]</td>\n",
       "      <td>[-0.062126465, -0.7183224, 1.3170244, 2.0825663]</td>\n",
       "      <td>[-3.1025097, 0.7268008, -2.3839834, -2.963473]</td>\n",
       "      <td>[9.2568035, 7.751727, 13.1759, 9.877501]</td>\n",
       "      <td>[0.09868152, 0.090908, 0.048026774, 0.19234957]</td>\n",
       "      <td>[45.23943]</td>\n",
       "      <td>...</td>\n",
       "      <td>31.825706</td>\n",
       "      <td>0.552622</td>\n",
       "      <td>20.744514</td>\n",
       "      <td>443.397069</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0015852, 0.9969893, 0.9654166, 0.8990858]</td>\n",
       "      <td>[1.1257623, 1.1195681, 1.0773246, 0.99293596]</td>\n",
       "      <td>[0.8774082, 0.87441057, 0.8535086, 0.8052357]</td>\n",
       "      <td>[0.012188069126791122, 0.013498642504859671, 0...</td>\n",
       "      <td>0.057476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10234</th>\n",
       "      <td>[100.62303, 59.09359, 51.69377, 29.279867]</td>\n",
       "      <td>[17.30816, -36.510292, 31.821781, 22.15763]</td>\n",
       "      <td>[99.12327, 46.465588, -40.738438, 19.140272]</td>\n",
       "      <td>[2.0249922, 145.70752, -2.225617, 54.93762]</td>\n",
       "      <td>[102.02417, 157.55634, 53.274185, 62.59838]</td>\n",
       "      <td>[0.020123182, 1.6344194, -0.04304058, 1.3869028]</td>\n",
       "      <td>[1.3979267, 2.236787, -0.90767145, 0.7124645]</td>\n",
       "      <td>[16.728289, 10.063054, 12.686182, 6.5654206]</td>\n",
       "      <td>[0.003705421, 0.01549544, 0.077154435, -1.0]</td>\n",
       "      <td>[76.16329]</td>\n",
       "      <td>...</td>\n",
       "      <td>26.032923</td>\n",
       "      <td>0.116896</td>\n",
       "      <td>5.259182</td>\n",
       "      <td>401.594627</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0277927, 0.9072672, 0.9836535, 0.9400066]</td>\n",
       "      <td>[1.1609617, 1.0034406, 1.1015663, 1.0445496]</td>\n",
       "      <td>[0.89462364, 0.81109375, 0.86574066, 0.8354636]</td>\n",
       "      <td>[0.01265191130147311, 0.017158982940283903, 0....</td>\n",
       "      <td>0.057207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10237</th>\n",
       "      <td>[78.12293, 49.30801, 45.678516, 45.407894, 38....</td>\n",
       "      <td>[-71.05364, -22.768774, 26.69661, 9.83569, 8.1...</td>\n",
       "      <td>[32.474194, 43.73629, -37.06505, -44.329857, 3...</td>\n",
       "      <td>[-70.03147, -29.336317, -11.671077, 233.53206,...</td>\n",
       "      <td>[105.554634, 57.644016, 48.499336, 238.02911, ...</td>\n",
       "      <td>[-0.80620843, -0.5644987, -0.25280336, 2.34010...</td>\n",
       "      <td>[2.7129016, 2.0507817, -0.9465996, -1.3524582,...</td>\n",
       "      <td>[11.583654, 5.5617332, 11.377384, 7.6650867, 8...</td>\n",
       "      <td>[0.011154232, 0.119220935, 0.20653495, -1.0, 0...</td>\n",
       "      <td>[57.20607]</td>\n",
       "      <td>...</td>\n",
       "      <td>45.727962</td>\n",
       "      <td>1.861224</td>\n",
       "      <td>82.038637</td>\n",
       "      <td>691.043929</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[0.9820324, 0.9811671, 0.97732246, 0.89990216,...</td>\n",
       "      <td>[1.098635, 1.0982057, 1.093007, 0.9939895, 1.0...</td>\n",
       "      <td>[0.8654299, 0.8641285, 0.86163795, 0.8058148, ...</td>\n",
       "      <td>[0.014130535596401352, 0.014375582317432647, 0...</td>\n",
       "      <td>0.063359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10240</th>\n",
       "      <td>[245.70505, 188.34213, 95.47611, 66.18684, 37....</td>\n",
       "      <td>[-198.22678, 181.80824, -93.49366, 33.97501, -...</td>\n",
       "      <td>[145.17958, -49.178467, 19.35519, -56.80137, -...</td>\n",
       "      <td>[71.10801, -20.259659, -54.518806, -192.28453,...</td>\n",
       "      <td>[256.9851, 191.13593, 112.33528, 203.5519, 39....</td>\n",
       "      <td>[0.2855092, -0.10736201, -0.5438168, -1.788026...</td>\n",
       "      <td>[2.5094566, -0.2641744, 2.937455, -1.0317477, ...</td>\n",
       "      <td>[24.779648, 25.489761, 23.048391, 8.907194, 6....</td>\n",
       "      <td>[0.040300533, 0.005769495, 0.047733407, 0.2493...</td>\n",
       "      <td>[63.30289]</td>\n",
       "      <td>...</td>\n",
       "      <td>24.084053</td>\n",
       "      <td>2.702403</td>\n",
       "      <td>76.225549</td>\n",
       "      <td>881.707567</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0933524, 1.0776762, 1.023743, 0.91076076, 0...</td>\n",
       "      <td>[1.2463814, 1.22682, 1.1555386, 1.0078846, 1.0...</td>\n",
       "      <td>[0.94032353, 0.92853236, 0.8919476, 0.81363684...</td>\n",
       "      <td>[0.013756120307764047, 0.01383166568569747, 0....</td>\n",
       "      <td>0.079835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10243</th>\n",
       "      <td>[73.33864, 69.3911, 50.604885, 42.094406]</td>\n",
       "      <td>[-56.657387, -69.16012, -0.0013655734, 0.09745...</td>\n",
       "      <td>[-46.567112, 5.657078, 50.604885, -42.094296]</td>\n",
       "      <td>[50.57066, 97.66962, 242.01743, -48.091858]</td>\n",
       "      <td>[89.46692, 121.10448, 247.35895, 64.40416]</td>\n",
       "      <td>[0.64408463, 1.1423473, 2.2688642, -0.97862]</td>\n",
       "      <td>[-2.4536357, 3.0599775, 1.5708233, -1.5684812]</td>\n",
       "      <td>[8.26936, 17.658314, 7.291224, 7.945442]</td>\n",
       "      <td>[0.086028494, 0.0139668025, -1.0, -1.0]</td>\n",
       "      <td>[60.59581]</td>\n",
       "      <td>...</td>\n",
       "      <td>20.153397</td>\n",
       "      <td>3.013779</td>\n",
       "      <td>69.749899</td>\n",
       "      <td>486.643614</td>\n",
       "      <td>[0.0, 0.0, 0.0, 0.0]</td>\n",
       "      <td>[1.0047618, 0.97547656, 0.9027976, 0.95232487]</td>\n",
       "      <td>[1.1300403, 1.0902412, 0.9977171, 1.0604614]</td>\n",
       "      <td>[0.87948334, 0.86071193, 0.807878, 0.84418833]</td>\n",
       "      <td>[0.014293676031865718, 0.012323191436731206, 0...</td>\n",
       "      <td>0.052761</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11235 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  Jet_pt  \\\n",
       "4              [138.04616, 94.67506, 94.59278, 48.80328]   \n",
       "6            [83.51601, 81.088104, 55.010494, 37.194473]   \n",
       "11           [151.74925, 61.247166, 54.219936, 48.46743]   \n",
       "12     [133.42097, 116.53707, 97.29162, 81.064026, 54...   \n",
       "13           [64.06168, 54.635235, 46.835938, 29.734083]   \n",
       "18         [114.352646, 74.213425, 59.804546, 50.571167]   \n",
       "21     [135.52043, 107.95586, 102.08418, 65.905945, 6...   \n",
       "32            [98.66662, 93.87883, 63.005302, 54.710545]   \n",
       "33             [91.55638, 85.14389, 76.69449, 43.115036]   \n",
       "34            [92.86159, 72.03524, 49.268333, 45.874798]   \n",
       "35            [137.96857, 85.26039, 58.87274, 47.439617]   \n",
       "39            [100.08818, 97.01478, 96.11395, 50.343807]   \n",
       "40               [84.550186, 57.80859, 47.946735, 35.94]   \n",
       "42             [94.55912, 92.35655, 48.504562, 38.63664]   \n",
       "43     [98.36897, 55.022556, 47.308754, 37.420692, 32...   \n",
       "44     [98.46721, 92.746414, 80.3417, 73.17154, 43.33...   \n",
       "47            [160.05638, 91.37448, 66.05984, 44.347458]   \n",
       "48            [109.74597, 82.67802, 48.592052, 47.00833]   \n",
       "49     [142.44502, 99.02341, 70.25586, 51.527637, 29....   \n",
       "50               [119.6123, 93.60879, 81.2154, 26.15081]   \n",
       "51           [106.725655, 83.71298, 72.613945, 50.96216]   \n",
       "54           [70.88564, 63.167164, 57.730312, 40.394836]   \n",
       "55            [96.108055, 67.4182, 49.004913, 43.792606]   \n",
       "56     [109.59833, 95.25291, 82.29073, 74.34589, 32.7...   \n",
       "59              [101.88489, 77.68119, 71.96598, 69.8076]   \n",
       "61           [132.36314, 82.45706, 63.933987, 41.040478]   \n",
       "62           [105.75745, 52.98347, 46.691208, 40.552586]   \n",
       "63             [206.25558, 179.57268, 65.9066, 41.80358]   \n",
       "64           [212.78462, 125.08565, 75.14124, 39.530018]   \n",
       "71             [209.44385, 85.12906, 59.00432, 41.34547]   \n",
       "...                                                  ...   \n",
       "10188         [111.96687, 82.96299, 46.18269, 29.100199]   \n",
       "10189       [557.34467, 309.93918, 200.38477, 36.751278]   \n",
       "10193         [83.52273, 67.93133, 60.229748, 24.949112]   \n",
       "10194          [98.034584, 86.56507, 79.50725, 65.40271]   \n",
       "10196         [68.89223, 52.508892, 47.988594, 38.99519]   \n",
       "10199        [75.476166, 57.59272, 52.828663, 29.514648]   \n",
       "10200        [97.388756, 62.720184, 58.326958, 35.01478]   \n",
       "10201        [59.480656, 49.433968, 48.368305, 32.57849]   \n",
       "10204          [79.248566, 73.63001, 65.28366, 44.67504]   \n",
       "10206  [134.80693, 118.455765, 77.14059, 70.11406, 54...   \n",
       "10208        [200.29799, 167.91031, 153.24255, 90.84163]   \n",
       "10209         [108.59547, 93.9389, 89.144875, 73.556244]   \n",
       "10210        [69.435936, 64.687225, 48.48188, 31.496208]   \n",
       "10211         [176.64723, 111.10256, 87.04112, 62.43428]   \n",
       "10213          [161.06493, 66.91172, 48.13432, 39.42192]   \n",
       "10217          [70.40277, 68.24021, 46.492508, 38.53872]   \n",
       "10219         [191.1467, 67.37017, 55.301334, 42.804222]   \n",
       "10222  [173.31035, 83.776825, 57.827168, 56.62271, 30...   \n",
       "10225        [120.00114, 106.23623, 83.79958, 39.315933]   \n",
       "10227        [162.60464, 97.380264, 69.19422, 48.858818]   \n",
       "10228         [167.87982, 123.93246, 77.46344, 48.38806]   \n",
       "10229       [131.6085, 100.451256, 59.297516, 56.737614]   \n",
       "10230         [108.7685, 103.91984, 101.39869, 34.73413]   \n",
       "10231        [67.987526, 60.333588, 49.814526, 40.67125]   \n",
       "10232         [221.48122, 62.162468, 52.53133, 46.53428]   \n",
       "10233         [69.90544, 65.056076, 56.929882, 43.98118]   \n",
       "10234         [100.62303, 59.09359, 51.69377, 29.279867]   \n",
       "10237  [78.12293, 49.30801, 45.678516, 45.407894, 38....   \n",
       "10240  [245.70505, 188.34213, 95.47611, 66.18684, 37....   \n",
       "10243          [73.33864, 69.3911, 50.604885, 42.094406]   \n",
       "\n",
       "                                                  Jet_px  \\\n",
       "4          [131.60617, -86.533485, -87.61679, 42.393177]   \n",
       "6          [46.21714, -17.724367, 2.3489554, -24.922897]   \n",
       "11           [-88.32033, 57.01285, 14.468231, 27.437374]   \n",
       "12     [-128.03886, -98.46585, 51.985607, 73.53832, 5...   \n",
       "13       [64.014366, -48.904415, -46.812305, -29.131674]   \n",
       "18            [-65.29724, 47.15533, -39.96081, 44.15195]   \n",
       "21     [76.85804, -107.89555, -39.889767, -59.481544,...   \n",
       "32           [-49.61048, 41.990833, -33.5833, 51.179928]   \n",
       "33           [-80.11284, 81.10754, 32.125847, -42.42531]   \n",
       "34           [-81.01813, 68.9223, -45.04351, -4.9028487]   \n",
       "35         [103.16463, -78.03881, -51.608772, -43.85474]   \n",
       "39        [46.521812, -12.519229, -67.927284, 49.895935]   \n",
       "40         [-3.718118, 28.171354, -36.699295, -22.38516]   \n",
       "42           [74.570244, -86.21327, 25.705482, 36.65526]   \n",
       "43     [73.01057, -53.108112, 12.4729, 23.374151, 1.6...   \n",
       "44     [40.875908, -75.96299, 78.20444, -71.964325, 1...   \n",
       "47         [-14.963794, 39.75022, -12.136979, -36.29571]   \n",
       "48        [-77.85112, 13.717307, -1.8301195, -22.160004]   \n",
       "49     [107.200615, 21.428003, 46.324238, 6.5662456, ...   \n",
       "50         [119.586174, -93.60506, -74.84675, -22.50837]   \n",
       "51        [47.111168, -7.4283304, -24.404598, 45.317093]   \n",
       "54       [-28.825638, -11.934006, -52.801384, 34.932465]   \n",
       "55        [83.338486, -55.182285, -48.21355, -33.324154]   \n",
       "56     [109.218056, -16.511532, -77.17252, -73.294205...   \n",
       "59           [40.085938, 38.960857, -21.84973, 4.552362]   \n",
       "61         [131.4178, -21.921827, 57.091976, -18.806196]   \n",
       "62        [-87.823006, 30.635366, -36.616783, 38.371826]   \n",
       "63           [-141.6943, 84.79769, -58.448116, 40.16236]   \n",
       "64          [135.49237, -30.96225, 48.927395, -27.64143]   \n",
       "71           [158.82384, -68.57716, 47.21317, 11.835998]   \n",
       "...                                                  ...   \n",
       "10188         [51.932186, 66.0052, -38.80246, -25.38348]   \n",
       "10189      [550.8109, -239.36673, -125.75982, 2.7742605]   \n",
       "10193          [83.1955, -44.74221, 19.2497, -16.910238]   \n",
       "10194    [-60.98385, -58.902252, 37.419796, -0.21741875]   \n",
       "10196      [-16.483011, 1.4485862, 39.185352, -26.51062]   \n",
       "10199      [73.71383, -31.177393, -52.80216, -3.0317202]   \n",
       "10200        [-81.65464, 50.305645, 39.268185, 7.165481]   \n",
       "10201       [-57.50138, -43.83078, 46.301266, 17.527678]   \n",
       "10204        [41.650124, 25.43021, -8.802421, 34.027393]   \n",
       "10206  [-120.49098, 102.20966, 70.338486, 52.747307, ...   \n",
       "10208     [-29.598543, 57.126656, -8.613181, -49.804825]   \n",
       "10209        [2.6427188, 23.295773, -78.06444, 64.86333]   \n",
       "10210     [17.68727, -58.818386, -3.2423365, -16.809294]   \n",
       "10211     [133.62402, -97.798744, -27.130733, 6.1729493]   \n",
       "10213      [48.899193, -65.85962, 18.057592, -35.853325]   \n",
       "10217       [62.142036, -66.15425, 11.3408785, 21.24971]   \n",
       "10219     [-32.919975, 11.902387, 49.222507, -37.762463]   \n",
       "10222  [43.252007, 63.498688, -53.14746, 35.39362, -1...   \n",
       "10225     [-110.537315, 53.453392, 66.960495, 37.940243]   \n",
       "10227     [-128.76942, 93.779305, 69.013245, -22.288055]   \n",
       "10228      [-112.767075, 113.53397, -58.0194, 10.333528]   \n",
       "10229       [-117.29932, 99.77856, -9.882495, 15.625484]   \n",
       "10230    [-104.16292, -14.3914175, 42.67456, -19.709814]   \n",
       "10231      [-45.55395, -38.62655, -5.9370017, 40.596027]   \n",
       "10232       [-215.07167, 36.614147, 43.171555, 40.56167]   \n",
       "10233     [-69.85206, 48.616665, -41.358475, -43.285336]   \n",
       "10234        [17.30816, -36.510292, 31.821781, 22.15763]   \n",
       "10237  [-71.05364, -22.768774, 26.69661, 9.83569, 8.1...   \n",
       "10240  [-198.22678, 181.80824, -93.49366, 33.97501, -...   \n",
       "10243  [-56.657387, -69.16012, -0.0013655734, 0.09745...   \n",
       "\n",
       "                                                  Jet_py  \\\n",
       "4              [41.67204, 38.40994, -35.65239, 24.17806]   \n",
       "6            [69.562195, -79.12728, 54.96032, 27.609385]   \n",
       "11         [-123.39918, -22.377449, -52.253914, 39.9535]   \n",
       "12     [37.51276, 62.332695, -82.2384, -34.109993, 14...   \n",
       "13        [-2.4619014, 24.359125, 1.4876113, -5.9549384]   \n",
       "18        [93.87651, -57.306255, -44.494015, -24.658628]   \n",
       "21     [-111.61823, 3.6077018, 93.96801, 28.382019, -...   \n",
       "32          [-85.28717, 83.96431, 53.308815, -19.335423]   \n",
       "33          [44.32273, 25.904629, -69.641754, -7.681109]   \n",
       "34        [45.379932, -20.947363, -19.961231, -45.61205]   \n",
       "35          [-91.60997, 34.340626, 28.329035, 18.090847]   \n",
       "39          [-88.61921, -96.20362, 67.99835, -6.7003436]   \n",
       "40           [-84.46839, 50.47978, 30.855326, 28.117397]   \n",
       "42           [58.14384, -33.12104, 41.13296, -12.214001]   \n",
       "43     [-65.92353, 14.38785, -45.63491, 29.222546, -3...   \n",
       "44     [-89.58209, -53.21205, 18.408005, -13.236672, ...   \n",
       "47            [-159.35536, 82.27524, 64.93532, 25.48173]   \n",
       "48        [-77.35231, -81.532135, -48.557575, 41.457417]   \n",
       "49     [93.80092, -96.67717, -52.81998, 51.10755, -2....   \n",
       "50       [-2.4996867, -0.8361497, 31.526278, -13.313083]   \n",
       "51           [-95.76483, 83.38275, -68.39006, 23.313148]   \n",
       "54        [64.759995, -62.02959, -23.341011, -20.284622]   \n",
       "55           [-47.869137, 38.731495, 8.77127, 28.412907]   \n",
       "56     [9.12194, 93.810905, -28.568634, -12.460772, -...   \n",
       "59           [93.667755, 67.20431, -68.56888, -69.65901]   \n",
       "61         [15.79125, 79.489624, -28.776043, -36.478043]   \n",
       "62          [-58.92162, 43.22872, -28.970331, 13.119263]   \n",
       "63          [-149.88025, 158.28992, -30.45485, 11.59846]   \n",
       "64         [164.07045, -121.19306, -57.02909, 28.259047]   \n",
       "71       [-136.53467, 50.439365, -35.389637, -39.615112]   \n",
       "...                                                  ...   \n",
       "10188        [-99.1949, 50.261024, 25.044163, 14.230266]   \n",
       "10189      [-85.09066, 196.89047, -156.00809, -36.64642]   \n",
       "10193      [-7.3860683, 51.115555, 57.07076, -18.343992]   \n",
       "10194       [76.75774, -63.435295, -70.150986, 65.40235]   \n",
       "10196      [66.89132, -52.488907, -27.702225, -28.59741]   \n",
       "10199      [16.214891, -48.42408, 1.6732451, -29.358526]   \n",
       "10200       [53.07626, -37.45882, -43.128227, -34.27376]   \n",
       "10201     [15.216434, 22.860006, -13.988781, -27.461584]   \n",
       "10204       [67.42108, 69.099075, -64.68751, -28.948154]   \n",
       "10206  [-60.455223, 59.87447, 31.672821, -46.192017, ...   \n",
       "10208       [-198.09898, 157.89368, 153.0003, -75.97158]   \n",
       "10209       [108.56331, -91.00453, -43.04361, 34.688187]   \n",
       "10210      [67.14544, -26.922749, 48.373337, -26.635668]   \n",
       "10211       [-115.53731, -52.717976, 82.70477, 62.12837]   \n",
       "10213     [153.46263, 11.819001, -44.618786, -16.389845]   \n",
       "10217      [33.089546, -16.743408, -45.08811, 32.150932]   \n",
       "10219     [188.29057, -66.31043, -25.206787, -20.154352]   \n",
       "10222  [-167.82652, 54.648632, 22.788784, -44.197548,...   \n",
       "10225      [-46.709484, 91.80889, 50.385136, -10.309241]   \n",
       "10227        [-99.29101, -26.23656, 5.001249, -43.47904]   \n",
       "10228   [124.367294, -49.691944, -51.325764, -47.271797]   \n",
       "10229      [59.679733, -11.605829, 58.468212, -54.54357]   \n",
       "10230     [-31.315702, 102.91851, -91.981384, 28.600405]   \n",
       "10231      [-50.46921, -46.347942, 49.45947, -2.4724548]   \n",
       "10232      [-52.89712, -50.235214, 29.929203, 22.807678]   \n",
       "10233    [-2.7314131, 43.228607, -39.121452, -7.7925506]   \n",
       "10234       [99.12327, 46.465588, -40.738438, 19.140272]   \n",
       "10237  [32.474194, 43.73629, -37.06505, -44.329857, 3...   \n",
       "10240  [145.17958, -49.178467, 19.35519, -56.80137, -...   \n",
       "10243      [-46.567112, 5.657078, 50.604885, -42.094296]   \n",
       "\n",
       "                                                  Jet_pz  \\\n",
       "4         [-190.03336, -42.185463, -4.07461, -14.111844]   \n",
       "6         [-115.61945, 32.780437, -25.742817, 24.025312]   \n",
       "11         [-85.78932, -44.16138, -63.274807, -32.69142]   \n",
       "12     [114.63249, -66.60281, 112.296036, 89.610245, ...   \n",
       "13           [171.27898, 72.67121, 25.811522, -8.328592]   \n",
       "18         [13.571767, 171.61836, -8.216584, -23.944525]   \n",
       "21     [73.10294, 253.13187, -28.523365, 80.74549, 89...   \n",
       "32         [-190.32004, 305.6962, 125.152336, 51.959995]   \n",
       "33       [-156.71437, -21.770115, 11.597469, -20.277891]   \n",
       "34        [6.8265443, -79.315544, 36.482483, -24.657242]   \n",
       "35        [7.608752, -225.56033, -25.681833, -55.129963]   \n",
       "39        [-278.6798, -117.47398, -150.77289, -48.39831]   \n",
       "40        [-240.68903, 10.959513, -30.233086, -64.97562]   \n",
       "42       [-107.32323, -24.321844, -21.515547, -34.32654]   \n",
       "43     [-277.70694, -179.01707, -190.5178, -169.30717...   \n",
       "44     [70.71921, 5.5579295, 27.828194, -144.18951, -...   \n",
       "47          [100.57534, -62.419086, 16.54713, 172.18288]   \n",
       "48        [28.093445, -218.08313, 1.7996396, -103.20073]   \n",
       "49     [145.2574, -147.62239, -55.799732, 67.227646, ...   \n",
       "50       [-59.115913, -228.25626, -102.27824, -75.12719]   \n",
       "51           [117.68467, 16.87219, -32.52094, 181.72272]   \n",
       "54          [-20.481422, -58.69369, -144.6863, 98.65588]   \n",
       "55          [82.57477, -20.268742, 104.85535, 10.836808]   \n",
       "56     [-47.64079, 242.47995, -135.12201, 183.29764, ...   \n",
       "59           [128.13971, 182.98633, 326.0481, 11.542413]   \n",
       "61          [76.377556, 62.97516, -121.20886, -17.35544]   \n",
       "62         [-33.03492, 36.793633, -43.843742, 116.11376]   \n",
       "63           [92.478355, 44.047886, 352.7729, 18.794079]   \n",
       "64         [-230.4668, -373.65402, -32.4506, -39.291874]   \n",
       "71        [169.57489, -134.43156, -37.196342, 2.6271439]   \n",
       "...                                                  ...   \n",
       "10188          [420.16275, 76.955, 52.051716, -44.45906]   \n",
       "10189     [-604.17896, 215.18173, -43.594257, 64.927605]   \n",
       "10193      [-9.301926, -61.14358, -11.795878, -16.08784]   \n",
       "10194        [-128.9751, -34.10688, 375.7076, -258.5351]   \n",
       "10196      [-106.373184, 17.691406, 8.303438, 25.750854]   \n",
       "10199     [-120.82153, 49.83107, -238.81723, -31.769392]   \n",
       "10200     [-23.64104, -44.692524, -126.84658, 63.525517]   \n",
       "10201      [324.64355, 128.06572, -187.87703, 3.6408982]   \n",
       "10204    [-19.288006, -71.40729, -235.59778, -1.9716091]   \n",
       "10206  [49.06311, -277.01605, -32.867023, -51.31202, ...   \n",
       "10208         [-353.15186, 82.671684, 517.2, -52.993233]   \n",
       "10209      [-322.20966, -6.9135137, 60.28927, 4.3598795]   \n",
       "10210      [-34.65762, 1.8699977, 224.10652, -33.444527]   \n",
       "10211         [530.74146, 86.4145, -139.65134, 57.37893]   \n",
       "10213      [112.77862, 3.297189, 0.19560789, -15.015368]   \n",
       "10217           [73.01804, 127.114, -6.53223, 1.8371032]   \n",
       "10219      [-94.525185, 216.75647, 121.03794, -6.248284]   \n",
       "10222  [-403.75302, 98.60294, -65.80965, -39.178917, ...   \n",
       "10225        [-110.28063, 545.8254, 15.753469, 90.76604]   \n",
       "10227       [109.31008, -310.87958, -71.0862, -48.97981]   \n",
       "10228      [129.77724, -20.728622, -19.536287, 85.58175]   \n",
       "10229      [64.722595, 65.740776, 15.172415, -31.249958]   \n",
       "10230   [-0.7798994, -130.24396, -208.07652, -26.625195]   \n",
       "10231     [136.22237, -155.74965, -26.315191, -36.56181]   \n",
       "10232    [-329.8092, -22.751566, -137.16771, -21.702822]   \n",
       "10233     [-4.3457723, -50.854984, 98.613014, 173.73503]   \n",
       "10234        [2.0249922, 145.70752, -2.225617, 54.93762]   \n",
       "10237  [-70.03147, -29.336317, -11.671077, 233.53206,...   \n",
       "10240  [71.10801, -20.259659, -54.518806, -192.28453,...   \n",
       "10243        [50.57066, 97.66962, 242.01743, -48.091858]   \n",
       "\n",
       "                                                   Jet_e  \\\n",
       "4              [235.4966, 105.60841, 96.40804, 51.58028]   \n",
       "6             [143.05504, 89.04772, 62.12173, 44.837963]   \n",
       "11            [175.35788, 76.56715, 83.95073, 59.156662]   \n",
       "12     [178.20181, 136.02567, 149.1299, 121.856476, 1...   \n",
       "13             [183.1509, 91.37555, 53.98739, 31.673664]   \n",
       "18          [115.55312, 187.11679, 61.333313, 56.656246]   \n",
       "21     [155.73433, 275.85565, 109.676636, 104.69358, ...   \n",
       "32             [214.72542, 320.16498, 140.2133, 76.1247]   \n",
       "33           [181.93027, 88.273476, 79.14735, 48.373898]   \n",
       "34            [94.568, 107.729675, 62.021763, 53.256203]   \n",
       "35           [138.87318, 241.69301, 64.89157, 73.181656]   \n",
       "39             [296.3432, 152.7961, 179.11838, 70.43129]   \n",
       "40            [255.40932, 59.75763, 57.100212, 74.56346]   \n",
       "42            [144.84926, 96.13644, 53.43407, 52.161453]   \n",
       "43     [295.0351, 187.66774, 196.39731, 173.54243, 56...   \n",
       "44     [122.33316, 93.3295, 85.40038, 161.97357, 160....   \n",
       "47          [189.59464, 111.37784, 69.001755, 177.94824]   \n",
       "48            [116.3962, 233.46501, 49.99442, 114.01316]   \n",
       "49     [205.12033, 178.16539, 91.013016, 85.073944, 3...   \n",
       "50           [137.87236, 247.51872, 131.13408, 79.72866]   \n",
       "51             [159.31908, 85.97497, 80.32219, 188.8579]   \n",
       "54          [75.406944, 86.871315, 156.14229, 106.77741]   \n",
       "55          [127.91136, 71.908936, 116.03072, 45.696495]   \n",
       "56     [120.41198, 261.4102, 158.58272, 198.67528, 34...   \n",
       "59            [164.31018, 198.99043, 334.1878, 71.64251]   \n",
       "61           [153.44897, 104.74813, 137.5847, 45.276234]   \n",
       "62          [114.193275, 65.189735, 64.21247, 123.12759]   \n",
       "63          [227.65152, 185.58578, 359.07834, 46.318848]   \n",
       "64            [314.3104, 394.86868, 82.69994, 56.434505]   \n",
       "71            [271.69232, 159.84422, 70.3517, 42.746048]   \n",
       "...                                                  ...   \n",
       "10188         [434.92743, 115.49714, 69.92271, 53.57406]   \n",
       "10189           [822.3075, 377.5641, 206.60707, 75.1025]   \n",
       "10193          [84.71412, 92.00665, 63.22625, 29.887402]   \n",
       "10194         [162.73114, 95.12451, 384.1498, 266.97137]   \n",
       "10196         [127.15793, 56.43699, 49.549778, 47.36605]   \n",
       "10199        [143.33337, 76.94677, 244.87828, 43.667713]   \n",
       "10200          [103.03863, 78.47465, 139.8973, 72.85802]   \n",
       "10201       [330.20868, 137.53072, 194.12032, 33.011784]   \n",
       "10204        [84.276276, 103.39838, 244.68378, 45.47439]   \n",
       "10206  [144.16193, 301.86472, 84.52979, 87.587, 138.7...   \n",
       "10208          [406.7891, 190.82951, 540.159, 106.77151]   \n",
       "10209        [340.47308, 98.66262, 109.42314, 74.124306]   \n",
       "10210         [78.06541, 65.93304, 229.47447, 46.415123]   \n",
       "10211        [559.59705, 141.84233, 165.17448, 85.30218]   \n",
       "10213         [198.3593, 68.21724, 49.489708, 42.584156]   \n",
       "10217       [103.24376, 144.41399, 47.844208, 39.315228]   \n",
       "10219        [215.51312, 227.2476, 133.68137, 43.943676]   \n",
       "10222  [440.09467, 130.10667, 88.1327, 69.49085, 57.2...   \n",
       "10225        [163.01445, 556.20966, 86.62476, 99.099556]   \n",
       "10227         [196.41995, 326.7959, 100.057365, 70.0982]   \n",
       "10228         [212.99762, 126.52576, 80.61259, 98.59704]   \n",
       "10229         [148.08495, 120.99875, 62.02725, 66.12058]   \n",
       "10230        [109.13206, 167.33003, 232.38203, 44.03242]   \n",
       "10231        [153.12108, 167.4264, 58.034687, 55.277466]   \n",
       "10232       [398.18362, 67.231606, 147.44698, 51.696507]   \n",
       "10233          [70.64945, 82.93739, 114.6261, 179.48753]   \n",
       "10234        [102.02417, 157.55634, 53.274185, 62.59838]   \n",
       "10237  [105.554634, 57.644016, 48.499336, 238.02911, ...   \n",
       "10240  [256.9851, 191.13593, 112.33528, 203.5519, 39....   \n",
       "10243         [89.46692, 121.10448, 247.35895, 64.40416]   \n",
       "\n",
       "                                                 Jet_eta  \\\n",
       "4      [-1.1243012, -0.4320171, -0.043061968, -0.2852...   \n",
       "6        [-1.1288804, 0.393985, -0.45237416, 0.60781515]   \n",
       "11     [-0.5388745, -0.66981435, -0.9946761, -0.6316535]   \n",
       "12     [0.7782154, -0.54424727, 0.9863331, 0.9539916,...   \n",
       "13        [1.7098631, 1.0966805, 0.5264485, -0.27656344]   \n",
       "18      [0.11840658, 1.5752503, -0.13696203, -0.4573683]   \n",
       "21     [0.51619273, 1.5879856, -0.27589673, 1.0319827...   \n",
       "32        [-1.4113882, 1.8965187, 1.4375268, 0.84537363]   \n",
       "33     [-1.3067226, -0.25297913, 0.15064602, -0.45450...   \n",
       "34     [0.073447056, -0.95106375, 0.68551815, -0.5144...   \n",
       "35     [0.055120528, -1.6999698, -0.42345685, -0.9914...   \n",
       "39     [-1.7479497, -1.0229245, -1.2322708, -0.85378236]   \n",
       "40        [-1.7688208, 0.1884651, -0.594849, -1.3542668]   \n",
       "42     [-0.97367716, -0.26039457, -0.4301861, -0.8002...   \n",
       "43     [-1.760975, -1.8957072, -2.101268, -2.214633, ...   \n",
       "44     [0.6675133, 0.059890274, 0.33979622, -1.430395...   \n",
       "47       [0.59300303, -0.63877726, 0.2479389, 2.0658352]   \n",
       "48     [0.25326973, -1.6972061, 0.037027217, -1.5277433]   \n",
       "49     [0.89526576, -1.1896396, -0.72816104, 1.081308...   \n",
       "50     [-0.47604448, -1.6241096, -1.0534177, -1.7774502]   \n",
       "51        [0.9521512, 0.20020789, -0.4340981, 1.9836515]   \n",
       "54       [-0.2850598, -0.8303998, -1.6495479, 1.6255821]   \n",
       "55      [0.77822137, -0.29628792, 1.5044168, 0.24499913]   \n",
       "56     [-0.42204413, 1.6640506, -1.2710392, 1.6343305...   \n",
       "59         [1.0523885, 1.5922277, 2.2159615, 0.16460177]   \n",
       "61       [0.5490291, 0.7040972, -1.3960611, -0.41119963]   \n",
       "62     [-0.30749616, 0.64810246, -0.83758664, 1.7743045]   \n",
       "63        [0.43456075, 0.2428973, 2.3793468, 0.43566716]   \n",
       "64     [-0.93893003, -1.8143864, -0.4194529, -0.87710...   \n",
       "71       [0.740181, -1.2378808, -0.5947176, 0.063498594]   \n",
       "...                                                  ...   \n",
       "10188     [2.0328848, 0.82922864, 0.9684427, -1.2100815]   \n",
       "10189   [-0.93956226, 0.64796674, -0.2158722, 1.3341419]   \n",
       "10193  [-0.11114105, -0.80892587, -0.19461717, -0.606...   \n",
       "10194    [-1.0879318, -0.3844613, 2.2571225, -2.0832431]   \n",
       "10196    [-1.2189531, 0.33085293, 0.17217745, 0.6198898]   \n",
       "10199  [-1.2494023, 0.78279984, -2.2138066, -0.93437415]   \n",
       "10200  [-0.24042618, -0.66293395, -1.5191622, 1.3573396]   \n",
       "10201     [2.3985124, 1.6803786, -2.0662625, 0.11152639]   \n",
       "10204  [-0.24104516, -0.8598658, -1.9951969, -0.04411...   \n",
       "10206  [0.35636038, -1.5855464, -0.41412738, -0.67855...   \n",
       "10208     [-1.3323948, 0.47436458, 1.930813, -0.5545026]   \n",
       "10209   [-1.8079792, -0.07352958, 0.6331482, 0.05923808]   \n",
       "10210  [-0.4804343, 0.028904276, 2.2355785, -0.92444503]   \n",
       "10211     [1.8198771, 0.71523136, -1.2513286, 0.8229445]   \n",
       "10213  [0.65283525, 0.049256787, 0.0040637814, -0.372...   \n",
       "10217    [0.9073982, 1.3805118, -0.1400425, 0.047650993]   \n",
       "10219    [-0.4763018, 1.8850393, 1.5249739, -0.14546004]   \n",
       "10222  [-1.5820384, 1.0011468, -0.97569513, -0.646042...   \n",
       "10225      [-0.82292044, 2.33912, 0.18689981, 1.5737151]   \n",
       "10227    [0.6297802, -1.8776029, -0.9005764, -0.8831235]   \n",
       "10228    [0.7114746, -0.16648723, -0.2496003, 1.3351158]   \n",
       "10229    [0.47384867, 0.61495537, 0.25315657, -0.526164]   \n",
       "10230  [-0.0071702073, -1.0496602, -1.4666793, -0.706...   \n",
       "10231    [1.4452611, -1.6770723, -0.5063475, -0.8080934]   \n",
       "10232   [-1.1887056, -0.3582868, -1.6877419, -0.4509441]   \n",
       "10233   [-0.062126465, -0.7183224, 1.3170244, 2.0825663]   \n",
       "10234   [0.020123182, 1.6344194, -0.04304058, 1.3869028]   \n",
       "10237  [-0.80620843, -0.5644987, -0.25280336, 2.34010...   \n",
       "10240  [0.2855092, -0.10736201, -0.5438168, -1.788026...   \n",
       "10243       [0.64408463, 1.1423473, 2.2688642, -0.97862]   \n",
       "\n",
       "                                                 Jet_phi  \\\n",
       "4          [0.3066539, 2.723845, -2.7551413, 0.51831686]   \n",
       "6          [0.98436445, -1.791157, 1.5280832, 2.3050992]   \n",
       "11      [-2.1920006, -0.37402272, -1.3006802, 0.9690302]   \n",
       "12     [2.856589, 2.5772336, -1.0070841, -0.43430325,...   \n",
       "13       [-0.038439635, 2.6794689, 3.1098251, -2.939956]   \n",
       "18       [2.1785398, -0.8822678, -2.3025699, -0.5093416]   \n",
       "21     [-0.96777624, 3.1081681, 1.9722465, 2.696386, ...   \n",
       "32         [-2.097642, 1.107066, 2.1329663, -0.36121714]   \n",
       "33       [2.6362548, 0.30914608, -1.1385839, -2.9624827]   \n",
       "34       [2.6310124, -0.29505584, -2.724446, -1.6778754]   \n",
       "35         [-0.7261444, 2.7270477, 2.6395798, 2.7503421]   \n",
       "39      [-1.0873783, -1.7002017, 2.3556716, -0.13348779]   \n",
       "40          [-1.6147858, 1.0617769, 2.442487, 2.2431743]   \n",
       "42        [0.6622516, -2.774802, 1.0122428, -0.32164207]   \n",
       "43     [-0.7344323, 2.877027, -1.3039933, 0.89613646,...   \n",
       "44     [-1.1427194, -2.5305314, 0.23117499, -2.959692...   \n",
       "47          [-1.6644238, 1.1207298, 1.755573, 2.5294862]   \n",
       "48       [-2.3594084, -1.4041132, -1.6084682, 2.0616806]   \n",
       "49     [0.718832, -1.3526776, -0.85082275, 1.4430174,...   \n",
       "50      [-0.020899763, -3.1326602, 2.7429357, -2.607467]   \n",
       "51       [-1.1136123, 1.6596489, -1.9135554, 0.47513667]   \n",
       "54         [1.9895804, -1.760866, -2.725367, -0.5260933]   \n",
       "55         [-0.5213788, 2.5296042, 2.9616354, 2.4355783]   \n",
       "56     [0.08332704, 1.7450205, -2.787044, -2.9731925,...   \n",
       "59          [1.1664222, 1.045409, -1.8792776, -1.505537]   \n",
       "61       [0.1195873, 1.8398896, -0.46686605, -2.0468051]   \n",
       "62      [-2.5506558, 0.95426804, -2.4722552, 0.32943913]   \n",
       "63          [-2.328127, 1.0789895, -2.661241, 0.2811403]   \n",
       "64       [0.8805096, -1.8209248, -0.86171216, 2.3451464]   \n",
       "71      [-0.71007615, 2.5074282, -0.6432267, -1.2804639]   \n",
       "...                                                  ...   \n",
       "10188         [-1.088497, 0.650802, 2.5684388, 2.630639]   \n",
       "10189    [-0.15327092, 2.4532537, -2.2492523, -1.495237]   \n",
       "10193    [-0.088547505, 2.2898047, 1.2454842, -2.315548]   \n",
       "10194     [2.2421732, -2.3191578, -1.0807731, 1.5741206]   \n",
       "10196   [1.8123978, -1.5432054, -0.61537755, -2.3183453]   \n",
       "10199     [0.21652249, -2.1428294, 3.1099143, -1.673697]   \n",
       "10200   [2.565211, -0.64005196, -0.83221114, -1.3646988]   \n",
       "10201      [2.8828952, 2.660853, -0.2934054, -1.0027173]   \n",
       "10204     [1.0174195, 1.2181544, -1.7060417, -0.7049182]   \n",
       "10206  [-2.6765535, 0.52991325, 0.4230963, -0.7192392...   \n",
       "10208      [-1.719112, 1.2236441, 1.6270322, -2.1510785]   \n",
       "10209    [1.5464585, -1.3201929, -2.6376863, 0.49108985]   \n",
       "10210       [1.31323, -2.7123318, 1.6377236, -2.1337574]   \n",
       "10211     [-0.7129349, -2.6471987, 1.8877782, 1.4717634]   \n",
       "10213     [1.2623284, 2.9640253, -1.1862377, -2.7128203]   \n",
       "10217     [0.48929468, -2.8937018, -1.324381, 0.9867716]   \n",
       "10219    [1.7438829, -1.3931926, -0.47327974, -2.651339]   \n",
       "10222  [-1.3185664, 0.71063083, 2.7365212, -0.8955647...   \n",
       "10225      [-2.741784, 1.0435495, 0.645074, -0.26531717]   \n",
       "10227  [-2.4847388, -0.27279466, 0.072341494, -2.0444...   \n",
       "10228    [2.307315, -0.41256443, -2.4173338, -1.3555835]   \n",
       "10229    [2.6709445, -0.11579552, 1.7382371, -1.2917916]   \n",
       "10230     [-2.8495474, 1.7097286, -1.1364042, 2.1741996]   \n",
       "10231  [-2.3050508, -2.2655761, 1.6902624, -0.060828727]   \n",
       "10232   [-2.9004283, -0.9409664, 0.60618955, 0.51223475]   \n",
       "10233     [-3.1025097, 0.7268008, -2.3839834, -2.963473]   \n",
       "10234      [1.3979267, 2.236787, -0.90767145, 0.7124645]   \n",
       "10237  [2.7129016, 2.0507817, -0.9465996, -1.3524582,...   \n",
       "10240  [2.5094566, -0.2641744, 2.937455, -1.0317477, ...   \n",
       "10243     [-2.4536357, 3.0599775, 1.5708233, -1.5684812]   \n",
       "\n",
       "                                                Jet_mass  \\\n",
       "4            [17.006762, 20.252317, 18.169027, 8.923069]   \n",
       "6             [11.043718, 16.723007, 13.04847, 7.056795]   \n",
       "11            [19.045708, 12.691906, 10.208972, 9.03825]   \n",
       "12     [28.53282, 22.04896, 12.793267, 15.736255, 7.4...   \n",
       "13            [10.191406, 9.131146, 7.4025974, 7.052645]   \n",
       "18              [9.581379, 7.2251577, 10.84802, 8.89646]   \n",
       "21     [23.309912, 19.134348, 28.181583, 9.86505, 11....   \n",
       "32           [12.255108, 15.56337, 5.1955137, 10.093855]   \n",
       "33           [12.516205, 8.293774, 15.740308, 8.3627205]   \n",
       "34           [16.529661, 11.209465, 9.399953, 11.124149]   \n",
       "35           [13.875892, 16.392418, 9.2390375, 8.107058]   \n",
       "39           [11.799421, 11.603613, 10.632088, 9.147164]   \n",
       "40           [12.408811, 10.44174, 6.8924184, 6.7967234]   \n",
       "42            [22.838684, 10.996848, 6.291963, 7.050972]   \n",
       "43     [15.751413, 12.024527, 6.062262, 7.193535, 5.8...   \n",
       "44     [16.383091, 8.80947, 8.001733, 9.526063, 9.114...   \n",
       "47          [14.583574, 12.632663, 11.114531, 7.2067804]   \n",
       "48          [26.733065, 10.488318, 11.619625, 11.782454]   \n",
       "49     [26.15433, 12.037371, 15.292923, 7.9323306, 5....   \n",
       "50            [34.74181, 20.04979, 11.805322, 5.3572493]   \n",
       "51            [11.938285, 9.95795, 11.011741, 6.8569326]   \n",
       "54           [15.554552, 10.563414, 10.653646, 6.057096]   \n",
       "55          [17.491875, 14.658085, 8.1855345, 7.2760277]   \n",
       "56     [14.751517, 21.578865, 10.897463, 18.615433, 6...   \n",
       "59           [14.054102, 8.878503, 13.965518, 11.239221]   \n",
       "61            [13.894363, 14.39211, 12.264083, 8.025287]   \n",
       "62             [27.643478, 9.4171, 4.5715566, 5.7866387]   \n",
       "63             [27.0481, 15.985061, 12.035677, 6.684236]   \n",
       "64           [19.969511, 25.642027, 11.833498, 8.853241]   \n",
       "71           [34.559254, 15.210916, 9.180614, 10.529704]   \n",
       "...                                                  ...   \n",
       "10188        [9.409802, 23.122713, 6.8529015, 6.8373995]   \n",
       "10189         [22.896797, 13.753922, 25.13891, 8.610192]   \n",
       "10193       [10.672849, 10.584021, 15.191886, 3.4612246]   \n",
       "10194        [15.364486, 19.796007, 9.667496, 12.481632]   \n",
       "10196         [10.380024, 10.72214, 9.128428, 7.7337766]   \n",
       "10199         [15.8102, 10.988527, 11.867655, 5.1439757]   \n",
       "10200         [23.947657, 15.067415, 8.897489, 6.838503]   \n",
       "10201        [10.314178, 8.375694, 6.7398376, 3.8940623]   \n",
       "10204       [21.216219, 13.070792, 10.093541, 8.2567215]   \n",
       "10206  [14.23236, 18.779125, 10.694611, 11.071497, 8....   \n",
       "10208       [25.335186, 37.248188, 28.153183, 18.430153]   \n",
       "10209         [17.60356, 29.359825, 19.794426, 8.054976]   \n",
       "10210            [8.468031, 12.618682, 9.181692, 6.6194]   \n",
       "10211        [16.066313, 17.550049, 14.281386, 9.277936]   \n",
       "10213         [26.18175, 12.866315, 11.501307, 5.819031]   \n",
       "10217          [19.26365, 6.3800254, 9.211119, 7.555094]   \n",
       "10219         [31.206251, 10.925554, 12.7393, 7.7333016]   \n",
       "10222  [25.106627, 13.662026, 9.616706, 9.3733425, 6....   \n",
       "10225           [3.4091, 12.557963, 15.274417, 6.042013]   \n",
       "10227       [13.850341, 25.817423, 13.053301, 11.293903]   \n",
       "10228       [18.499205, 14.826956, 10.776747, 7.4656367]   \n",
       "10229       [20.477732, 15.112643, 10.048984, 13.274587]   \n",
       "10230        [8.866275, 15.379108, 20.588413, 4.8469706]   \n",
       "10231       [16.347063, 11.554517, 13.9301405, 8.042494]   \n",
       "10232        [26.873224, 11.759348, 12.887676, 6.006425]   \n",
       "10233           [9.2568035, 7.751727, 13.1759, 9.877501]   \n",
       "10234       [16.728289, 10.063054, 12.686182, 6.5654206]   \n",
       "10237  [11.583654, 5.5617332, 11.377384, 7.6650867, 8...   \n",
       "10240  [24.779648, 25.489761, 23.048391, 8.907194, 6....   \n",
       "10243           [8.26936, 17.658314, 7.291224, 7.945442]   \n",
       "\n",
       "                                             Jet_csvDisc       Tau_pt  ...  \\\n",
       "4      [0.027888818, 0.03272759, 0.11864211, 0.038453...  [56.046867]  ...   \n",
       "6      [0.09147409, 0.027699659, 0.2067171, 0.055629585]   [79.89664]  ...   \n",
       "11     [0.021052063, 0.043717083, 0.052314077, 0.1681...   [138.0236]  ...   \n",
       "12     [0.0122563895, 0.26893792, 0.063082196, 0.0471...  [48.086525]  ...   \n",
       "13      [0.01014569, 0.06308092, 0.08847816, 0.29444635]  [63.473324]  ...   \n",
       "18        [0.04751977, 0.1321929, 0.01214194, 0.1331131]   [52.36338]  ...   \n",
       "21     [0.05000708, 0.10928215, 0.07491122, 0.1135867...   [63.76649]  ...   \n",
       "32       [0.1562875, 0.66403234, 0.16987795, 0.04728444]   [62.90077]  ...   \n",
       "33     [0.08918979, 0.098830275, 0.029270329, 0.18727...  [48.039143]  ...   \n",
       "34     [0.0068891286, 0.011915908, 0.0099439705, 0.16...    [72.2287]  ...   \n",
       "35     [0.11134139, 0.11632703, 0.018040642, 0.13155061]   [51.92619]  ...   \n",
       "39     [0.11576932, 0.07264657, 0.04010181, 0.017060775]  [112.60954]  ...   \n",
       "40      [0.030653033, 0.43383268, 0.0395212, 0.25034556]   [51.07487]  ...   \n",
       "42     [0.014299693, 0.058481734, 0.20415834, 0.30114...  [58.597122]  ...   \n",
       "43     [0.045663286, 0.11581449, 0.19631296, 0.166146...  [64.261314]  ...   \n",
       "44     [0.005930134, 0.110476136, -1.0, 0.09409397, 0...  [63.445927]  ...   \n",
       "47      [0.20888242, 0.14884375, 0.041868404, 0.3332444]  [51.635838]  ...   \n",
       "48     [0.06530007, 0.051856153, 0.03261911, 0.094023...  [159.70195]  ...   \n",
       "49     [0.029422322, 0.13274354, 0.0116163865, 0.0622...  [102.00738]  ...   \n",
       "50     [0.17104848, 0.012849866, 0.024397552, 0.12474...   [66.67433]  ...   \n",
       "51      [0.11962157, 0.06353164, 0.02877949, 0.13461636]  [53.472145]  ...   \n",
       "54      [0.009055395, 0.13294965, 0.18424317, 0.2607511]  [46.074005]  ...   \n",
       "55     [0.008491053, 0.06438994, 0.15572509, 0.028588...   [47.36327]  ...   \n",
       "56     [0.011316247, 0.018058809, 0.43081176, 0.10659...  [52.607273]  ...   \n",
       "59      [0.24820313, 0.039861143, 0.3262778, 0.12553267]  [50.458755]  ...   \n",
       "61     [0.024874695, 0.021824531, 0.3338737, 0.054893...   [76.53927]  ...   \n",
       "62     [0.071829386, 0.08247212, 0.10828456, 0.10598008]  [48.206493]  ...   \n",
       "63     [0.047513872, 0.084718615, 0.11121261, 0.06053...  [64.110435]  ...   \n",
       "64     [0.015693516, 0.09834724, 0.01714549, 0.34293914]  [74.763405]  ...   \n",
       "71     [0.045217842, 0.17279951, 0.0143484995, 0.0805...  [164.77148]  ...   \n",
       "...                                                  ...          ...  ...   \n",
       "10188   [0.1262674, 0.033669557, 0.38778192, 0.22147034]   [50.74124]  ...   \n",
       "10189  [0.11040245, 0.059784457, 0.18120134, 0.14235458]   [66.84221]  ...   \n",
       "10193  [0.09897233, 0.027287968, 0.085827135, 0.07020...  [60.814545]  ...   \n",
       "10194        [0.018754685, 0.09328193, -1.0, 0.17866573]   [62.76324]  ...   \n",
       "10196  [0.15282416, 0.04873144, 0.018589742, 0.14108275]   [45.53352]  ...   \n",
       "10199   [0.007971323, 0.11508579, 0.3836848, 0.12691382]  [46.805508]  ...   \n",
       "10200   [0.18815751, 0.053648137, 0.08517821, 0.2258083]   [58.81981]  ...   \n",
       "10201        [-1.0, 0.046218947, 0.16114785, 0.19914827]   [45.11717]  ...   \n",
       "10204  [0.12039786, 0.046660878, 0.03749758, 0.025400...   [48.89929]  ...   \n",
       "10206  [0.025531506, 0.2757547, 0.13560715, 0.0306083...   [52.72158]  ...   \n",
       "10208  [0.21136275, 0.030580128, 0.07676113, 0.088020...   [57.69653]  ...   \n",
       "10209  [0.16177659, 0.012736825, 0.015309511, 0.10730...  [50.283535]  ...   \n",
       "10210   [0.13055377, 0.29374698, 0.21026112, 0.22667882]  [47.706593]  ...   \n",
       "10211  [0.07033735, 0.003994028, 0.028003355, 0.14432...   [68.61848]  ...   \n",
       "10213  [0.023714595, 0.072446235, 0.18279643, 0.04769...  [81.170265]  ...   \n",
       "10217   [0.14594533, 0.06228008, 0.21632934, 0.22753808]   [46.15755]  ...   \n",
       "10219  [0.016019225, 0.15171196, 0.35752797, 0.18074991]  [47.998734]  ...   \n",
       "10222  [0.04489475, 0.07144006, 0.17329833, 0.0449933...   [83.70094]  ...   \n",
       "10225         [-1.0, 0.041928846, 0.0989043, 0.22138867]   [66.76375]  ...   \n",
       "10227  [0.057347666, 0.03138498, 0.09431739, 0.05737557]  [215.04561]  ...   \n",
       "10228  [0.064316615, 0.054772954, 0.016131822, 0.3029...   [70.07778]  ...   \n",
       "10229   [0.05773793, 0.26383004, 0.09608684, 0.10716645]  [64.977776]  ...   \n",
       "10230    [0.1885711, 0.16453494, 0.06635992, 0.20652986]  [50.541122]  ...   \n",
       "10231         [0.0795223, 0.04750686, 0.088330634, -1.0]    [73.6135]  ...   \n",
       "10232   [0.24344265, 0.49841312, 0.3290421, 0.083682016]  [55.788624]  ...   \n",
       "10233    [0.09868152, 0.090908, 0.048026774, 0.19234957]   [45.23943]  ...   \n",
       "10234       [0.003705421, 0.01549544, 0.077154435, -1.0]   [76.16329]  ...   \n",
       "10237  [0.011154232, 0.119220935, 0.20653495, -1.0, 0...   [57.20607]  ...   \n",
       "10240  [0.040300533, 0.005769495, 0.047733407, 0.2493...   [63.30289]  ...   \n",
       "10243            [0.086028494, 0.0139668025, -1.0, -1.0]   [60.59581]  ...   \n",
       "\n",
       "              met deltaPhiTauMet          mt      mTauJet  \\\n",
       "4       40.836891       2.505111   90.878182   556.008976   \n",
       "6       62.331497       0.839982   57.549917   545.260229   \n",
       "11      26.476046       1.461593   80.706412   529.748134   \n",
       "12      36.771347       2.707376   82.125804   855.459773   \n",
       "13      26.240599       2.125188   71.312275   312.192141   \n",
       "18      26.871693       1.401023   48.363730   478.648622   \n",
       "21      26.312853       2.078124   70.612533   965.885780   \n",
       "32      31.508875       0.827210   35.786572   804.301845   \n",
       "33      40.664928       0.536617   23.435887   603.062012   \n",
       "34      38.407440       2.649798  102.172657   446.791872   \n",
       "35      27.149517       0.438364   16.337669   477.517783   \n",
       "39      20.105135       2.415411   88.973333   526.360005   \n",
       "40      23.418480       2.213313   61.860092   356.885326   \n",
       "42      34.795616       1.664699   66.784776   579.027314   \n",
       "43      24.614656       2.718277   77.773293   367.024776   \n",
       "44      25.802149       2.977373   80.648135   754.700283   \n",
       "47      33.251522       1.946857   68.520946   628.350322   \n",
       "48      25.769648       0.549588   34.821088   582.447940   \n",
       "49      35.792881       2.943595  120.257778   935.910894   \n",
       "50      31.475006       0.839581   37.343799   538.414988   \n",
       "51      23.341497       1.010917   34.216984   631.251201   \n",
       "54      23.129507       2.762318   64.120680   495.403106   \n",
       "55      60.758083       2.313169   98.215888   379.573778   \n",
       "56      43.943760       0.009135    0.832863   892.671137   \n",
       "59      53.315990       1.753675   79.743502   931.104206   \n",
       "61      32.977306       1.891985   81.498436   663.476611   \n",
       "62      22.270784       0.747712   23.959033   410.898013   \n",
       "63      31.432457       1.444838   59.377178   705.651965   \n",
       "64      83.033035       0.195059   15.446113   609.829303   \n",
       "71      27.386984       0.551617   36.588869   986.814840   \n",
       "...           ...            ...         ...          ...   \n",
       "10188   53.707146       0.365105   18.962460   516.693645   \n",
       "10189  138.668457       0.078850    7.784114  1497.499801   \n",
       "10193   24.244928       1.588357   54.778401   382.814864   \n",
       "10194   38.805801       1.831514   78.274592  1068.520771   \n",
       "10196   43.488991       2.686066   86.705423   363.747620   \n",
       "10199   39.335159       3.090565   85.788949   695.212563   \n",
       "10200   23.399124       2.316543   67.978790   439.852490   \n",
       "10201   27.865837       1.771497   54.930242   714.366136   \n",
       "10204   33.441792       1.777554   62.796946   400.811247   \n",
       "10206   41.769421       1.862147   75.298929   800.953003   \n",
       "10208   24.608847       0.585973   21.765782  1309.513619   \n",
       "10209   45.427456       3.027647   95.433805   789.573334   \n",
       "10210   31.586645       0.004901    0.319297   526.594945   \n",
       "10211   24.662531       2.491660   77.973104   969.150821   \n",
       "10213   39.221336       0.939790   51.113882   429.968685   \n",
       "10217   34.314968       0.305223   12.109727   421.125037   \n",
       "10219   59.267735       1.211613   60.748725   622.946681   \n",
       "10222   43.551033       0.453650   27.160266  1059.163078   \n",
       "10225   54.130268       2.819074  118.678420   804.446239   \n",
       "10227   55.397213       2.889861  216.565971  1093.697242   \n",
       "10228   23.645197       1.258421   47.922267   596.707315   \n",
       "10229   28.553741       2.616739   83.205538   441.030140   \n",
       "10230   48.514278       2.220427   88.718217   504.964413   \n",
       "10231   27.031485       1.664401   65.969433   591.085163   \n",
       "10232   34.386921       1.346102   54.611573   521.865526   \n",
       "10233   31.825706       0.552622   20.744514   443.397069   \n",
       "10234   26.032923       0.116896    5.259182   401.594627   \n",
       "10237   45.727962       1.861224   82.038637   691.043929   \n",
       "10240   24.084053       2.702403   76.225549   881.707567   \n",
       "10243   20.153397       3.013779   69.749899   486.643614   \n",
       "\n",
       "                          Jet_flavour  \\\n",
       "4                [0.0, 0.0, 0.0, 0.0]   \n",
       "6                [0.0, 0.0, 0.0, 0.0]   \n",
       "11               [0.0, 0.0, 0.0, 0.0]   \n",
       "12          [0.0, 0.0, 0.0, 0.0, 0.0]   \n",
       "13               [0.0, 0.0, 0.0, 0.0]   \n",
       "18               [0.0, 0.0, 0.0, 0.0]   \n",
       "21          [0.0, 0.0, 0.0, 0.0, 0.0]   \n",
       "32               [0.0, 0.0, 0.0, 0.0]   \n",
       "33               [0.0, 0.0, 0.0, 0.0]   \n",
       "34               [0.0, 0.0, 0.0, 0.0]   \n",
       "35               [0.0, 0.0, 0.0, 0.0]   \n",
       "39               [0.0, 0.0, 0.0, 0.0]   \n",
       "40               [0.0, 0.0, 0.0, 0.0]   \n",
       "42               [0.0, 0.0, 0.0, 0.0]   \n",
       "43          [0.0, 0.0, 0.0, 0.0, 0.0]   \n",
       "44          [0.0, 0.0, 0.0, 0.0, 0.0]   \n",
       "47               [0.0, 0.0, 0.0, 0.0]   \n",
       "48               [0.0, 0.0, 0.0, 0.0]   \n",
       "49          [0.0, 0.0, 0.0, 0.0, 0.0]   \n",
       "50               [0.0, 0.0, 0.0, 0.0]   \n",
       "51               [0.0, 0.0, 0.0, 0.0]   \n",
       "54               [0.0, 0.0, 0.0, 0.0]   \n",
       "55               [0.0, 0.0, 0.0, 0.0]   \n",
       "56          [0.0, 0.0, 0.0, 0.0, 0.0]   \n",
       "59               [0.0, 0.0, 0.0, 0.0]   \n",
       "61               [0.0, 0.0, 0.0, 0.0]   \n",
       "62               [0.0, 0.0, 0.0, 0.0]   \n",
       "63               [0.0, 0.0, 0.0, 0.0]   \n",
       "64               [0.0, 0.0, 0.0, 0.0]   \n",
       "71               [0.0, 0.0, 0.0, 0.0]   \n",
       "...                               ...   \n",
       "10188            [0.0, 0.0, 0.0, 0.0]   \n",
       "10189            [0.0, 0.0, 0.0, 0.0]   \n",
       "10193            [0.0, 0.0, 0.0, 0.0]   \n",
       "10194            [0.0, 0.0, 0.0, 0.0]   \n",
       "10196            [0.0, 0.0, 0.0, 0.0]   \n",
       "10199            [0.0, 0.0, 0.0, 0.0]   \n",
       "10200            [0.0, 0.0, 0.0, 0.0]   \n",
       "10201            [0.0, 0.0, 0.0, 0.0]   \n",
       "10204            [0.0, 0.0, 0.0, 0.0]   \n",
       "10206       [0.0, 0.0, 0.0, 0.0, 0.0]   \n",
       "10208            [0.0, 0.0, 0.0, 0.0]   \n",
       "10209            [0.0, 0.0, 0.0, 0.0]   \n",
       "10210            [0.0, 0.0, 0.0, 0.0]   \n",
       "10211            [0.0, 0.0, 0.0, 0.0]   \n",
       "10213            [0.0, 0.0, 0.0, 0.0]   \n",
       "10217            [0.0, 0.0, 0.0, 0.0]   \n",
       "10219            [0.0, 0.0, 0.0, 0.0]   \n",
       "10222       [0.0, 0.0, 0.0, 0.0, 0.0]   \n",
       "10225            [0.0, 0.0, 0.0, 0.0]   \n",
       "10227            [0.0, 0.0, 0.0, 0.0]   \n",
       "10228            [0.0, 0.0, 0.0, 0.0]   \n",
       "10229            [0.0, 0.0, 0.0, 0.0]   \n",
       "10230            [0.0, 0.0, 0.0, 0.0]   \n",
       "10231            [0.0, 0.0, 0.0, 0.0]   \n",
       "10232            [0.0, 0.0, 0.0, 0.0]   \n",
       "10233            [0.0, 0.0, 0.0, 0.0]   \n",
       "10234            [0.0, 0.0, 0.0, 0.0]   \n",
       "10237       [0.0, 0.0, 0.0, 0.0, 0.0]   \n",
       "10240  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]   \n",
       "10243            [0.0, 0.0, 0.0, 0.0]   \n",
       "\n",
       "                                              Jet_btagSF  \\\n",
       "4          [1.0168595, 1.0231007, 1.0230346, 0.98063695]   \n",
       "6           [0.9858833, 1.0116996, 0.9870567, 0.9680401]   \n",
       "11          [1.061042, 0.99328905, 0.9631169, 0.9802834]   \n",
       "12     [1.0505327, 1.0394765, 0.9950504, 0.98415107, ...   \n",
       "13      [0.90973675, 0.96347195, 0.97855663, 0.95953095]   \n",
       "18       [1.0379466, 0.97914666, 0.99186665, 0.98248756]   \n",
       "21     [1.051814, 1.0015051, 1.0289179, 0.9727473, 0....   \n",
       "32        [0.99591357, 0.92240024, 0.9704262, 0.9635362]   \n",
       "33          [0.9913492, 1.0152036, 1.0078055, 0.9745616]   \n",
       "34        [1.0216342, 0.97750413, 0.9811255, 0.97753227]   \n",
       "35          [1.0532824, 0.9191082, 0.9909418, 0.9571842]   \n",
       "39      [0.92459476, 0.99487543, 0.99430364, 0.95975673]   \n",
       "40        [0.9188239, 0.98987967, 0.97973394, 0.9465277]   \n",
       "42         [0.9933073, 1.0212228, 0.9803225, 0.94909465]   \n",
       "43     [0.92400175, 0.9051634, 0.9009754, 0.89521116,...   \n",
       "44     [1.0261128, 1.0215405, 1.0110452, 0.9783641, 0...   \n",
       "47         [1.0653135, 1.0204191, 0.99795115, 0.8992963]   \n",
       "48         [1.0346435, 0.91806483, 0.9804146, 0.9567981]   \n",
       "49     [1.0187671, 0.99613607, 1.0019124, 0.9607918, ...   \n",
       "50         [1.0415914, 0.9223015, 0.9842589, 0.88808215]   \n",
       "51          [1.0007885, 1.0139772, 1.0040966, 0.9029921]   \n",
       "54         [1.0024987, 0.9705569, 0.9065708, 0.89699244]   \n",
       "55          [1.0242475, 0.99924403, 0.9585766, 0.975295]   \n",
       "56     [1.034536, 0.9228985, 0.98502153, 0.91451484, ...   \n",
       "59          [0.997898, 0.9817103, 0.91344863, 1.0014938]   \n",
       "61          [1.0498794, 1.012892, 0.97117424, 0.9722996]   \n",
       "62         [1.0316994, 0.98498416, 0.9565135, 0.8970858]   \n",
       "63          [1.0838549, 1.0741942, 0.9106268, 0.9731345]   \n",
       "64         [1.0389224, 0.93200475, 1.0064043, 0.9499358]   \n",
       "71         [1.0848274, 0.9870061, 0.9910727, 0.97263366]   \n",
       "...                                                  ...   \n",
       "10188    [0.92839354, 0.98549527, 0.95605606, 0.9398271]   \n",
       "10189      [1.0011055, 1.0984086, 1.0819651, 0.94730437]   \n",
       "10193         [1.0138134, 0.97434133, 0.9922871, 0.9539]   \n",
       "10194     [0.99551797, 1.0164111, 0.91674715, 0.9103852]   \n",
       "10196       [0.9750899, 0.9844956, 0.9797782, 0.9700451]   \n",
       "10199     [0.98008746, 0.9896634, 0.9039993, 0.94024086]   \n",
       "10200       [1.0252637, 0.9947295, 0.9665864, 0.9456373]   \n",
       "10201     [0.90746343, 0.9021559, 0.9015665, 0.96281385]   \n",
       "10204      [1.0100816, 0.97870916, 0.9103279, 0.9762462]   \n",
       "10206  [1.0513808, 1.007332, 1.0082055, 1.0017802, 0....   \n",
       "10208        [1.0366577, 1.069079, 0.9378395, 1.0199809]   \n",
       "10209        [0.9273676, 1.0225074, 1.0185759, 1.004961]   \n",
       "10210      [1.0011458, 0.9966345, 0.90162957, 0.9422055]   \n",
       "10211       [0.9408946, 1.035627, 0.98831993, 0.9699639]   \n",
       "10213    [1.0658118, 0.99876314, 0.97993207, 0.97051746]   \n",
       "10217      [0.9762567, 0.9745825, 0.97819126, 0.9695386]   \n",
       "10219     [1.0787253, 0.9113226, 0.96403944, 0.97422427]   \n",
       "10222  [1.0299058, 0.98606575, 0.9661692, 0.9886886, ...   \n",
       "10225       [1.0081463, 0.9266253, 1.0140518, 0.9497346]   \n",
       "10227       [1.066564, 0.9236557, 0.97532415, 0.9584472]   \n",
       "10228       [1.0690649, 1.0444857, 1.0084944, 0.9580295]   \n",
       "10229        [1.0494101, 1.0276597, 0.991364, 0.9888043]   \n",
       "10230      [1.0339293, 0.9991268, 0.9976014, 0.96527004]   \n",
       "10231      [0.97438526, 0.9078936, 0.9816977, 0.9510037]   \n",
       "10232        [1.0402, 0.99418557, 0.90383995, 0.9782357]   \n",
       "10233       [1.0015852, 0.9969893, 0.9654166, 0.8990858]   \n",
       "10234       [1.0277927, 0.9072672, 0.9836535, 0.9400066]   \n",
       "10237  [0.9820324, 0.9811671, 0.97732246, 0.89990216,...   \n",
       "10240  [1.0933524, 1.0776762, 1.023743, 0.91076076, 0...   \n",
       "10243     [1.0047618, 0.97547656, 0.9027976, 0.95232487]   \n",
       "\n",
       "                                           Jet_btagSF_up  \\\n",
       "4             [1.142705, 1.1546776, 1.1545889, 1.097489]   \n",
       "6            [1.1035551, 1.1393735, 1.1061639, 1.080444]   \n",
       "11           [1.2051424, 1.1145773, 1.0743665, 1.097011]   \n",
       "12     [1.1912624, 1.176567, 1.1152315, 1.1013429, 1....   \n",
       "13           [1.006585, 1.0748233, 1.0946761, 1.0689148]   \n",
       "18          [1.1745274, 1.0949427, 1.1126579, 1.0999906]   \n",
       "21     [1.1929598, 1.1234161, 1.1624675, 1.0867411, 1...   \n",
       "32           [1.1163281, 1.0224372, 1.0837618, 1.074906]   \n",
       "33           [1.1105239, 1.144082, 1.1341367, 1.0892719]   \n",
       "34          [1.1527119, 1.0928394, 1.0981494, 1.0932908]   \n",
       "35          [1.1949036, 1.0183693, 1.1114097, 1.0667269]   \n",
       "39           [1.0251215, 1.1150093, 1.1142826, 1.070041]   \n",
       "40            [1.018016, 1.1099758, 1.096268, 1.0529779]   \n",
       "42          [1.1130157, 1.1521602, 1.0970639, 1.0562927]   \n",
       "43     [1.0243986, 1.0007516, 0.9953729, 0.9879213, 1...   \n",
       "44     [1.158713, 1.1525862, 1.1384939, 1.0939407, 0....   \n",
       "47          [1.2107508, 1.1510823, 1.1208649, 0.9932077]   \n",
       "48           [1.1701201, 1.017071, 1.0971885, 1.0662293]   \n",
       "49     [1.1450762, 1.1166106, 1.1262031, 1.0713738, 1...   \n",
       "50          [1.1793839, 1.0223159, 1.1014806, 0.9786398]   \n",
       "51         [1.1225091, 1.1424345, 1.1291447, 0.99796706]   \n",
       "54          [1.1269927, 1.0839297, 1.0025516, 0.9902295]   \n",
       "55          [1.1562145, 1.1226076, 1.0685209, 1.0902642]   \n",
       "56     [1.1699765, 1.0230488, 1.1024548, 1.0126259, 1...   \n",
       "59          [1.1188465, 1.0982231, 1.0112833, 1.1256391]   \n",
       "61          [1.1903963, 1.1409762, 1.0847222, 1.0862107]   \n",
       "62          [1.1661869, 1.1033642, 1.0658627, 0.9903503]   \n",
       "63          [1.2347074, 1.2223248, 1.0077147, 1.0873408]   \n",
       "64           [1.169234, 1.0339532, 1.1322511, 1.0573785]   \n",
       "71           [1.2359347, 1.1049882, 1.1115863, 1.086663]   \n",
       "...                                                  ...   \n",
       "10188       [1.0297021, 1.1030598, 1.0652729, 1.0443174]   \n",
       "10189       [1.1073235, 1.2509837, 1.2323097, 1.0539811]   \n",
       "10193        [1.1422143, 1.0887856, 1.1132252, 1.061279]   \n",
       "10194       [1.1158255, 1.1457033, 1.0154259, 1.0074083]   \n",
       "10196       [1.0897455, 1.1027042, 1.0963279, 1.0831589]   \n",
       "10199        [1.096147, 1.1096839, 0.9992599, 1.0448526]   \n",
       "10200       [1.1575757, 1.1165205, 1.0788287, 1.0518277]   \n",
       "10201        [1.0036911, 0.9968922, 0.996134, 1.0733641]   \n",
       "10204       [1.1371983, 1.0943826, 1.0073357, 1.0915511]   \n",
       "10206  [1.1923862, 1.1307709, 1.1346749, 1.1260248, 1...   \n",
       "10208       [1.1666908, 1.2156744, 1.0404452, 1.1504945]   \n",
       "10209       [1.0284745, 1.1538825, 1.1486094, 1.1303085]   \n",
       "10210       [1.1251704, 1.1190896, 0.9962151, 1.0473927]   \n",
       "10211        [1.0433992, 1.171433, 1.1066641, 1.0831681]   \n",
       "10213       [1.2114035, 1.1219594, 1.0965359, 1.0837984]   \n",
       "10217         [1.0912411, 1.089095, 1.094182, 1.0824732]   \n",
       "10219       [1.2281682, 1.0085965, 1.0755533, 1.0888155]   \n",
       "10222  [1.1587267, 1.103788, 1.0782923, 1.1083677, 1....   \n",
       "10225       [1.1317959, 1.0275815, 1.1425346, 1.0571189]   \n",
       "10227       [1.2123883, 1.0239758, 1.0900458, 1.0683542]   \n",
       "10228        [1.215656, 1.1832348, 1.1350635, 1.0678161]   \n",
       "10229        [1.1897742, 1.1607838, 1.1119795, 1.108524]   \n",
       "10230        [1.1691663, 1.1204045, 1.1184704, 1.076692]   \n",
       "10231         [1.088842, 1.0042396, 1.098923, 1.0587567]   \n",
       "10232       [1.1706073, 1.1157867, 0.9990554, 1.0942421]   \n",
       "10233      [1.1257623, 1.1195681, 1.0773246, 0.99293596]   \n",
       "10234       [1.1609617, 1.0034406, 1.1015663, 1.0445496]   \n",
       "10237  [1.098635, 1.0982057, 1.093007, 0.9939895, 1.0...   \n",
       "10240  [1.2463814, 1.22682, 1.1555386, 1.0078846, 1.0...   \n",
       "10243       [1.1300403, 1.0902412, 0.9977171, 1.0604614]   \n",
       "\n",
       "                                         Jet_btagSF_down  \\\n",
       "4           [0.8910142, 0.8915237, 0.8914801, 0.8637849]   \n",
       "6          [0.86821145, 0.8840256, 0.8679494, 0.8556362]   \n",
       "11          [0.9169416, 0.8720009, 0.8518673, 0.8635557]   \n",
       "12     [0.90980303, 0.9023862, 0.87486917, 0.8669592,...   \n",
       "13          [0.8128885, 0.8521206, 0.8624371, 0.8501471]   \n",
       "18         [0.9013657, 0.8633506, 0.87107545, 0.8649845]   \n",
       "21     [0.91066813, 0.8795941, 0.8953684, 0.8587536, ...   \n",
       "32         [0.87549907, 0.8223632, 0.8570906, 0.8521665]   \n",
       "33        [0.87217444, 0.8863253, 0.8814743, 0.85985124]   \n",
       "34          [0.8905567, 0.8621689, 0.8641015, 0.8617738]   \n",
       "35         [0.9116612, 0.81984705, 0.870474, 0.84764147]   \n",
       "39        [0.8240681, 0.87474155, 0.8743247, 0.84947246]   \n",
       "40        [0.8196318, 0.86978346, 0.8631998, 0.84007746]   \n",
       "42         [0.8735989, 0.89028555, 0.8635811, 0.8418966]   \n",
       "43     [0.823605, 0.8095752, 0.80657786, 0.8025011, 0...   \n",
       "44     [0.8935127, 0.89049494, 0.88359654, 0.8627874,...   \n",
       "47         [0.91987616, 0.889756, 0.87503743, 0.8053849]   \n",
       "48        [0.89916706, 0.8190586, 0.86364084, 0.8473668]   \n",
       "49     [0.89245814, 0.87566155, 0.8776218, 0.85020983...   \n",
       "50           [0.9037988, 0.822287, 0.8670371, 0.7975245]   \n",
       "51            [0.8790677, 0.88552, 0.8790486, 0.8080172]   \n",
       "54           [0.87800467, 0.8571842, 0.81059, 0.8037554]   \n",
       "55         [0.89228064, 0.8758805, 0.8486323, 0.8603257]   \n",
       "56     [0.89909554, 0.8227482, 0.8675883, 0.81640375,...   \n",
       "59          [0.87694937, 0.8651976, 0.815614, 0.8773485]   \n",
       "61        [0.90936244, 0.8848077, 0.8576263, 0.85838836]   \n",
       "62      [0.89721185, 0.86660403, 0.84716445, 0.80382127]   \n",
       "63       [0.93300253, 0.92606366, 0.81353885, 0.8589282]   \n",
       "64         [0.9086108, 0.83005625, 0.8805574, 0.8424931]   \n",
       "71        [0.93372005, 0.86902404, 0.8705591, 0.8586044]   \n",
       "...                                                  ...   \n",
       "10188     [0.82708496, 0.8679308, 0.84683913, 0.8353367]   \n",
       "10189     [0.89488757, 0.9458333, 0.93162036, 0.8406277]   \n",
       "10193      [0.8854124, 0.85989696, 0.871349, 0.84652096]   \n",
       "10194      [0.8752103, 0.8871187, 0.8180684, 0.81336206]   \n",
       "10196       [0.8604343, 0.866287, 0.8632284, 0.85693127]   \n",
       "10199     [0.86402804, 0.8696429, 0.8087388, 0.83562917]   \n",
       "10200     [0.89295167, 0.8729386, 0.8543442, 0.83944684]   \n",
       "10201     [0.81123585, 0.8074195, 0.80699897, 0.8522635]   \n",
       "10204        [0.882965, 0.8630357, 0.8133202, 0.8609413]   \n",
       "10206  [0.91037554, 0.88389283, 0.8817362, 0.8775354,...   \n",
       "10208      [0.9066247, 0.92248356, 0.8352338, 0.8894674]   \n",
       "10209      [0.82626086, 0.8911324, 0.8885425, 0.8796136]   \n",
       "10210      [0.8771214, 0.8741793, 0.80704397, 0.8370182]   \n",
       "10211      [0.83838993, 0.8998211, 0.8699758, 0.8567596]   \n",
       "10213         [0.92022, 0.8755669, 0.8633281, 0.8572365]   \n",
       "10217     [0.8612723, 0.86007005, 0.8622005, 0.85660404]   \n",
       "10219       [0.92928237, 0.8140486, 0.8525255, 0.859633]   \n",
       "10222  [0.9010849, 0.8683435, 0.8540461, 0.86900944, ...   \n",
       "10225       [0.8844966, 0.8256691, 0.8855689, 0.8423504]   \n",
       "10227     [0.92073977, 0.8233356, 0.86060244, 0.8485402]   \n",
       "10228     [0.9224738, 0.90573657, 0.88192534, 0.8482429]   \n",
       "10229      [0.9090462, 0.8945356, 0.8707485, 0.86908466]   \n",
       "10230       [0.8986923, 0.87784904, 0.8767324, 0.853848]   \n",
       "10231      [0.8599285, 0.8115477, 0.8644724, 0.84325063]   \n",
       "10232       [0.9097926, 0.8725844, 0.8086245, 0.8622293]   \n",
       "10233      [0.8774082, 0.87441057, 0.8535086, 0.8052357]   \n",
       "10234    [0.89462364, 0.81109375, 0.86574066, 0.8354636]   \n",
       "10237  [0.8654299, 0.8641285, 0.86163795, 0.8058148, ...   \n",
       "10240  [0.94032353, 0.92853236, 0.8919476, 0.81363684...   \n",
       "10243     [0.87948334, 0.86071193, 0.807878, 0.84418833]   \n",
       "\n",
       "                                                Jet_beff  btag_weight  \n",
       "4      [0.013968413767067263, 0.013173367102763775, 0...     0.052344  \n",
       "6      [0.01369657710465184, 0.013087348035605855, 0....     0.052247  \n",
       "11     [0.014515169541939321, 0.013410103866781771, 0...     0.054499  \n",
       "12     [0.013918866567048537, 0.013982983517991534, 0...     0.066380  \n",
       "13     [0.0190282832427996, 0.01307328941340032, 0.01...     0.059401  \n",
       "18     [0.012777450268024841, 0.01617094676637805, 0....     0.052456  \n",
       "21     [0.01379186357098829, 0.016440199112067806, 0....     0.066504  \n",
       "32     [0.012465983122130899, 0.020749211588906247, 0...     0.056219  \n",
       "33     [0.011869550186302001, 0.012957363724278073, 0...     0.050219  \n",
       "34     [0.012711762777720037, 0.014003238533993203, 0...     0.053937  \n",
       "35     [0.012871937815849707, 0.014255316371421484, 0...     0.051872  \n",
       "39     [0.015427882683808758, 0.013742456191376427, 0...     0.053366  \n",
       "40     [0.014861419152371038, 0.012343787244185651, 0...     0.052533  \n",
       "42     [0.014055711730130335, 0.0127949524793223, 0.0...     0.053272  \n",
       "43     [0.014372481808888088, 0.015961966559223602, 0...     0.077762  \n",
       "44     [0.013153083896612823, 0.012711762777720037, 0...     0.066268  \n",
       "47     [0.014398115934271798, 0.013843880434500817, 0...     0.061580  \n",
       "48     [0.013614682038886869, 0.014255316371421484, 0...     0.052153  \n",
       "49     [0.013090088395711868, 0.013340908842586017, 0...     0.070206  \n",
       "50     [0.013999269847510461, 0.01345881050409992, 0....     0.057808  \n",
       "51     [0.014405640884856016, 0.013015485025262388, 0...     0.057888  \n",
       "54     [0.012550288406665189, 0.013881971851027233, 0...     0.052951  \n",
       "55     [0.01424706055984651, 0.012393316111310945, 0....     0.054523  \n",
       "56     [0.013615994484660462, 0.017689344108250328, 0...     0.071980  \n",
       "59     [0.014309790580818327, 0.01617094676637805, 0....     0.055624  \n",
       "61     [0.01379186357098829, 0.013617582879038971, 0....     0.052679  \n",
       "62     [0.013582861779365431, 0.013359931128414668, 0...     0.056572  \n",
       "63     [0.013580696010670548, 0.013529838125151003, 0...     0.050791  \n",
       "64     [0.016318537859007835, 0.015410958904109588, 0...     0.057229  \n",
       "71     [0.014093959731543624, 0.013834589138470287, 0...     0.053420  \n",
       "...                                                  ...          ...  \n",
       "10188  [0.023426455738808482, 0.01317269458042235, 0....     0.064305  \n",
       "10189  [0.023255813953488372, 0.014124293785310734, 0...     0.064906  \n",
       "10193  [0.012608080108399108, 0.013881971851027233, 0...     0.056884  \n",
       "10194  [0.013742456191376427, 0.012947836234079003, 0...     0.057454  \n",
       "10196  [0.013660050775508525, 0.013094279401657213, 0...     0.052282  \n",
       "10199  [0.013526151010395348, 0.013373357842723916, 0...     0.062961  \n",
       "10200  [0.0127949524793223, 0.013410103866781771, 0.0...     0.051361  \n",
       "10201  [0.010286554004408524, 0.017288719528109828, 0...     0.053746  \n",
       "10204  [0.012550288406665189, 0.014130535596401352, 0...     0.053841  \n",
       "10206  [0.013143035632763882, 0.013341082609040234, 0...     0.066706  \n",
       "10208  [0.014692865993981235, 0.014512963536824708, 0...     0.066061  \n",
       "10209  [0.0170137046171136, 0.012678914002857887, 0.0...     0.054551  \n",
       "10210  [0.012881912689673192, 0.011972840328348269, 0...     0.052534  \n",
       "10211  [0.02286902286902287, 0.013804787225120352, 0....     0.060750  \n",
       "10213  [0.015665508301616195, 0.011972840328348269, 0...     0.053371  \n",
       "10217  [0.013489665329338277, 0.012603920496344472, 0...     0.049692  \n",
       "10219  [0.012932246274950801, 0.01988385154028153, 0....     0.057670  \n",
       "10222  [0.015206536541080345, 0.013211845102505695, 0...     0.065845  \n",
       "10225  [0.014848383593684738, 0.010778239837053382, 0...     0.052572  \n",
       "10227  [0.015665508301616195, 0.01673630345993146, 0....     0.057896  \n",
       "10228  [0.012667878716790804, 0.013810453721785331, 0...     0.052432  \n",
       "10229  [0.013878180416345412, 0.014198857704354235, 0...     0.053233  \n",
       "10230  [0.012597920671337921, 0.013823385916409173, 0...     0.053215  \n",
       "10231  [0.013644553164686754, 0.013814280321728272, 0...     0.052733  \n",
       "10232  [0.013563771603587836, 0.012609647113160587, 0...     0.051473  \n",
       "10233  [0.012188069126791122, 0.013498642504859671, 0...     0.057476  \n",
       "10234  [0.01265191130147311, 0.017158982940283903, 0....     0.057207  \n",
       "10237  [0.014130535596401352, 0.014375582317432647, 0...     0.063359  \n",
       "10240  [0.013756120307764047, 0.01383166568569747, 0....     0.079835  \n",
       "10243  [0.014293676031865718, 0.012323191436731206, 0...     0.052761  \n",
       "\n",
       "[11235 rows x 45 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "demanding-savings",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "promotional-gather",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "vietnamese-ranch",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "romance-company",
   "metadata": {},
   "source": [
    "## BDT training"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "italic-spectrum",
   "metadata": {},
   "outputs": [],
   "source": [
    "CAND_DIR = \"cand_loose\"\n",
    "corrections = [\"centJER\", \"jes_up\", \"jes_down\", \"jes_up_old\", \"jes_down_old\", \"jer_up\", \"jer_down\", \"tau_eup\", \"tau_edown\"]\n",
    "\n",
    "def get_samples():\n",
    "\n",
    "    files = glob.glob( CAND_DIR + \"/*.h5\")\n",
    "    samples = {}\n",
    "    for sample in files:\n",
    "        sample_name = sample.split(\"/\")[-1][:-3]\n",
    "        print(sample_name)\n",
    "        if (sample_name != \"Data\") & (sample_name != \"QCD\"):\n",
    "            for key in [\"central\", \"met_up\", \"met_down\"] + corrections:\n",
    "                samples[sample_name + \"_\" + key] = pd.read_hdf(sample, sample_name + \"_\" + key)\n",
    "        else:\n",
    "            samples[sample_name] = pd.read_hdf(sample)\n",
    "            \n",
    "    return samples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "political-chemical",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data\n",
      "QCD\n",
      "STJets\n",
      "TTJets_bkg\n",
      "TTJets_signal\n",
      "WZJets\n"
     ]
    }
   ],
   "source": [
    "samples = get_samples()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "american-temple",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['Data', 'QCD', 'STJets_central', 'STJets_met_up', 'STJets_met_down', 'STJets_centJER', 'STJets_jes_up', 'STJets_jes_down', 'STJets_jes_up_old', 'STJets_jes_down_old', 'STJets_jer_up', 'STJets_jer_down', 'STJets_tau_eup', 'STJets_tau_edown', 'TTJets_bkg_central', 'TTJets_bkg_met_up', 'TTJets_bkg_met_down', 'TTJets_bkg_centJER', 'TTJets_bkg_jes_up', 'TTJets_bkg_jes_down', 'TTJets_bkg_jes_up_old', 'TTJets_bkg_jes_down_old', 'TTJets_bkg_jer_up', 'TTJets_bkg_jer_down', 'TTJets_bkg_tau_eup', 'TTJets_bkg_tau_edown', 'TTJets_signal_central', 'TTJets_signal_met_up', 'TTJets_signal_met_down', 'TTJets_signal_centJER', 'TTJets_signal_jes_up', 'TTJets_signal_jes_down', 'TTJets_signal_jes_up_old', 'TTJets_signal_jes_down_old', 'TTJets_signal_jer_up', 'TTJets_signal_jer_down', 'TTJets_signal_tau_eup', 'TTJets_signal_tau_edown', 'WZJets_central', 'WZJets_met_up', 'WZJets_met_down', 'WZJets_centJER', 'WZJets_jes_up', 'WZJets_jes_down', 'WZJets_jes_up_old', 'WZJets_jes_down_old', 'WZJets_jer_up', 'WZJets_jer_down', 'WZJets_tau_eup', 'WZJets_tau_edown'])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "samples.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "likely-european",
   "metadata": {},
   "outputs": [],
   "source": [
    "samples[\"TTJets_signal_centJER\"][\"pdf_up\"] = samples[\"TTJets_signal_centJER\"][\"pdf_up\"].fillna(0.)\n",
    "samples[\"TTJets_signal_centJER\"][\"pdf_down\"] = samples[\"TTJets_signal_centJER\"][\"pdf_down\"].fillna(0.)\n",
    "samples[\"TTJets_bkg_centJER\"][\"pdf_up\"] = samples[\"TTJets_bkg_centJER\"][\"pdf_up\"].fillna(0.)\n",
    "samples[\"TTJets_bkg_centJER\"][\"pdf_down\"] = samples[\"TTJets_bkg_centJER\"][\"pdf_down\"].fillna(0.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "golden-yugoslavia",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11235"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(samples[\"QCD\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "dirty-inflation",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.20/06\n"
     ]
    }
   ],
   "source": [
    "import ml"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "interim-ensemble",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Prepare training data\n",
      "['Jet_pt', 'Jet_px', 'Jet_py', 'Jet_pz', 'Jet_e', 'Jet_eta', 'Jet_phi', 'Jet_mass', 'Jet_csvDisc', 'Jet_flavour', 'Tau_pt', 'Tau_px', 'Tau_py', 'Tau_pz', 'Tau_e', 'Tau_eta', 'Tau_phi', 'Tau_mass', 'Tau_charge', 'MET_pt', 'MET_px', 'MET_py', 'MET_pz', 'MET_e', 'MET_met', 'event', 'run', 'luminosityBlock', 'HLT_QuadJet40_IsoPFTau40', 'HLT_QuadJet45_IsoPFTau45', 'genEvent_tmeme', 'nJets', 'Jet_nbtags', 'ht', 'aplanarity', 'sphericity', 'chargeEta', 'met', 'deltaPhiTauMet', 'mt', 'mTauJet', 'Jet_btagSF', 'Jet_btagSF_up', 'Jet_btagSF_down', 'Jet_beff', 'Jet_btag_weight1', 'Jet_btag_weight1_up', 'Jet_btag_weight1_down', 'trigger_weight', 'trigger_weight_up', 'trigger_weight_down', 'norm', 'norm_up', 'norm_down', 'train_flag']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/eos/home-l/llayer/cmsopen/columnar/ml.py:88: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  signal_train[\"weights\"] = signal_train['trigger_weight'] * signal_train['Jet_btag_weight1']\n",
      "/eos/home-l/llayer/cmsopen/columnar/ml.py:89: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  signal_train[\"weights\"] = signal_train[\"weights\"] * (1. / np.mean(signal_train[\"weights\"]))\n",
      "/eos/home-l/llayer/cmsopen/columnar/ml.py:92: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  bkg_train[\"weights\"] = bkg_train['btag_weight']\n",
      "/eos/home-l/llayer/cmsopen/columnar/ml.py:93: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  bkg_train[\"weights\"] = bkg_train[\"weights\"] * (1. / np.mean(bkg_train[\"weights\"]))\n",
      "/eos/home-l/llayer/cmsopen/columnar/ml.py:96: FutureWarning: Sorting because non-concatenation axis is not aligned. A future version\n",
      "of pandas will change to not sort by default.\n",
      "\n",
      "To accept the future behavior, pass 'sort=False'.\n",
      "\n",
      "To retain the current behavior and silence the warning, pass 'sort=True'.\n",
      "\n",
      "  train_data = pd.concat([signal_train, bkg_train], axis=0)\n",
      "/eos/home-l/llayer/cmsopen/columnar/ml.py:97: FutureWarning: Sorting because non-concatenation axis is not aligned. A future version\n",
      "of pandas will change to not sort by default.\n",
      "\n",
      "To accept the future behavior, pass 'sort=False'.\n",
      "\n",
      "To retain the current behavior and silence the warning, pass 'sort=True'.\n",
      "\n",
      "  test_data = pd.concat([signal_test, bkg_test], axis=0)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train model\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/cvmfs/sft.cern.ch/lcg/views/LCG_97apython3/x86_64-centos7-gcc8-opt/lib/python3.7/site-packages/xgboost/core.py:587: FutureWarning: Series.base is deprecated and will be removed in a future version\n",
      "  if getattr(data, 'base', None) is not None and \\\n",
      "/cvmfs/sft.cern.ch/lcg/views/LCG_97apython3/x86_64-centos7-gcc8-opt/lib/python3.7/site-packages/xgboost/core.py:588: FutureWarning: Series.base is deprecated and will be removed in a future version\n",
      "  data.base is not None and isinstance(data, np.ndarray) \\\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Importance\n",
      "ht 0.040442035\n",
      "aplanarity 0.094627365\n",
      "sphericity 0.035212163\n",
      "chargeEta 0.10917759\n",
      "met 0.51533014\n",
      "deltaPhiTauMet 0.1477881\n",
      "mt 0.02040142\n",
      "mTauJet 0.037021138\n",
      "Predicting...\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "importlib.reload(ml)\n",
    "ml.train(samples, n_sig=4000, n_bkg=4000, ntrees=1000, lr=0.01)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "qualified-bridge",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['Data', 'QCD', 'STJets_central', 'STJets_met_up', 'STJets_met_down', 'STJets_centJER', 'STJets_jes_up', 'STJets_jes_down', 'STJets_jes_up_old', 'STJets_jes_down_old', 'STJets_jer_up', 'STJets_jer_down', 'STJets_tau_eup', 'STJets_tau_edown', 'TTJets_bkg_central', 'TTJets_bkg_met_up', 'TTJets_bkg_met_down', 'TTJets_bkg_centJER', 'TTJets_bkg_jes_up', 'TTJets_bkg_jes_down', 'TTJets_bkg_jes_up_old', 'TTJets_bkg_jes_down_old', 'TTJets_bkg_jer_up', 'TTJets_bkg_jer_down', 'TTJets_bkg_tau_eup', 'TTJets_bkg_tau_edown', 'TTJets_signal_central', 'TTJets_signal_met_up', 'TTJets_signal_met_down', 'TTJets_signal_centJER', 'TTJets_signal_jes_up', 'TTJets_signal_jes_down', 'TTJets_signal_jes_up_old', 'TTJets_signal_jes_down_old', 'TTJets_signal_jer_up', 'TTJets_signal_jer_down', 'TTJets_signal_tau_eup', 'TTJets_signal_tau_edown', 'WZJets_central', 'WZJets_met_up', 'WZJets_met_down', 'WZJets_centJER', 'WZJets_jes_up', 'WZJets_jes_down', 'WZJets_jes_up_old', 'WZJets_jes_down_old', 'WZJets_jer_up', 'WZJets_jer_down', 'WZJets_tau_eup', 'WZJets_tau_edown'])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "samples.keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "sporting-siemens",
   "metadata": {},
   "source": [
    "## Histograms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "illegal-liability",
   "metadata": {},
   "outputs": [],
   "source": [
    "import plot\n",
    "import importlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "published-watershed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<module 'plot' from '/eos/home-l/llayer/cmsopen/columnar/plot.py'>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "importlib.reload(plot)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "scientific-heather",
   "metadata": {},
   "outputs": [],
   "source": [
    "variables = [\n",
    "    {\"var_name\" : \"bdt\", \"bins\" : 30, \"xlow\" : 0., \"xup\" : 1., \"xtitle\" : \"bdt\"}\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "clear-interference",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data bdt None\n",
      "QCD bdt None\n",
      "STJets_central bdt None\n",
      "STJets_met_up bdt None\n",
      "STJets_met_down bdt None\n",
      "STJets_centJER bdt None\n",
      "STJets_centJER bdt btag_up\n",
      "STJets_centJER bdt btag_down\n",
      "STJets_centJER bdt trigger_up\n",
      "STJets_centJER bdt trigger_down\n",
      "STJets_centJER bdt xsec_up\n",
      "STJets_centJER bdt xsec_down\n",
      "STJets_jes_up bdt None\n",
      "STJets_jes_down bdt None\n",
      "STJets_jes_up_old bdt None\n",
      "STJets_jes_down_old bdt None\n",
      "STJets_jer_up bdt None\n",
      "STJets_jer_down bdt None\n",
      "STJets_tau_eup bdt None\n",
      "STJets_tau_edown bdt None\n",
      "TTJets_bkg_central bdt None\n",
      "TTJets_bkg_met_up bdt None\n",
      "TTJets_bkg_met_down bdt None\n",
      "TTJets_bkg_centJER bdt None\n",
      "TTJets_bkg_centJER bdt btag_up\n",
      "TTJets_bkg_centJER bdt btag_down\n",
      "TTJets_bkg_centJER bdt trigger_up\n",
      "TTJets_bkg_centJER bdt trigger_down\n",
      "TTJets_bkg_centJER bdt xsec_up\n",
      "TTJets_bkg_centJER bdt xsec_down\n",
      "TTJets_bkg_centJER bdt pdf_up\n",
      "TTJets_bkg_centJER bdt pdf_down\n",
      "TTJets_bkg_jes_up bdt None\n",
      "TTJets_bkg_jes_down bdt None\n",
      "TTJets_bkg_jes_up_old bdt None\n",
      "TTJets_bkg_jes_down_old bdt None\n",
      "TTJets_bkg_jer_up bdt None\n",
      "TTJets_bkg_jer_down bdt None\n",
      "TTJets_bkg_tau_eup bdt None\n",
      "TTJets_bkg_tau_edown bdt None\n",
      "TTJets_signal_central bdt None\n",
      "TTJets_signal_met_up bdt None\n",
      "TTJets_signal_met_down bdt None\n",
      "TTJets_signal_centJER bdt None\n",
      "TTJets_signal_centJER bdt btag_up\n",
      "TTJets_signal_centJER bdt btag_down\n",
      "TTJets_signal_centJER bdt trigger_up\n",
      "TTJets_signal_centJER bdt trigger_down\n",
      "TTJets_signal_centJER bdt xsec_up\n",
      "TTJets_signal_centJER bdt xsec_down\n",
      "TTJets_signal_centJER bdt pdf_up\n",
      "TTJets_signal_centJER bdt pdf_down\n",
      "TTJets_signal_jes_up bdt None\n",
      "TTJets_signal_jes_down bdt None\n",
      "TTJets_signal_jes_up_old bdt None\n",
      "TTJets_signal_jes_down_old bdt None\n",
      "TTJets_signal_jer_up bdt None\n",
      "TTJets_signal_jer_down bdt None\n",
      "TTJets_signal_tau_eup bdt None\n",
      "TTJets_signal_tau_edown bdt None\n",
      "WZJets_central bdt None\n",
      "WZJets_met_up bdt None\n",
      "WZJets_met_down bdt None\n",
      "WZJets_centJER bdt None\n",
      "WZJets_centJER bdt btag_up\n",
      "WZJets_centJER bdt btag_down\n",
      "WZJets_centJER bdt trigger_up\n",
      "WZJets_centJER bdt trigger_down\n",
      "WZJets_centJER bdt xsec_up\n",
      "WZJets_centJER bdt xsec_down\n",
      "WZJets_jes_up bdt None\n",
      "WZJets_jes_down bdt None\n",
      "WZJets_jes_up_old bdt None\n",
      "WZJets_jes_down_old bdt None\n",
      "WZJets_jer_up bdt None\n",
      "WZJets_jer_down bdt None\n",
      "WZJets_tau_eup bdt None\n",
      "WZJets_tau_edown bdt None\n"
     ]
    }
   ],
   "source": [
    "plot.vars_to_histos(samples, variables, file_name = \"bdt_nb\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "knowing-disabled",
   "metadata": {},
   "outputs": [],
   "source": [
    "import ROOT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "passive-immigration",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TFile**\t\thistos/bdt_nb.root\t\n",
      " TFile*\t\thistos/bdt_nb.root\t\n",
      "  OBJ: TH1D\tTTJets_signal_centJER_bdt\tTTJets_signal_centJER_bdt : 0 at: 0xceca7fa0\n",
      "  KEY: TH1D\tData_bdt;1\tData_bdt\n",
      "  KEY: TH1D\tQCD_bdt;1\tQCD_bdt\n",
      "  KEY: TH1D\tSTJets_central_bdt;1\tSTJets_central_bdt\n",
      "  KEY: TH1D\tSTJets_met_up_bdt;1\tSTJets_met_up_bdt\n",
      "  KEY: TH1D\tSTJets_met_down_bdt;1\tSTJets_met_down_bdt\n",
      "  KEY: TH1D\tSTJets_centJER_bdt;1\tSTJets_centJER_bdt\n",
      "  KEY: TH1D\tSTJets_centJER_btag_up_bdt;1\tSTJets_centJER_bdt_btag_up\n",
      "  KEY: TH1D\tSTJets_centJER_btag_down_bdt;1\tSTJets_centJER_bdt_btag_down\n",
      "  KEY: TH1D\tSTJets_centJER_trigger_up_bdt;1\tSTJets_centJER_bdt_trigger_up\n",
      "  KEY: TH1D\tSTJets_centJER_trigger_down_bdt;1\tSTJets_centJER_bdt_trigger_down\n",
      "  KEY: TH1D\tSTJets_centJER_xsec_up_bdt;1\tSTJets_centJER_bdt_xsec_up\n",
      "  KEY: TH1D\tSTJets_centJER_xsec_down_bdt;1\tSTJets_centJER_bdt_xsec_down\n",
      "  KEY: TH1D\tSTJets_jes_up_bdt;1\tSTJets_jes_up_bdt\n",
      "  KEY: TH1D\tSTJets_jes_down_bdt;1\tSTJets_jes_down_bdt\n",
      "  KEY: TH1D\tSTJets_jes_up_old_bdt;1\tSTJets_jes_up_old_bdt\n",
      "  KEY: TH1D\tSTJets_jes_down_old_bdt;1\tSTJets_jes_down_old_bdt\n",
      "  KEY: TH1D\tSTJets_jer_up_bdt;1\tSTJets_jer_up_bdt\n",
      "  KEY: TH1D\tSTJets_jer_down_bdt;1\tSTJets_jer_down_bdt\n",
      "  KEY: TH1D\tSTJets_tau_eup_bdt;1\tSTJets_tau_eup_bdt\n",
      "  KEY: TH1D\tSTJets_tau_edown_bdt;1\tSTJets_tau_edown_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_central_bdt;1\tTTJets_bkg_central_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_met_up_bdt;1\tTTJets_bkg_met_up_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_met_down_bdt;1\tTTJets_bkg_met_down_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_centJER_bdt;1\tTTJets_bkg_centJER_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_centJER_btag_up_bdt;1\tTTJets_bkg_centJER_bdt_btag_up\n",
      "  KEY: TH1D\tTTJets_bkg_centJER_btag_down_bdt;1\tTTJets_bkg_centJER_bdt_btag_down\n",
      "  KEY: TH1D\tTTJets_bkg_centJER_trigger_up_bdt;1\tTTJets_bkg_centJER_bdt_trigger_up\n",
      "  KEY: TH1D\tTTJets_bkg_centJER_trigger_down_bdt;1\tTTJets_bkg_centJER_bdt_trigger_down\n",
      "  KEY: TH1D\tTTJets_bkg_centJER_xsec_up_bdt;1\tTTJets_bkg_centJER_bdt_xsec_up\n",
      "  KEY: TH1D\tTTJets_bkg_centJER_xsec_down_bdt;1\tTTJets_bkg_centJER_bdt_xsec_down\n",
      "  KEY: TH1D\tTTJets_bkg_centJER_pdf_up_bdt;1\tTTJets_bkg_centJER_bdt_pdf_up\n",
      "  KEY: TH1D\tTTJets_bkg_centJER_pdf_down_bdt;1\tTTJets_bkg_centJER_bdt_pdf_down\n",
      "  KEY: TH1D\tTTJets_bkg_jes_up_bdt;1\tTTJets_bkg_jes_up_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_jes_down_bdt;1\tTTJets_bkg_jes_down_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_jes_up_old_bdt;1\tTTJets_bkg_jes_up_old_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_jes_down_old_bdt;1\tTTJets_bkg_jes_down_old_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_jer_up_bdt;1\tTTJets_bkg_jer_up_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_jer_down_bdt;1\tTTJets_bkg_jer_down_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_tau_eup_bdt;1\tTTJets_bkg_tau_eup_bdt\n",
      "  KEY: TH1D\tTTJets_bkg_tau_edown_bdt;1\tTTJets_bkg_tau_edown_bdt\n",
      "  KEY: TH1D\tTTJets_signal_central_bdt;1\tTTJets_signal_central_bdt\n",
      "  KEY: TH1D\tTTJets_signal_met_up_bdt;1\tTTJets_signal_met_up_bdt\n",
      "  KEY: TH1D\tTTJets_signal_met_down_bdt;1\tTTJets_signal_met_down_bdt\n",
      "  KEY: TH1D\tTTJets_signal_centJER_bdt;1\tTTJets_signal_centJER_bdt\n",
      "  KEY: TH1D\tTTJets_signal_centJER_btag_up_bdt;1\tTTJets_signal_centJER_bdt_btag_up\n",
      "  KEY: TH1D\tTTJets_signal_centJER_btag_down_bdt;1\tTTJets_signal_centJER_bdt_btag_down\n",
      "  KEY: TH1D\tTTJets_signal_centJER_trigger_up_bdt;1\tTTJets_signal_centJER_bdt_trigger_up\n",
      "  KEY: TH1D\tTTJets_signal_centJER_trigger_down_bdt;1\tTTJets_signal_centJER_bdt_trigger_down\n",
      "  KEY: TH1D\tTTJets_signal_centJER_xsec_up_bdt;1\tTTJets_signal_centJER_bdt_xsec_up\n",
      "  KEY: TH1D\tTTJets_signal_centJER_xsec_down_bdt;1\tTTJets_signal_centJER_bdt_xsec_down\n",
      "  KEY: TH1D\tTTJets_signal_centJER_pdf_up_bdt;1\tTTJets_signal_centJER_bdt_pdf_up\n",
      "  KEY: TH1D\tTTJets_signal_centJER_pdf_down_bdt;1\tTTJets_signal_centJER_bdt_pdf_down\n",
      "  KEY: TH1D\tTTJets_signal_jes_up_bdt;1\tTTJets_signal_jes_up_bdt\n",
      "  KEY: TH1D\tTTJets_signal_jes_down_bdt;1\tTTJets_signal_jes_down_bdt\n",
      "  KEY: TH1D\tTTJets_signal_jes_up_old_bdt;1\tTTJets_signal_jes_up_old_bdt\n",
      "  KEY: TH1D\tTTJets_signal_jes_down_old_bdt;1\tTTJets_signal_jes_down_old_bdt\n",
      "  KEY: TH1D\tTTJets_signal_jer_up_bdt;1\tTTJets_signal_jer_up_bdt\n",
      "  KEY: TH1D\tTTJets_signal_jer_down_bdt;1\tTTJets_signal_jer_down_bdt\n",
      "  KEY: TH1D\tTTJets_signal_tau_eup_bdt;1\tTTJets_signal_tau_eup_bdt\n",
      "  KEY: TH1D\tTTJets_signal_tau_edown_bdt;1\tTTJets_signal_tau_edown_bdt\n",
      "  KEY: TH1D\tWZJets_central_bdt;1\tWZJets_central_bdt\n",
      "  KEY: TH1D\tWZJets_met_up_bdt;1\tWZJets_met_up_bdt\n",
      "  KEY: TH1D\tWZJets_met_down_bdt;1\tWZJets_met_down_bdt\n",
      "  KEY: TH1D\tWZJets_centJER_bdt;1\tWZJets_centJER_bdt\n",
      "  KEY: TH1D\tWZJets_centJER_btag_up_bdt;1\tWZJets_centJER_bdt_btag_up\n",
      "  KEY: TH1D\tWZJets_centJER_btag_down_bdt;1\tWZJets_centJER_bdt_btag_down\n",
      "  KEY: TH1D\tWZJets_centJER_trigger_up_bdt;1\tWZJets_centJER_bdt_trigger_up\n",
      "  KEY: TH1D\tWZJets_centJER_trigger_down_bdt;1\tWZJets_centJER_bdt_trigger_down\n",
      "  KEY: TH1D\tWZJets_centJER_xsec_up_bdt;1\tWZJets_centJER_bdt_xsec_up\n",
      "  KEY: TH1D\tWZJets_centJER_xsec_down_bdt;1\tWZJets_centJER_bdt_xsec_down\n",
      "  KEY: TH1D\tWZJets_jes_up_bdt;1\tWZJets_jes_up_bdt\n",
      "  KEY: TH1D\tWZJets_jes_down_bdt;1\tWZJets_jes_down_bdt\n",
      "  KEY: TH1D\tWZJets_jes_up_old_bdt;1\tWZJets_jes_up_old_bdt\n",
      "  KEY: TH1D\tWZJets_jes_down_old_bdt;1\tWZJets_jes_down_old_bdt\n",
      "  KEY: TH1D\tWZJets_jer_up_bdt;1\tWZJets_jer_up_bdt\n",
      "  KEY: TH1D\tWZJets_jer_down_bdt;1\tWZJets_jer_down_bdt\n",
      "  KEY: TH1D\tWZJets_tau_eup_bdt;1\tWZJets_tau_eup_bdt\n",
      "  KEY: TH1D\tWZJets_tau_edown_bdt;1\tWZJets_tau_edown_bdt\n"
     ]
    }
   ],
   "source": [
    "f.ls()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "cleared-scene",
   "metadata": {},
   "outputs": [],
   "source": [
    "f = ROOT.TFile(\"histos/bdt_nb.root\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "cardiovascular-algeria",
   "metadata": {},
   "outputs": [],
   "source": [
    "h = f.Get(\"TTJets_signal_centJER_pdf_up_bdt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "paperback-organizer",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ROOT.TH1D"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(h)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "civic-camel",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "c = ROOT.TCanvas()\n",
    "h.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "certified-baptist",
   "metadata": {},
   "source": [
    "## Stack"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "marine-relationship",
   "metadata": {},
   "outputs": [],
   "source": [
    "import stack"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "downtown-struggle",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Scaling QCD by 0.73\n",
      "Scaling TTJets_signal by 1.0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Info in <TCanvas::Print>: png file stacks_corr/bdt_central_postfit.png has been created\n"
     ]
    }
   ],
   "source": [
    "#importlib.reload(stack)\n",
    "sample_names = [\"TTJets_bkg\", \"WZJets\", \"STJets\", \"QCD\", \"TTJets_signal\"]\n",
    "sfs = {}\n",
    "sfs[\"TTJets_signal\"] = 1.\n",
    "sfs[\"QCD\"] = 0.73\n",
    "for var in variables:\n",
    "    stack.plot( \"histos/\" + \"bdt_nb\" + \".root\", var[\"var_name\"], var[\"xtitle\"], sample_names, sfs=sfs, corr = \"central\" )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cordless-brighton",
   "metadata": {},
   "source": [
    "## Syst"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "mathematical-grill",
   "metadata": {},
   "outputs": [],
   "source": [
    "import ROOT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "convinced-index",
   "metadata": {},
   "outputs": [],
   "source": [
    "f = ROOT.TFile(\"histos/bdt_nb.root\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "sitting-champion",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<ROOT.TH1D object (\"TTJets_signal_centJER_btag_down_bdt\") at 0x813fb10>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f.Get(\"TTJets_signal_centJER_btag_down_bdt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "terminal-renewal",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'ROOT.TH1D'>\n",
      "TTJets_signal_centJER_bdt\n",
      "<class 'ROOT.TH1D'>\n",
      "TTJets_signal_centJER_btag_up_bdt\n",
      "TTJets_signal_centJER_btag_down_bdt\n",
      "<class 'ROOT.TH1D'>\n",
      "bdt bdt\n",
      "<class 'ROOT.TH1D'>\n",
      "TTJets_signal_centJER_trigger_up_bdt\n",
      "TTJets_signal_centJER_trigger_down_bdt\n",
      "<class 'ROOT.TH1D'>\n",
      "bdt bdt\n",
      "<class 'ROOT.TH1D'>\n",
      "TTJets_signal_centJER_xsec_up_bdt\n",
      "TTJets_signal_centJER_xsec_down_bdt\n",
      "<class 'ROOT.TH1D'>\n",
      "bdt bdt\n",
      "<class 'ROOT.TH1D'>\n",
      "TTJets_signal_centJER_pdf_up_bdt\n",
      "TTJets_signal_centJER_pdf_down_bdt\n",
      "<class 'ROOT.TH1D'>\n",
      "bdt bdt\n",
      "bdt bdt\n",
      "bdt bdt\n",
      "bdt bdt\n",
      "bdt bdt\n",
      "bdt bdt\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c\n",
      "Info in <TCanvas::Print>: png file syst/bdt_btag.png has been created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c\n",
      "Info in <TCanvas::Print>: png file syst/bdt_trigger.png has been created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c\n",
      "Info in <TCanvas::Print>: png file syst/bdt_xsec.png has been created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c\n",
      "Info in <TCanvas::Print>: png file syst/bdt_pdf.png has been created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c\n",
      "Info in <TCanvas::Print>: png file syst/bdt_JES.png has been created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c\n",
      "Info in <TCanvas::Print>: png file syst/bdt_JER.png has been created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c\n",
      "Info in <TCanvas::Print>: png file syst/bdt_Tau Scale.png has been created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c\n",
      "Info in <TCanvas::Print>: png file syst/bdt_JES old.png has been created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c\n",
      "Info in <TCanvas::Print>: png file syst/bdt_JES old.png has been created\n"
     ]
    }
   ],
   "source": [
    "importlib.reload(plot)\n",
    "plot.syst(variables, sample = \"TTJets_signal\", file_name = \"bdt_nb\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "southern-commission",
   "metadata": {},
   "outputs": [],
   "source": [
    "TTJets_signal_centJER_btag_up_bdt\n",
    "TTJets_signal_centJER_btag_up_bdt"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "mighty-virgin",
   "metadata": {},
   "source": [
    "## Fit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "diverse-rescue",
   "metadata": {},
   "outputs": [],
   "source": [
    "import fit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ceramic-decision",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_centJER_bdt\n",
      "TTJets_bkg 143.2548703377998\n",
      "WZJets_centJER_bdt\n",
      "WZJets 63.342947935142455\n",
      "STJets_centJER_bdt\n",
      "STJets 30.165996274894944\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_centJER_bdt\n",
      "TTJets_signal 347.1281179556397\n",
      "scale factor TTbar tau(h) QQ  0.9214735847990575 +- 0.07791342052562594\n",
      "scale factor MultiJet  0.7326753274979056 +- 0.007111731405152924\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_jes_up_bdt\n",
      "TTJets_bkg 145.76828344086593\n",
      "WZJets_jes_up_bdt\n",
      "WZJets 65.15419346825847\n",
      "STJets_jes_up_bdt\n",
      "STJets 30.935160310569525\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_jes_up_bdt\n",
      "TTJets_signal 354.6369360690969\n",
      "scale factor TTbar tau(h) QQ  0.9073829655543513 +- 0.07655581246915763\n",
      "scale factor MultiJet  0.7308304839992089 +- 0.007138967704910655\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_jes_down_bdt\n",
      "TTJets_bkg 140.42892027660224\n",
      "WZJets_jes_down_bdt\n",
      "WZJets 62.434014152392876\n",
      "STJets_jes_down_bdt\n",
      "STJets 29.514357300815963\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_jes_down_bdt\n",
      "TTJets_signal 338.2703270110728\n",
      "scale factor TTbar tau(h) QQ  0.9379497171282354 +- 0.07949900052962246\n",
      "scale factor MultiJet  0.7345094979434348 +- 0.007071293333881077\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_jes_up_old_bdt\n",
      "TTJets_bkg 147.463326280664\n",
      "WZJets_jes_up_old_bdt\n",
      "WZJets 66.4911658280238\n",
      "STJets_jes_up_old_bdt\n",
      "STJets 31.56016812844896\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_jes_up_old_bdt\n",
      "TTJets_signal 358.2458555049086\n",
      "scale factor TTbar tau(h) QQ  0.9055324626482582 +- 0.07623309314167208\n",
      "scale factor MultiJet  0.729182113143846 +- 0.007181216127854186\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_jes_down_old_bdt\n",
      "TTJets_bkg 139.13871781848383\n",
      "WZJets_jes_down_old_bdt\n",
      "WZJets 61.9438785964927\n",
      "STJets_jes_down_old_bdt\n",
      "STJets 29.090571140883306\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_jes_down_old_bdt\n",
      "TTJets_signal 333.60369320318875\n",
      "scale factor TTbar tau(h) QQ  0.9433344245523222 +- 0.08026744110830779\n",
      "scale factor MultiJet  0.7357676702854434 +- 0.007041149235886098\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_jer_up_bdt\n",
      "TTJets_bkg 139.79736919251792\n",
      "WZJets_jer_up_bdt\n",
      "WZJets 64.19386104683738\n",
      "STJets_jer_up_bdt\n",
      "STJets 29.560848249013887\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_jer_up_bdt\n",
      "TTJets_signal 344.6999722109652\n",
      "scale factor TTbar tau(h) QQ  0.926566087047167 +- 0.07823832158273655\n",
      "scale factor MultiJet  0.7336466184508784 +- 0.007091433828179779\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_jer_down_bdt\n",
      "TTJets_bkg 146.26629469151203\n",
      "WZJets_jer_down_bdt\n",
      "WZJets 63.68873397380727\n",
      "STJets_jer_down_bdt\n",
      "STJets 30.96679368035005\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_jer_down_bdt\n",
      "TTJets_signal 349.18047045653304\n",
      "scale factor TTbar tau(h) QQ  0.9169003961745567 +- 0.07754441286829675\n",
      "scale factor MultiJet  0.7315045874963195 +- 0.0071198974603599256\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_tau_eup_bdt\n",
      "TTJets_bkg 148.7911971380711\n",
      "WZJets_tau_eup_bdt\n",
      "WZJets 62.30991450734996\n",
      "STJets_tau_eup_bdt\n",
      "STJets 30.820839777387814\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_tau_eup_bdt\n",
      "TTJets_signal 353.51199224690765\n",
      "scale factor TTbar tau(h) QQ  0.9010504163419091 +- 0.07620236492693017\n",
      "scale factor MultiJet  0.7316706285830932 +- 0.007083467115396422\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_tau_edown_bdt\n",
      "TTJets_bkg 134.84316469577465\n",
      "WZJets_tau_edown_bdt\n",
      "WZJets 63.532626409522535\n",
      "STJets_tau_edown_bdt\n",
      "STJets 28.76702944141954\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_tau_edown_bdt\n",
      "TTJets_signal 329.916166797164\n",
      "scale factor TTbar tau(h) QQ  0.9812991582128759 +- 0.08251996522400026\n",
      "scale factor MultiJet  0.7341856938604716 +- 0.007158728885695968\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_met_up_bdt\n",
      "TTJets_bkg 155.1371488545426\n",
      "WZJets_met_up_bdt\n",
      "WZJets 67.37052951377493\n",
      "STJets_met_up_bdt\n",
      "STJets 31.928266763321943\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_met_up_bdt\n",
      "TTJets_signal 354.9576694572058\n",
      "scale factor TTbar tau(h) QQ  0.9163804015139916 +- 0.07729238084006922\n",
      "scale factor MultiJet  0.7266067053310296 +- 0.007214172632178554\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_met_down_bdt\n",
      "TTJets_bkg 136.57343188463943\n",
      "WZJets_met_down_bdt\n",
      "WZJets 63.362859207928025\n",
      "STJets_met_down_bdt\n",
      "STJets 29.589529968337903\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_met_down_bdt\n",
      "TTJets_signal 342.5272666317852\n",
      "scale factor TTbar tau(h) QQ  0.9121222228996663 +- 0.07755431881890482\n",
      "scale factor MultiJet  0.7365356061156265 +- 0.006985128787764634\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_centJER_btag_up_bdt\n",
      "TTJets_bkg 145.14559104962692\n",
      "WZJets_centJER_btag_up_bdt\n",
      "WZJets 67.59199689998911\n",
      "STJets_centJER_btag_up_bdt\n",
      "STJets 30.735127309265387\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_centJER_btag_up_bdt\n",
      "TTJets_signal 351.3939923816229\n",
      "scale factor TTbar tau(h) QQ  0.8970466011707324 +- 0.07660478801690129\n",
      "scale factor MultiJet  0.7321346243295709 +- 0.007078211389828587\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_centJER_btag_down_bdt\n",
      "TTJets_bkg 141.27928862767718\n",
      "WZJets_centJER_btag_down_bdt\n",
      "WZJets 59.052741686785055\n",
      "STJets_centJER_btag_down_bdt\n",
      "STJets 29.58316668032922\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_centJER_btag_down_bdt\n",
      "TTJets_signal 342.6696857037947\n",
      "scale factor TTbar tau(h) QQ  0.9472435772021791 +- 0.07930292277411427\n",
      "scale factor MultiJet  0.733234451342091 +- 0.007145591114650575\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_centJER_trigger_up_bdt\n",
      "TTJets_bkg 147.0912275475032\n",
      "WZJets_centJER_trigger_up_bdt\n",
      "WZJets 65.13903922005662\n",
      "STJets_centJER_trigger_up_bdt\n",
      "STJets 30.997794333321472\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_centJER_trigger_up_bdt\n",
      "TTJets_signal 356.45835855142025\n",
      "scale factor TTbar tau(h) QQ  0.8861901800043589 +- 0.07552852843476421\n",
      "scale factor MultiJet  0.7320219617355871 +- 0.007079345486317415\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_centJER_trigger_down_bdt\n",
      "TTJets_bkg 139.50822772121663\n",
      "WZJets_centJER_trigger_down_bdt\n",
      "WZJets 61.585366107841715\n",
      "STJets_centJER_trigger_down_bdt\n",
      "STJets 29.3531353743561\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_centJER_trigger_down_bdt\n",
      "TTJets_signal 338.0150678323616\n",
      "scale factor TTbar tau(h) QQ  0.9578592908616802 +- 0.08036940835473012\n",
      "scale factor MultiJet  0.7333105105689458 +- 0.007143320118619915\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_centJER_xsec_up_bdt\n",
      "TTJets_bkg 151.98992340717786\n",
      "WZJets_centJER_xsec_up_bdt\n",
      "WZJets 66.36944844280481\n",
      "STJets_centJER_xsec_up_bdt\n",
      "STJets 32.146268011902755\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_centJER_xsec_up_bdt\n",
      "TTJets_signal 368.2944666114712\n",
      "scale factor TTbar tau(h) QQ  0.8472600249634797 +- 0.07278843676670706\n",
      "scale factor MultiJet  0.7311203425660547 +- 0.007049054486884301\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_centJER_xsec_down_bdt\n",
      "TTJets_bkg 134.51981726842175\n",
      "WZJets_centJER_xsec_down_bdt\n",
      "WZJets 60.316447427480085\n",
      "STJets_centJER_xsec_down_bdt\n",
      "STJets 28.11408902995513\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_centJER_xsec_down_bdt\n",
      "TTJets_signal 325.96176929980754\n",
      "scale factor TTbar tau(h) QQ  1.0055200182853785 +- 0.08369963179094235\n",
      "scale factor MultiJet  0.7342324567297807 +- 0.007174035066252781\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_centJER_pdf_up_bdt\n",
      "TTJets_bkg 156.77522541506033\n",
      "WZJets_centJER_bdt\n",
      "WZJets 63.342947935142455\n",
      "STJets_centJER_bdt\n",
      "STJets 30.165996274894944\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_centJER_pdf_up_bdt\n",
      "TTJets_signal 385.7961397702231\n",
      "scale factor TTbar tau(h) QQ  0.812587397747121 +- 0.06956405654527578\n",
      "scale factor MultiJet  0.7307968003755796 +- 0.0070569340452083015\n",
      "Data_bdt\n",
      "Data 3343.0\n",
      "TTJets_bkg_centJER_pdf_down_bdt\n",
      "TTJets_bkg 130.8952617732021\n",
      "WZJets_centJER_bdt\n",
      "WZJets 63.342947935142455\n",
      "STJets_centJER_bdt\n",
      "STJets 30.165996274894944\n",
      "QCD_bdt\n",
      "QCD 3803.0034445550423\n",
      "TTJets_signal_centJER_pdf_down_bdt\n",
      "TTJets_signal 311.7741075594946\n",
      "scale factor TTbar tau(h) QQ  1.045127011948263 +- 0.08738189785125423\n",
      "scale factor MultiJet  0.7343543841851622 +- 0.007163657255802784\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  343 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  344 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  345 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  346 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  347 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  348 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-497.228 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.30052e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1068.79 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=7.51481e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.02977e-01   8.70698e-03   6.38690e-04   3.02554e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.583e-05 \n",
      " **********\n",
      " **  349 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  350 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  351 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1068.79 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=7.51471e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.02977e-01   8.70698e-03   1.27738e-04  -9.17438e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.583e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  352 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  353 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  354 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  355 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  356 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  357 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-505.515 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.29022e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1071.16 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=7.09968e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.03765e-01   8.75468e-03   6.40834e-04   2.93465e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.667e-05 \n",
      " **********\n",
      " **  358 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  359 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  360 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1071.16 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=7.09958e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.03765e-01   8.75468e-03   1.28167e-04  -9.14847e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.667e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  361 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  362 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  363 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  364 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  365 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  366 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-488.253 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.30979e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1066.19 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=7.06339e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.01999e-01   8.64526e-03   6.36257e-04   2.94175e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.476e-05 \n",
      " **********\n",
      " **  367 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  368 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  369 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1066.19 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=7.0633e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.01999e-01   8.64526e-03   1.27251e-04  -9.20661e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.476e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  370 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  371 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  372 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  373 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  374 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  375 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-512.894 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.27986e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1071.82 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=7.37292e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.04731e-01   8.81689e-03   6.42845e-04   2.98167e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.776e-05 \n",
      " **********\n",
      " **  376 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  377 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  378 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1071.82 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=7.37282e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.04731e-01   8.81689e-03   1.28569e-04  -9.11686e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.776e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  379 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  380 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  381 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  382 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  383 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  384 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-481.449 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.31603e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1064.2 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=6.96656e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.01098e-01   8.60231e-03   6.35019e-04   2.92457e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.402e-05 \n",
      " **********\n",
      " **  385 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  386 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  387 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1064.2 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=6.96647e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.01098e-01   8.60231e-03   1.27004e-04  -9.23645e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.402e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  388 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  389 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  390 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  391 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  392 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  393 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-492.567 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.30644e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1067.41 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=7.13636e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.02715e-01   8.67316e-03   6.36692e-04   2.95654e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.524e-05 \n",
      " **********\n",
      " **  394 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  395 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  396 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1067.41 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=7.13627e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.02715e-01   8.67316e-03   1.27338e-04  -9.18299e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.524e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  397 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  398 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  399 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  400 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  401 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  402 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-502.115 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.29414e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1070.68 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=7.05962e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.03209e-01   8.72866e-03   6.40320e-04   2.92812e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.621e-05 \n",
      " **********\n",
      " **  403 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  404 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  405 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1070.68 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=7.05952e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.03209e-01   8.72866e-03   1.28064e-04  -9.16672e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.621e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  406 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  407 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  408 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  409 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  410 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  411 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-497.196 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.30276e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1070.6 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=7.10942e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.02717e-01   8.68680e-03   6.38573e-04   2.94634e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.548e-05 \n",
      " **********\n",
      " **  412 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  413 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  414 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1070.6 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=7.10932e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.02717e-01   8.68680e-03   1.27715e-04  -9.18294e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.548e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  415 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  416 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  417 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  418 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  419 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  420 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-497.056 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.29871e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1065.66 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=7.75396e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.03903e-01   8.73746e-03   6.37417e-04   3.07474e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.636e-05 \n",
      " **********\n",
      " **  421 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  422 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  423 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1065.66 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=7.75385e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.03903e-01   8.73746e-03   1.27483e-04  -9.14396e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.636e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  424 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  425 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  426 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  427 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  428 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  429 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-518.137 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.25939e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1067.76 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=5.96708e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.05316e-01   8.88294e-03   6.45290e-04   2.66899e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.893e-05 \n",
      " **********\n",
      " **  430 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  431 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  432 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1067.76 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=5.96699e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.05316e-01   8.88294e-03   1.29058e-04  -9.09778e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.893e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  433 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  434 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  435 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  436 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  437 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  438 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-478.896 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.34139e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1072.93 FROM MIGRAD    STATUS=CONVERGED      20 CALLS          21 TOTAL\n",
      "                     EDM=1.93426e-08    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.00347e-01   8.53210e-03   6.42477e-04   4.89702e-03\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.282e-05 \n",
      " **********\n",
      " **  439 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  440 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  441 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1072.93 FROM HESSE     STATUS=OK              5 CALLS          26 TOTAL\n",
      "                     EDM=1.93257e-08    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.00347e-01   8.53210e-03   1.28495e-04  -9.26141e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.282e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  442 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  443 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  444 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  445 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  446 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  447 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-497.101 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.30226e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1071.75 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=8.40141e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.01698e-01   8.68470e-03   6.41161e-04   3.18955e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.544e-05 \n",
      " **********\n",
      " **  448 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  449 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  450 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1071.75 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=8.4013e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.01698e-01   8.68470e-03   1.28232e-04  -9.21655e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.544e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  451 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  452 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  453 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  454 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  455 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  456 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-497.33 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.29877e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1065.8 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=6.72055e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.04267e-01   8.72919e-03   6.36210e-04   2.86967e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.622e-05 \n",
      " **********\n",
      " **  457 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  458 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  459 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1065.8 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=6.72046e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.04267e-01   8.72919e-03   1.27242e-04  -9.13204e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.622e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  460 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  461 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  462 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  463 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  464 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  465 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-497.126 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.30228e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1071.45 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=8.12877e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.01907e-01   8.68541e-03   6.40635e-04   3.13998e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.546e-05 \n",
      " **********\n",
      " **  466 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  467 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  468 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1071.45 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=8.12867e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.01907e-01   8.68541e-03   1.28127e-04  -9.20964e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.546e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  469 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  470 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  471 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  472 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  473 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  474 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-497.339 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.29878e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1066.21 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=6.96254e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.04021e-01   8.72791e-03   6.36808e-04   2.91826e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.620e-05 \n",
      " **********\n",
      " **  475 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  476 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  477 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1066.21 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=6.96245e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.04021e-01   8.72791e-03   1.27362e-04  -9.14009e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.620e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  478 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  479 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  480 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  481 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  482 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  483 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-497.692 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.30310e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1074.25 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=8.79993e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.00903e-01   8.66859e-03   6.42814e-04   3.25901e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.517e-05 \n",
      " **********\n",
      " **  484 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  485 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  486 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1074.25 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=8.79982e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.00903e-01   8.66859e-03   1.28563e-04  -9.24292e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.517e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  487 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  488 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  489 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  490 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  491 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  492 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-496.771 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.29794e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1063.39 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=6.42311e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.05050e-01   8.74437e-03   6.34617e-04   2.80984e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.648e-05 \n",
      " **********\n",
      " **  493 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  494 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  495 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1063.39 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=6.42302e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.05050e-01   8.74437e-03   1.26923e-04  -9.10646e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.648e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  496 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  497 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  498 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  499 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  500 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  501 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-498.48 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.29913e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1072.9 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=7.65934e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.01365e-01   8.67766e-03   6.42113e-04   3.04347e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.532e-05 \n",
      " **********\n",
      " **  502 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  503 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  504 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1072.9 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=7.65924e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.01365e-01   8.67766e-03   1.28423e-04  -9.22759e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.532e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n",
      "[#1] INFO:DataHandling -- RooDataHist::adjustBinning(signal): fit range of variable x expanded to nearest bin boundaries: [0,350] --> [0,1]\n",
      "[#0] WARNING:InputArguments -- RooAbsPdf::fitTo(pdf) WARNING: a likelihood fit is requested of what appears to be weighted data.\n",
      "       While the estimated values of the parameters will always be calculated taking the weights into account,\n",
      "       there are multiple ways to estimate the errors of the parameters. You are advised to make an \n",
      "       explicit choice for the error calculation:\n",
      "           - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix\n",
      "             (error will be proportional to the number of events in MC).\n",
      "           - Or provide SumW2Error(false), to return errors from original HESSE error matrix\n",
      "             (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).\n",
      "           - Or provide AsymptoticError(true), to use the asymptotically correct expression\n",
      "             (for details see https://arxiv.org/abs/1911.01303).\n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: activating const optimization\n",
      "[#1] INFO:Minization --  The following expressions have been identified as constant and will be precalculated and cached: (signal,bkg)\n",
      " **********\n",
      " **  505 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  506 **SET NOGRAD\n",
      " **********\n",
      " PARAMETER DEFINITIONS:\n",
      "    NO.   NAME         VALUE      STEP SIZE      LIMITS\n",
      "     1 c0           5.00000e-01  1.00000e-01    0.00000e+00  1.00000e+00\n",
      " **********\n",
      " **  507 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  508 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  509 **SET STR           1\n",
      " **********\n",
      " NOW USING STRATEGY  1: TRY TO BALANCE SPEED AGAINST RELIABILITY\n",
      " **********\n",
      " **  510 **MIGRAD         500           1\n",
      " **********\n",
      " FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.\n",
      " START MIGRAD MINIMIZATION.  STRATEGY  1.  CONVERGENCE WHEN EDM .LT. 1.00e-03\n",
      " FCN=-496.258 FROM MIGRAD    STATUS=INITIATE        4 CALLS           5 TOTAL\n",
      "                     EDM= unknown      STRATEGY= 1      NO ERROR MATRIX       \n",
      "  EXT PARAMETER               CURRENT GUESS       STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           5.00000e-01   1.00000e-01   2.01358e-01   1.30149e+03\n",
      "                               ERR DEF= 0.5\n",
      " MIGRAD MINIMIZATION HAS CONVERGED.\n",
      " MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1065 FROM MIGRAD    STATUS=CONVERGED      17 CALLS          18 TOTAL\n",
      "                     EDM=7.4433e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                   STEP         FIRST   \n",
      "  NO.   NAME      VALUE            ERROR          SIZE      DERIVATIVE \n",
      "   1  c0           1.04484e-01   8.73580e-03   6.35654e-04   3.02053e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.633e-05 \n",
      " **********\n",
      " **  511 **SET ERR         0.5\n",
      " **********\n",
      " **********\n",
      " **  512 **SET PRINT           1\n",
      " **********\n",
      " **********\n",
      " **  513 **HESSE         500\n",
      " **********\n",
      " COVARIANCE MATRIX CALCULATED SUCCESSFULLY\n",
      " FCN=-1065 FROM HESSE     STATUS=OK              5 CALLS          23 TOTAL\n",
      "                     EDM=7.4432e-05    STRATEGY= 1      ERROR MATRIX ACCURATE \n",
      "  EXT PARAMETER                                INTERNAL      INTERNAL  \n",
      "  NO.   NAME      VALUE            ERROR       STEP SIZE       VALUE   \n",
      "   1  c0           1.04484e-01   8.73579e-03   1.27131e-04  -9.12494e-01\n",
      "                               ERR DEF= 0.5\n",
      " EXTERNAL ERROR MATRIX.    NDIM=  25    NPAR=  1    ERR DEF=0.5\n",
      "  7.633e-05 \n",
      "[#1] INFO:Minization -- RooMinimizer::optimizeConst: deactivating const optimization\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n",
      "Warning in <TH1D::Sumw2>: Sum of squares of weights structure already created\n"
     ]
    }
   ],
   "source": [
    "#importlib.reload(fit)\n",
    "\n",
    "syst=True\n",
    "\n",
    "sample_names = [\"Data\", \"TTJets_bkg\", \"WZJets\", \"STJets\", \"QCD\", \"TTJets_signal\"]\n",
    "sf_tt_sig, sf_qcd = fit.fit(\"histos/\" + \"bdt_nb\" + \".root\", sample_names, \"bdt\", corr=\"centJER\")\n",
    "sfs = {}\n",
    "sfs[\"TTJets_signal\"] = sf_tt_sig\n",
    "sfs[\"QCD\"] = sf_qcd\n",
    "#stack.plot( \"histos/\" + file_name + \".root\", var, sample_names[1:], sfs )\n",
    "\n",
    "if syst:\n",
    "\n",
    "    # PU - not applied\n",
    "    # JES/JER/TauScale/MET\n",
    "    for c in  [\"jes_up\", \"jes_down\", \"jes_up_old\", \"jes_down_old\", \"jer_up\", \"jer_down\", \"tau_eup\", \"tau_edown\",\n",
    "               \"met_up\", \"met_down\"]:\n",
    "        sf_tt_sig, sf_qcd = fit.fit(\"histos/\" + \"bdt_nb\" + \".root\", sample_names, \"bdt\", corr=c)     \n",
    "        sfs[\"TTJets_signal_\" + c] = sf_tt_sig\n",
    "        \n",
    "    # B-tagging, Trigger stat, XSEC theory, PDF\n",
    "    for c in [\"btag_up\", \"btag_down\", \"trigger_up\", \"trigger_down\", \"xsec_up\", \"xsec_down\", \"pdf_up\", \"pdf_down\"]:\n",
    "        sf_tt_sig, sf_qcd = fit.fit(\"histos/\" + \"bdt_nb\" + \".root\", sample_names, \"bdt\", corr = \"centJER_\" + c)     \n",
    "        sfs[\"TTJets_signal_\" + c] = sf_tt_sig"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "plastic-reflection",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'TTJets_signal': 0.9214735847990575,\n",
       " 'QCD': 0.7326753274979056,\n",
       " 'TTJets_signal_jes_up': 0.9073829655543513,\n",
       " 'TTJets_signal_jes_down': 0.9379497171282354,\n",
       " 'TTJets_signal_jes_up_old': 0.9055324626482582,\n",
       " 'TTJets_signal_jes_down_old': 0.9433344245523222,\n",
       " 'TTJets_signal_jer_up': 0.926566087047167,\n",
       " 'TTJets_signal_jer_down': 0.9169003961745567,\n",
       " 'TTJets_signal_tau_eup': 0.9010504163419091,\n",
       " 'TTJets_signal_tau_edown': 0.9812991582128759,\n",
       " 'TTJets_signal_met_up': 0.9163804015139916,\n",
       " 'TTJets_signal_met_down': 0.9121222228996663,\n",
       " 'TTJets_signal_btag_up': 0.8970466011707324,\n",
       " 'TTJets_signal_btag_down': 0.9472435772021791,\n",
       " 'TTJets_signal_trigger_up': 0.8861901800043589,\n",
       " 'TTJets_signal_trigger_down': 0.9578592908616802,\n",
       " 'TTJets_signal_xsec_up': 0.8472600249634797,\n",
       " 'TTJets_signal_xsec_down': 1.0055200182853785,\n",
       " 'TTJets_signal_pdf_up': 0.812587397747121,\n",
       " 'TTJets_signal_pdf_down': 1.045127011948263}"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sfs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "needed-fight",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TTJets_signal 0.0\n",
      "TTJets_signal_jes_up 0.015291397905647961\n",
      "TTJets_signal_jes_down -0.01788020036707919\n",
      "TTJets_signal_jes_up_old 0.017299597529185355\n",
      "TTJets_signal_jes_down_old -0.023723783420261373\n",
      "TTJets_signal_jer_up -0.005526476647966024\n",
      "TTJets_signal_jer_down 0.0049629079986032425\n",
      "TTJets_signal_tau_eup 0.022163596215947993\n",
      "TTJets_signal_tau_edown -0.06492380725907015\n",
      "TTJets_signal_met_up 0.005527215721736146\n",
      "TTJets_signal_met_down 0.010148269091653289\n",
      "TTJets_signal_btag_up 0.026508609721733672\n",
      "TTJets_signal_btag_down -0.027966067425298124\n",
      "TTJets_signal_trigger_up 0.03829019667708948\n",
      "TTJets_signal_trigger_down -0.0394864341885147\n",
      "TTJets_signal_xsec_up 0.0805379134679821\n",
      "TTJets_signal_xsec_down -0.09120872792533573\n",
      "TTJets_signal_pdf_up 0.11816528313796533\n",
      "TTJets_signal_pdf_down -0.13419096237703887\n"
     ]
    }
   ],
   "source": [
    "for sample, sf in sfs.items():\n",
    "    if \"TTJets\" in sample:\n",
    "        print( sample, (sfs[\"TTJets_signal\"] - sf) / sfs[\"TTJets_signal\"] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "biological-beast",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "overhead-greene",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "hollywood-madagascar",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "different-genome",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "synthetic-hobby",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "wooden-stomach",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "southeast-compound",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "stuffed-observer",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
